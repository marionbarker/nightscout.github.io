{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Nightscout \u2301 Introduction \u2301 Nightscout (also known as \"CGM in the Cloud\" ) is an open-source cloud application used by people with diabetes and parents of kids with diabetes to visualize, store and share the data from their Continuous Glucose Monitoring sensors in real-time. Once setup, Nightscout acts as a central repository of blood glucose and insulin dosing/treatment data for a single person, allowing you to view the CGM graph and treatment data anywhere using just a web browser connected to the internet. There are several parts to this system. You need somewhere online to store/process/visualize this data ( a Nightscout Site ), something to upload CGM data to your Nightscout ( an Uploader ), and then optionally you can use other devices to access/view this data ( one - or more - Follower ): Nightscout Site \u2301 The Nightscout cloud application can be installed by yourself using hosting services from various cloud service providers. Although not necessary, you might prefer to use paid hosting services for your database (to avoid future maintenance tasks) or indeed pay to use a fully-managed Nightscout hosting service to avoid having to personally build and maintain your site yourself. Uploader \u2301 The CGM data is usually sent to Nightscout by an uploader device (often known as an \"Uploader\" ) such as a mobile/cellphone running an app such as xDrip+, Spike, xDrip4iOS or Medtronic Uploader. Alternatively, the CGM data can be pulled directly from your online Dexcom or Medtronic CareLink accounts. The application you'll need for uploading the data depends on which CGM device you're using and what type of mobile device you have. Once you've read this page (yes - all the way to the bottom!), you can find more information here about Uploaders . Followers \u2301 In addition to viewing the data using a web browser, there are also applications available for mobile devices, smartwatches, electronic devices and other cloud-based services which allow you alternative ways to view and interact with the information stored within your Nightscout site (often known as \"Followers\" ). Development History \u2301 Nightscout was developed by people with Type 1 Diabetes and parents of kids with T1D and has continued to be developed, maintained, and supported by volunteers, clinical use, and commercial sponsorship. The web portal known as Nightscout is made by the CGM Remote Monitor Contributors and the Nightscout community over years. When first implemented, Nightscout was a solution specifically for remote monitoring of Dexcom G4 CGM data. Today, there are Nightscout solutions available for nearly all commercial CGM sensors. The goal of the project is to allow the remote monitoring, sharing and analysis of any T1D's glucose levels using existing monitoring devices. What are the values of Nightscout \u2301 We are compelled in the pursuit of humane and equitable application of technology to liberating people from the burden of diabetes . We are not waiting to deliver the benefits we've found in sharing all diabetes experiences . Nightscout is free to contribute, free to access, free to criticize, free to try, free to depend on, free to modify, and free to distribute. The Nightscout community demands respect and dignity for all community members. The reputation of the Nightscout community is affected by the quality of the source code, the quality of our relationships, the quality of our discussions, what we are known for doing: the way we treat each other. Users of Nightscout are impacted by reliability , security and confidentiality of Nightscout. Therefore, the developers and contributors of Nightscout strive to improve the quality of Nightscout while making these opportunities accessible to all. Nightscout's longevity , the application, the ecosystem, and the culture demand we use all tools at our disposable to achieve the values in a sustainable way. We are not waiting to do whatever it takes to meet the needs of people affected by the inhumane demands of diabetes. Our active collaboration against the burden of diabetes creates the results we desire. What Do I Need? \u2301 You really don't need too much to get Nightscout up and running but let's start with the basics. Are you sitting comfortably? Then let's begin. You will need: A CGM sensor: Dexcom, Medtronic, Libre (plus an additional transmitter) or Eversense A way to upload your data (this is generally an internet-connected mobile phone with a matching uploader app) Internet access 1 hour of \"quiet\" time (a beer nice cup of coffee is optional but highly recommended) Basic computer skills and the ability to carefully follow the installation guides shown on this site \"Carefully\" means that you will thoroughly read, follow and complete each step without skipping any and without giving up thinking that it is too difficult - it isn't, you just need to be patient. IMPORTANT Before using Nightscout, it is important to understand that this project: is an open-source, community-based project and is not supported by any company is not officially approved or regulated for diabetes therapy and/or treatment in any way You must understand that you take full responsibility for building and running this system and you agree to do so at your own risk. SAFETY This project requires a working internet connection and availability of third-party cloud services Do not rely only on Nightscout as the only way you have of knowing your blood glucose values and trends Make sure you're ready to cope with an unexpected failure and always have alternative ways to check your blood glucose levels How Much Does It Cost? \u2301 It is possible to run Nightscout for free. Classic DIY Nightscout requires free accounts at three companies: GitHub, MongoDB, and Heroku. All three of which will demand some sort of maintenance and will generate sales and warning emails over the course of the years. DIY Nightscout is unfortunately not set it and forget it and will require upgrades and even platform changes to follow software evolutions or policies of the companies used when you created your site. There ain't no such thing as a free lunch You might not pay for service, but also this means you'll be spending a lot of hours on this. Free databases like the Atlas M0 Sandbox provided by MongoDB will hold a limited amount of data (512MB) and you may eventually need to delete old records (maybe every 3-4 years with standard Nightscout CGM usage). You can increase even further the database capacity to 2GB/5GB ($9/$25 USD/month) by paying for an M2/M5 Shared Cluster if you wish. Application servers such as Heroku 's \"Free\" plan will provide enough server hours to run a single Nightscout site without any downtime. If you need to run several sites on the same account, have \"never sleeping\" apps, you can easily upgrade to a paid \"Hobby\" plan ($7 per dyno per month). Nightscout as a Service \u2301 If you prefer to pay and just use Nightscout as a fully managed service and let somebody else worry about installation and maintenance then T1Pal could be exactly what you need. The developers recommend paid support for high quality, reliable service. The developers recommend T1Pal in order to augment the sustainability of the Nightscout Project. The monthly subscription for T1Pal is $11.99 USD/month. The T1Pal hosting service has been developed by Ben West , a member of the original CGM in the Cloud team and an original lead core developer for the Nightscout Project. Database and server administration is automated and managed automatically as part of the service. Contact T1Pal support to request specific features or versions. File a support ticket by emailing support at t1pal.com , or select \"Get Support\" from My Account . 10BE (full managed Nightscout Service) \u2301 ns.10BE.de was started in Nov 2017 and offers full managed Nightscout Services. You can create Nightscout with a few clicks and you don't have to worry about maintenance, nightscout updates or MongoDB- and CPU Limits/Space. The servers are located in different data centers (fail-safe) in Germany and Finland/France (can be selected). And are watched by [monitoring from uptimerobot](https://10be.de/en/status.html) and our own Slackbot and when a Server was down, it restarts self and send a twitter message. It is 10BE for free? Not anymore, because the costs were simply not covered by the donations. A Nightscout Instance will be costs 4,99 Euro a month, but how larger the interval, then more discount there is. You got every 6-8 hours a Backup of your Database and Settings. You can import the Data from your old Nightscout Instance or MongoDB-Database or upload Data (freestyle, dexcom, omnipod, csv) via CSV File. To see what you will get for it, take a look at our features page . The registration is free. Support: support @ ns.10be.de or https://10be.de/en/contact.html or https://twitter.com/10be_de or https://www.facebook.com/10be.de Who Can Help Me? \u2301 You will find many willing and open-hearted people in the Facebook groups. The main group for all Nightscout support is the \" CGM in the Cloud \" Facebook group. There are also many local Nightscout communities and you'll probably be able to find one in your own country and language if this helps. Technical Support This project is often considered \" Do It Yourself \" (DIY) and supported by volunteers. Whilst you will almost certainly always will find someone ready to help you for free, building your own Nightscout site doesn't entitle you to any form of support from anybody. The open-source diabetes movement is founded on the idea of paying it forward and helping others to learn things that others took their time to help teach you about. Ask nicely, and nice people will always do nice things and help you. Nightscout developers are busy people and we'd like them to concentrate on maintaining and improving Nightscout, not only supporting users. (This means do not send them private messages or friend requests just to help fix something that is already clearly documented or for help that can be easily requested in the CGM in the Cloud group) Facebook Privacy You'll find a lot of useful and friendly diabetes-oriented groups on Facebook and it's probably the best place to find online support. Some people express concerns about using Facebook: if you're worried about your privacy just remember Facebook will only share the information that you allow it to share. How to Use These Docs \u2301 Use the navigation menu at the top of the screen to find the section that you are looking for. A Table of Contents for the current page is always displayed on the left side of the screen. You can search the Nightscout Docs site by clicking the Search icon at the top of every page: How Can I Help? \u2301 You'll find the source repository for this documentation here . Please don't hesitate to improve or correct anything you see and create a pull request! You're also welcome to contribute or report any error, unclear explanation, typo, broken link etc by going to Github and opening an issue . Finally, to help on the development of Nightscout itself, feel free to join in at our Discord Channel .","title":"What is Nightscout?"},{"location":"#welcome-to-nightscout","text":"","title":"Welcome to Nightscout"},{"location":"#introduction","text":"Nightscout (also known as \"CGM in the Cloud\" ) is an open-source cloud application used by people with diabetes and parents of kids with diabetes to visualize, store and share the data from their Continuous Glucose Monitoring sensors in real-time. Once setup, Nightscout acts as a central repository of blood glucose and insulin dosing/treatment data for a single person, allowing you to view the CGM graph and treatment data anywhere using just a web browser connected to the internet. There are several parts to this system. You need somewhere online to store/process/visualize this data ( a Nightscout Site ), something to upload CGM data to your Nightscout ( an Uploader ), and then optionally you can use other devices to access/view this data ( one - or more - Follower ):","title":"Introduction"},{"location":"#nightscout-site","text":"The Nightscout cloud application can be installed by yourself using hosting services from various cloud service providers. Although not necessary, you might prefer to use paid hosting services for your database (to avoid future maintenance tasks) or indeed pay to use a fully-managed Nightscout hosting service to avoid having to personally build and maintain your site yourself.","title":"Nightscout Site"},{"location":"#uploader","text":"The CGM data is usually sent to Nightscout by an uploader device (often known as an \"Uploader\" ) such as a mobile/cellphone running an app such as xDrip+, Spike, xDrip4iOS or Medtronic Uploader. Alternatively, the CGM data can be pulled directly from your online Dexcom or Medtronic CareLink accounts. The application you'll need for uploading the data depends on which CGM device you're using and what type of mobile device you have. Once you've read this page (yes - all the way to the bottom!), you can find more information here about Uploaders .","title":"Uploader"},{"location":"#followers","text":"In addition to viewing the data using a web browser, there are also applications available for mobile devices, smartwatches, electronic devices and other cloud-based services which allow you alternative ways to view and interact with the information stored within your Nightscout site (often known as \"Followers\" ).","title":"Followers"},{"location":"#development-history","text":"Nightscout was developed by people with Type 1 Diabetes and parents of kids with T1D and has continued to be developed, maintained, and supported by volunteers, clinical use, and commercial sponsorship. The web portal known as Nightscout is made by the CGM Remote Monitor Contributors and the Nightscout community over years. When first implemented, Nightscout was a solution specifically for remote monitoring of Dexcom G4 CGM data. Today, there are Nightscout solutions available for nearly all commercial CGM sensors. The goal of the project is to allow the remote monitoring, sharing and analysis of any T1D's glucose levels using existing monitoring devices.","title":"Development History"},{"location":"#what-are-the-values-of-nightscout","text":"We are compelled in the pursuit of humane and equitable application of technology to liberating people from the burden of diabetes . We are not waiting to deliver the benefits we've found in sharing all diabetes experiences . Nightscout is free to contribute, free to access, free to criticize, free to try, free to depend on, free to modify, and free to distribute. The Nightscout community demands respect and dignity for all community members. The reputation of the Nightscout community is affected by the quality of the source code, the quality of our relationships, the quality of our discussions, what we are known for doing: the way we treat each other. Users of Nightscout are impacted by reliability , security and confidentiality of Nightscout. Therefore, the developers and contributors of Nightscout strive to improve the quality of Nightscout while making these opportunities accessible to all. Nightscout's longevity , the application, the ecosystem, and the culture demand we use all tools at our disposable to achieve the values in a sustainable way. We are not waiting to do whatever it takes to meet the needs of people affected by the inhumane demands of diabetes. Our active collaboration against the burden of diabetes creates the results we desire.","title":"What are the values of Nightscout"},{"location":"#what-do-i-need","text":"You really don't need too much to get Nightscout up and running but let's start with the basics. Are you sitting comfortably? Then let's begin. You will need: A CGM sensor: Dexcom, Medtronic, Libre (plus an additional transmitter) or Eversense A way to upload your data (this is generally an internet-connected mobile phone with a matching uploader app) Internet access 1 hour of \"quiet\" time (a beer nice cup of coffee is optional but highly recommended) Basic computer skills and the ability to carefully follow the installation guides shown on this site \"Carefully\" means that you will thoroughly read, follow and complete each step without skipping any and without giving up thinking that it is too difficult - it isn't, you just need to be patient. IMPORTANT Before using Nightscout, it is important to understand that this project: is an open-source, community-based project and is not supported by any company is not officially approved or regulated for diabetes therapy and/or treatment in any way You must understand that you take full responsibility for building and running this system and you agree to do so at your own risk. SAFETY This project requires a working internet connection and availability of third-party cloud services Do not rely only on Nightscout as the only way you have of knowing your blood glucose values and trends Make sure you're ready to cope with an unexpected failure and always have alternative ways to check your blood glucose levels","title":"What Do I Need?"},{"location":"#how-much-does-it-cost","text":"It is possible to run Nightscout for free. Classic DIY Nightscout requires free accounts at three companies: GitHub, MongoDB, and Heroku. All three of which will demand some sort of maintenance and will generate sales and warning emails over the course of the years. DIY Nightscout is unfortunately not set it and forget it and will require upgrades and even platform changes to follow software evolutions or policies of the companies used when you created your site. There ain't no such thing as a free lunch You might not pay for service, but also this means you'll be spending a lot of hours on this. Free databases like the Atlas M0 Sandbox provided by MongoDB will hold a limited amount of data (512MB) and you may eventually need to delete old records (maybe every 3-4 years with standard Nightscout CGM usage). You can increase even further the database capacity to 2GB/5GB ($9/$25 USD/month) by paying for an M2/M5 Shared Cluster if you wish. Application servers such as Heroku 's \"Free\" plan will provide enough server hours to run a single Nightscout site without any downtime. If you need to run several sites on the same account, have \"never sleeping\" apps, you can easily upgrade to a paid \"Hobby\" plan ($7 per dyno per month).","title":"How Much Does It Cost?"},{"location":"#nightscout-as-a-service","text":"If you prefer to pay and just use Nightscout as a fully managed service and let somebody else worry about installation and maintenance then T1Pal could be exactly what you need. The developers recommend paid support for high quality, reliable service. The developers recommend T1Pal in order to augment the sustainability of the Nightscout Project. The monthly subscription for T1Pal is $11.99 USD/month. The T1Pal hosting service has been developed by Ben West , a member of the original CGM in the Cloud team and an original lead core developer for the Nightscout Project. Database and server administration is automated and managed automatically as part of the service. Contact T1Pal support to request specific features or versions. File a support ticket by emailing support at t1pal.com , or select \"Get Support\" from My Account .","title":"Nightscout as a Service"},{"location":"#10be-full-managed-nightscout-service","text":"ns.10BE.de was started in Nov 2017 and offers full managed Nightscout Services. You can create Nightscout with a few clicks and you don't have to worry about maintenance, nightscout updates or MongoDB- and CPU Limits/Space. The servers are located in different data centers (fail-safe) in Germany and Finland/France (can be selected). And are watched by [monitoring from uptimerobot](https://10be.de/en/status.html) and our own Slackbot and when a Server was down, it restarts self and send a twitter message. It is 10BE for free? Not anymore, because the costs were simply not covered by the donations. A Nightscout Instance will be costs 4,99 Euro a month, but how larger the interval, then more discount there is. You got every 6-8 hours a Backup of your Database and Settings. You can import the Data from your old Nightscout Instance or MongoDB-Database or upload Data (freestyle, dexcom, omnipod, csv) via CSV File. To see what you will get for it, take a look at our features page . The registration is free. Support: support @ ns.10be.de or https://10be.de/en/contact.html or https://twitter.com/10be_de or https://www.facebook.com/10be.de","title":"10BE (full managed Nightscout Service)"},{"location":"#who-can-help-me","text":"You will find many willing and open-hearted people in the Facebook groups. The main group for all Nightscout support is the \" CGM in the Cloud \" Facebook group. There are also many local Nightscout communities and you'll probably be able to find one in your own country and language if this helps. Technical Support This project is often considered \" Do It Yourself \" (DIY) and supported by volunteers. Whilst you will almost certainly always will find someone ready to help you for free, building your own Nightscout site doesn't entitle you to any form of support from anybody. The open-source diabetes movement is founded on the idea of paying it forward and helping others to learn things that others took their time to help teach you about. Ask nicely, and nice people will always do nice things and help you. Nightscout developers are busy people and we'd like them to concentrate on maintaining and improving Nightscout, not only supporting users. (This means do not send them private messages or friend requests just to help fix something that is already clearly documented or for help that can be easily requested in the CGM in the Cloud group) Facebook Privacy You'll find a lot of useful and friendly diabetes-oriented groups on Facebook and it's probably the best place to find online support. Some people express concerns about using Facebook: if you're worried about your privacy just remember Facebook will only share the information that you allow it to share.","title":"Who Can Help Me?"},{"location":"#how-to-use-these-docs","text":"Use the navigation menu at the top of the screen to find the section that you are looking for. A Table of Contents for the current page is always displayed on the left side of the screen. You can search the Nightscout Docs site by clicking the Search icon at the top of every page:","title":"How to Use These Docs"},{"location":"#how-can-i-help","text":"You'll find the source repository for this documentation here . Please don't hesitate to improve or correct anything you see and create a pull request! You're also welcome to contribute or report any error, unclear explanation, typo, broken link etc by going to Github and opening an issue . Finally, to help on the development of Nightscout itself, feel free to join in at our Discord Channel .","title":"How Can I Help?"},{"location":"nightscout/admin_tools/","text":"Admin Tools \u2301 Subjects and Roles \u2301 Information on how to use security on this dedicated page . Database Maintenance \u2301 Your Database will require maintenance as nothing in Nightscout is setup to perform cleanup and unless you planned for a larger size database it will eventually fill-up . Make sure you leave dbsize visible on your page to keep it under control. This panel will give access to basic maintenance actions on various database collections as defined in your site core variables. Mongo status Database \u2301 Your status database contains battery, pump, ... extra information as those defined in devicestatus that you can safely delete when necessary. When it comes to treatments and entries , deleting data is something you need to carefully evaluate if you like Nightscout to be the main repository for your history. Mongo treatments Database \u2301 Mongo entries Database \u2301 Remove future items from Database \u2301 Future treatments and entries generated by an incorrect time zone, daylight saving time change, or any other mistake can completely block your site. Using this feature will purge the database of these unwanted values automatically. Detected issues will appear in Database contains x future records and should be fixed.","title":"Admin Tools"},{"location":"nightscout/admin_tools/#admin-tools","text":"","title":"Admin Tools"},{"location":"nightscout/admin_tools/#subjects-and-roles","text":"Information on how to use security on this dedicated page .","title":"Subjects and Roles"},{"location":"nightscout/admin_tools/#database-maintenance","text":"Your Database will require maintenance as nothing in Nightscout is setup to perform cleanup and unless you planned for a larger size database it will eventually fill-up . Make sure you leave dbsize visible on your page to keep it under control. This panel will give access to basic maintenance actions on various database collections as defined in your site core variables.","title":"Database Maintenance"},{"location":"nightscout/admin_tools/#mongo-status-database","text":"Your status database contains battery, pump, ... extra information as those defined in devicestatus that you can safely delete when necessary. When it comes to treatments and entries , deleting data is something you need to carefully evaluate if you like Nightscout to be the main repository for your history.","title":"Mongo status Database"},{"location":"nightscout/admin_tools/#mongo-treatments-database","text":"","title":"Mongo treatments Database"},{"location":"nightscout/admin_tools/#mongo-entries-database","text":"","title":"Mongo entries Database"},{"location":"nightscout/admin_tools/#remove-future-items-from-database","text":"Future treatments and entries generated by an incorrect time zone, daylight saving time change, or any other mistake can completely block your site. Using this feature will purge the database of these unwanted values automatically. Detected issues will appear in Database contains x future records and should be fixed.","title":"Remove future items from Database"},{"location":"nightscout/close_loop/","text":"Nightscout and closed loop systems. \u2301 Nightscout is integrated with DIY closed loop systems. Look into the specific app documentation to know more about optimal Nightscout settings. The heading for each section is a link to the Nightscout overview page for that closed-loop system. Loop \u2301 Loop is an iOS app that assists in the many insulin dosing decisions people with diabetes face every day. You enter your own settings for desired correction range, basal schedule, insulin sensitivity factor (ISF), carbohydrate ratio (CR) and the type of insulin you are using. The glucose predictions, using your settings and meal entries, provide Loop with the information needed to modify insulin delivery to attain a targeted glucose range in the future. Once your Nightscout site is configured, use the New Variables for Loopers section of LoopDocs to update your Nightscout Config Vars. Facebook group: Looped OpenAPS \u2301 The Open Source Artificial Pancreas System (OpenAPS) is a safe but powerful, advanced but easily understandable, Artificial Pancreas System (APS) designed to automatically adjust an insulin pump\u2019s insulin delivery to keep blood glucose (BG) in a safe range at all times. It does this by communicating with an insulin pump to obtain details of all recent insulin dosing (basal and boluses), by communicating with a Continuous Glucose Monitor (CGM) to obtain current and recent BG estimates, and by issuing commands to the insulin pump to adjust insulin dosing as needed. Facebook group: Looped AAPS \u2301 AndroidAPS is an open source app for people living with insulin-dependent diabetes that acts as an artificial pancreas system (APS) on Google Android smartphones. Facebook group: Android APS Users","title":"Closed-loop Systems"},{"location":"nightscout/close_loop/#nightscout-and-closed-loop-systems","text":"Nightscout is integrated with DIY closed loop systems. Look into the specific app documentation to know more about optimal Nightscout settings. The heading for each section is a link to the Nightscout overview page for that closed-loop system.","title":"Nightscout and closed loop systems."},{"location":"nightscout/close_loop/#loop","text":"Loop is an iOS app that assists in the many insulin dosing decisions people with diabetes face every day. You enter your own settings for desired correction range, basal schedule, insulin sensitivity factor (ISF), carbohydrate ratio (CR) and the type of insulin you are using. The glucose predictions, using your settings and meal entries, provide Loop with the information needed to modify insulin delivery to attain a targeted glucose range in the future. Once your Nightscout site is configured, use the New Variables for Loopers section of LoopDocs to update your Nightscout Config Vars. Facebook group: Looped","title":"Loop"},{"location":"nightscout/close_loop/#openaps","text":"The Open Source Artificial Pancreas System (OpenAPS) is a safe but powerful, advanced but easily understandable, Artificial Pancreas System (APS) designed to automatically adjust an insulin pump\u2019s insulin delivery to keep blood glucose (BG) in a safe range at all times. It does this by communicating with an insulin pump to obtain details of all recent insulin dosing (basal and boluses), by communicating with a Continuous Glucose Monitor (CGM) to obtain current and recent BG estimates, and by issuing commands to the insulin pump to adjust insulin dosing as needed. Facebook group: Looped","title":"OpenAPS"},{"location":"nightscout/close_loop/#aaps","text":"AndroidAPS is an open source app for people living with insulin-dependent diabetes that acts as an artificial pancreas system (APS) on Google Android smartphones. Facebook group: Android APS Users","title":"AAPS"},{"location":"nightscout/discover/","text":"Welcome to your site \u2301 Privacy warning Having the URL of your Nightscout site, anybody can view your BG and run reports of your data. It it strongly recommended that you secure your site. It should look very similar to this when your uploader has added some data. The central part will show your recent BG, you can select how many hours you want to be displayed with Hours: 2 3 4 6 12 24 . The pale blue dots are the AR2 prevision as explained here . The lower part will display the last 48 hours and you can use the lower right selection to browse your old data. In the upper part you'll see the current time of your site, your current BG (and how long ago it was measured) plus the delta with the previous measurement and a trend arrow. More explanations here . Optionally you will see other indications (pills) that can be personalized in your variables and plugins like detailed here . Authenticate yourself \u2301 By default you site opens read only, you need to authenticate using your API secret in order to modify settings and add treatments. Click on the lock icon, enter your API secret and click Update . This will unlock your careportal ( if enabled ) and edit ( if enabled ). Add a treatment ( careportal ) \u2301 Some uploaders will send treatments to Nightscout but others won't. If you whish to do this manually, careportal is here for that. + will open an interface to manually enter treatments. In the Event Type drop down menu, you can select the treatment type you want to add. Additional available entries will depend on the plugins you enabled like Loop and OpenAPS/AAPS. BG Check \u2301 BG check allows you to enter a blood glucose reading value from your Meter . With a CGM using Sensor reading doesn't add much value. Keep in mind the value will be inserted now (unless you modify the event time) and might not match your CGM value for non stable BG due to capillary time lag. Correction Bolus \u2301 Correction Bolus allows you to enter the amount of insulin units injected for a correction. It will show as a circle with the lower half blue, with its size depending on the amount of units, UI indicated below (depending on bolus rendering setting). Meal Bolus \u2301 Carb Correction \u2301 Snack Bolus \u2301 These treatments allow you to enter the amount of food you eat (and eventually the matching insulin treatment). It will show as a circle with the higher half white (if including carbs), with its size depending on the amount of food. Without carbs the upper half will not be filled with the white color. If you add proteins and fat, the amount will display in this order: carbs/proteins/fat . With insulin the lower half of the circle will fill in blue and units will be indicated below. You can select the timing of carbs absorption in Carb Time (i.e. when did you or will you actually eat these carbs) Combo Bolus \u2301 Combo bolus allows you to insert the corresponding bolus if you use a pump. Insert the total amount of insulin in Insulin Given then break down in Split with the percentage administered now and the extended amount. Enter the Duration of the extended bolus below. It will display as a classic bolus at treatment time and basal will reflect the extended amount for the selected duration. Announcement \u2301 Announcements are used to change your page title in order to alert viewers. Entering another treatment will acknowledge the announcement and return your page title to default . Note \u2301 Question \u2301 Notes and questions are a way to add comments and interact with others using your Nightscout page. Exercise \u2301 You can log physical activities and specify the duration. Pump Site Change cage \u2301 CGM Sensor Start sage \u2301 CGM Sensor Insert \u2301 CGM Sensor Stop \u2301 Pump Battery Change bage \u2301 Insulin Cartridge Change iage \u2301 Logging these events will help you remember various expirations dates and will update the corresponding pills if enabled. Temp Basal Start \u2301 Temp Basal Stop \u2301 You can indicate temporary basal rate changes using either a percentage change in Percent or the absolute rate in Basal value . You need basal to be enabled to visualize it. Profile Switch \u2301 If you have more than one profile stored, you can switch profile to keep your profile parameters synchronized. For a temporary switch (like for physical activities) you can select the duration. D.A.D. Alert \u2301 Log a Diabetic Alert Dog event. Edit Mode ( edit ) \u2301 For values still present on your display (last 48 hours), you can use Edit to move or delete bolus and correction treatments. will change color to red in edit mode . Drag the treatment in the past or future in the black area to move both food and insulin. If you want to move only insulin drop in the blue area. For carbs only, in the white area. To delete a complete treatment drop it in the red delete area. Once done, exit the edit mode by de-selecting it (white on black background). Drawer Menu \u2301 Once authenticated (click the lock icon up right) you'll find many features in the drawer menu like access to advanced plugins and customizations of your web page (local view only, in order to modify the default view look into your Heroku variables here ). Reports will drive you to a powerful reporting toolset detailed here . Profile Editor will allow you to modify and add profiles, see here . Food Editor handles your customized food database . Admin Tools gives you access control and database tools, see here . Simple views: \u2301 Clock - Shows current BG, trend arrow, and time of day. Grey text on a black background. Color - Shows current BG and trend arrow. White text on a color background. Simple - Shows current BG. Grey text on a black background. [+] - Create custom, simplified views using a predefined set of elements. List of available items: SGV - Sensor Glucose Value SGV age - time since the last SGV read SGV delta - change of SGV in the last 5 minutes Trend arrow - icon of the SG trend Time - current time Line break - invisible item that will move following items to the next line (by default all are showing on the same level) All visible items have Size property which allows to customize the view even more. Also, all items may appear multiple times on the view. Apart from adding items, it is possible to customize other aspects of the views, like selecting Color or Black background. The first one will indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). Show SGV age option will make SGV age item appear Always or only if the predefined threshold is reached: Only after threshold . Breaching SGV age threshold will also make Color background turn grey and strike through SGV . Clock view configurator will generate an URL (available under Open my clock view! link) that could be bookmarked. If you launch one of these views in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view. Settings: \u2301 You can customize your view using Settings. Changes will only be applied to your current browser view, if you want to make these settings default for any browser you need to change directly the corresponding system variables indicated below and add the corresponding plugins in SHOW_PLUGINS . You need to authenticate to save your settings. Units DISPLAY_UNITS \u2301 Date Format TIME_FORMAT \u2301 Language LANGUAGE \u2301 Scale SCALE_Y \u2301 Render Basal BASAL_RENDER \u2301 Render Bolus Amount BOLUS_RENDER_OVER \u2301 Alarms ALARM \u2301 Edit Mode EDIT Show Raw BG Data rawbg Custom Title CUSTOM_TITLE Theme THEME Show Plugins SHOW_PLUGINS In order to Save your changes you need to Authenticate, click Authenticate and enter your API Secret . Reset, and use defaults will reverse your changes to defaults from your Heroku config variables . In About you'll see your current Nightscout version.","title":"Discover your site"},{"location":"nightscout/discover/#welcome-to-your-site","text":"Privacy warning Having the URL of your Nightscout site, anybody can view your BG and run reports of your data. It it strongly recommended that you secure your site. It should look very similar to this when your uploader has added some data. The central part will show your recent BG, you can select how many hours you want to be displayed with Hours: 2 3 4 6 12 24 . The pale blue dots are the AR2 prevision as explained here . The lower part will display the last 48 hours and you can use the lower right selection to browse your old data. In the upper part you'll see the current time of your site, your current BG (and how long ago it was measured) plus the delta with the previous measurement and a trend arrow. More explanations here . Optionally you will see other indications (pills) that can be personalized in your variables and plugins like detailed here .","title":"Welcome to your site"},{"location":"nightscout/discover/#authenticate-yourself","text":"By default you site opens read only, you need to authenticate using your API secret in order to modify settings and add treatments. Click on the lock icon, enter your API secret and click Update . This will unlock your careportal ( if enabled ) and edit ( if enabled ).","title":"Authenticate yourself"},{"location":"nightscout/discover/#add-a-treatment-careportal","text":"Some uploaders will send treatments to Nightscout but others won't. If you whish to do this manually, careportal is here for that. + will open an interface to manually enter treatments. In the Event Type drop down menu, you can select the treatment type you want to add. Additional available entries will depend on the plugins you enabled like Loop and OpenAPS/AAPS.","title":"Add a treatment (careportal)"},{"location":"nightscout/discover/#bg-check","text":"BG check allows you to enter a blood glucose reading value from your Meter . With a CGM using Sensor reading doesn't add much value. Keep in mind the value will be inserted now (unless you modify the event time) and might not match your CGM value for non stable BG due to capillary time lag.","title":"BG Check"},{"location":"nightscout/discover/#correction-bolus","text":"Correction Bolus allows you to enter the amount of insulin units injected for a correction. It will show as a circle with the lower half blue, with its size depending on the amount of units, UI indicated below (depending on bolus rendering setting).","title":"Correction Bolus"},{"location":"nightscout/discover/#meal-bolus","text":"","title":"Meal Bolus"},{"location":"nightscout/discover/#carb-correction","text":"","title":"Carb Correction"},{"location":"nightscout/discover/#snack-bolus","text":"These treatments allow you to enter the amount of food you eat (and eventually the matching insulin treatment). It will show as a circle with the higher half white (if including carbs), with its size depending on the amount of food. Without carbs the upper half will not be filled with the white color. If you add proteins and fat, the amount will display in this order: carbs/proteins/fat . With insulin the lower half of the circle will fill in blue and units will be indicated below. You can select the timing of carbs absorption in Carb Time (i.e. when did you or will you actually eat these carbs)","title":"Snack Bolus"},{"location":"nightscout/discover/#combo-bolus","text":"Combo bolus allows you to insert the corresponding bolus if you use a pump. Insert the total amount of insulin in Insulin Given then break down in Split with the percentage administered now and the extended amount. Enter the Duration of the extended bolus below. It will display as a classic bolus at treatment time and basal will reflect the extended amount for the selected duration.","title":"Combo Bolus"},{"location":"nightscout/discover/#announcement","text":"Announcements are used to change your page title in order to alert viewers. Entering another treatment will acknowledge the announcement and return your page title to default .","title":"Announcement"},{"location":"nightscout/discover/#note","text":"","title":"Note"},{"location":"nightscout/discover/#question","text":"Notes and questions are a way to add comments and interact with others using your Nightscout page.","title":"Question"},{"location":"nightscout/discover/#exercise","text":"You can log physical activities and specify the duration.","title":"Exercise"},{"location":"nightscout/discover/#pump-site-change-cage","text":"","title":"Pump Site Change cage"},{"location":"nightscout/discover/#cgm-sensor-start-sage","text":"","title":"CGM Sensor Start sage"},{"location":"nightscout/discover/#cgm-sensor-insert","text":"","title":"CGM Sensor Insert"},{"location":"nightscout/discover/#cgm-sensor-stop","text":"","title":"CGM Sensor Stop"},{"location":"nightscout/discover/#pump-battery-change-bage","text":"","title":"Pump Battery Change bage"},{"location":"nightscout/discover/#insulin-cartridge-change-iage","text":"Logging these events will help you remember various expirations dates and will update the corresponding pills if enabled.","title":"Insulin Cartridge Change iage"},{"location":"nightscout/discover/#temp-basal-start","text":"","title":"Temp Basal Start"},{"location":"nightscout/discover/#temp-basal-stop","text":"You can indicate temporary basal rate changes using either a percentage change in Percent or the absolute rate in Basal value . You need basal to be enabled to visualize it.","title":"Temp Basal Stop"},{"location":"nightscout/discover/#profile-switch","text":"If you have more than one profile stored, you can switch profile to keep your profile parameters synchronized. For a temporary switch (like for physical activities) you can select the duration.","title":"Profile Switch"},{"location":"nightscout/discover/#dad-alert","text":"Log a Diabetic Alert Dog event.","title":"D.A.D. Alert"},{"location":"nightscout/discover/#edit-mode-edit","text":"For values still present on your display (last 48 hours), you can use Edit to move or delete bolus and correction treatments. will change color to red in edit mode . Drag the treatment in the past or future in the black area to move both food and insulin. If you want to move only insulin drop in the blue area. For carbs only, in the white area. To delete a complete treatment drop it in the red delete area. Once done, exit the edit mode by de-selecting it (white on black background).","title":"Edit Mode (edit)"},{"location":"nightscout/discover/#drawer-menu","text":"Once authenticated (click the lock icon up right) you'll find many features in the drawer menu like access to advanced plugins and customizations of your web page (local view only, in order to modify the default view look into your Heroku variables here ). Reports will drive you to a powerful reporting toolset detailed here . Profile Editor will allow you to modify and add profiles, see here . Food Editor handles your customized food database . Admin Tools gives you access control and database tools, see here .","title":"Drawer Menu"},{"location":"nightscout/discover/#simple-views","text":"Clock - Shows current BG, trend arrow, and time of day. Grey text on a black background. Color - Shows current BG and trend arrow. White text on a color background. Simple - Shows current BG. Grey text on a black background. [+] - Create custom, simplified views using a predefined set of elements. List of available items: SGV - Sensor Glucose Value SGV age - time since the last SGV read SGV delta - change of SGV in the last 5 minutes Trend arrow - icon of the SG trend Time - current time Line break - invisible item that will move following items to the next line (by default all are showing on the same level) All visible items have Size property which allows to customize the view even more. Also, all items may appear multiple times on the view. Apart from adding items, it is possible to customize other aspects of the views, like selecting Color or Black background. The first one will indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above). Show SGV age option will make SGV age item appear Always or only if the predefined threshold is reached: Only after threshold . Breaching SGV age threshold will also make Color background turn grey and strike through SGV . Clock view configurator will generate an URL (available under Open my clock view! link) that could be bookmarked. If you launch one of these views in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.","title":"Simple views:"},{"location":"nightscout/discover/#settings","text":"You can customize your view using Settings. Changes will only be applied to your current browser view, if you want to make these settings default for any browser you need to change directly the corresponding system variables indicated below and add the corresponding plugins in SHOW_PLUGINS . You need to authenticate to save your settings.","title":"Settings:"},{"location":"nightscout/discover/#units-display_units","text":"","title":"Units DISPLAY_UNITS"},{"location":"nightscout/discover/#date-format-time_format","text":"","title":"Date Format TIME_FORMAT"},{"location":"nightscout/discover/#language-language","text":"","title":"Language LANGUAGE"},{"location":"nightscout/discover/#scale-scale_y","text":"","title":"Scale SCALE_Y"},{"location":"nightscout/discover/#render-basal-basal_render","text":"","title":"Render Basal BASAL_RENDER"},{"location":"nightscout/discover/#render-bolus-amount-bolus_render_over","text":"","title":"Render Bolus Amount BOLUS_RENDER_OVER"},{"location":"nightscout/discover/#alarms-alarm","text":"Edit Mode EDIT Show Raw BG Data rawbg Custom Title CUSTOM_TITLE Theme THEME Show Plugins SHOW_PLUGINS In order to Save your changes you need to Authenticate, click Authenticate and enter your API Secret . Reset, and use defaults will reverse your changes to defaults from your Heroku config variables . In About you'll see your current Nightscout version.","title":"Alarms ALARM"},{"location":"nightscout/downloaders/","text":"How to display your Nightscout data outside of a web browser. \u2301 Smartwatches See the dedicated page here . Note: indicates applications compliant to Nightscout secure settings . Android \u2301 xDrip+ \u2301 Select the Nightscout Follower data source and type your Nightscout URL: https://HerokuAppName.herokuapp.com For a secured site: https://API_SECRET_or_Token@HerokuAppName.herokuapp.com Facebook group xDrip AndroidAPS NSClient \u2301 Facebook group AndroidAPS Users Nightwatch \u2301 Nightwatch is not maintained anymore and might not work with recent Android versions. Switching to xDrip+ is recommended. Glimp \u2301 In Settings, Cloud, Nightscout, select Download only and type your Nightscout URL. Diabox \u2301 In Settings, set Data Collection to Follower, select Nightscout and type your Nightscout URL. iOS \u2301 Nightscout \u2301 Nightscout X \u2301 Nightguard \u2301 GitHub Nightscouter \u2301 GitHub Loop Follow \u2301 Spike \u2301 Look here . xDrip4iOS \u2301 Set xDrip4iOS to follower mode and enable Nightscout, type your Nightscout URL. Facebook group xDrip4iOS sugarmate \u2301 Add Nightscout as a data source, type your Nightscout URL. NightscoutMenuBar \u2301 BitBar Nightscout \u2301 Windows \u2301 FloatingGlucose \u2301 Displays \u2301 M5Stack NightscoutMon \u2301 Facebook group M5STACK NIGHTSCOUT M5Stick NightscoutMon \u2301 Nightscout PyPortal \u2301 Blog SugarPiDisplay \u2301","title":"Follower Devices"},{"location":"nightscout/downloaders/#how-to-display-your-nightscout-data-outside-of-a-web-browser","text":"Smartwatches See the dedicated page here . Note: indicates applications compliant to Nightscout secure settings .","title":"How to display your Nightscout data outside of a web browser."},{"location":"nightscout/downloaders/#android","text":"","title":"Android"},{"location":"nightscout/downloaders/#xdrip","text":"Select the Nightscout Follower data source and type your Nightscout URL: https://HerokuAppName.herokuapp.com For a secured site: https://API_SECRET_or_Token@HerokuAppName.herokuapp.com Facebook group xDrip","title":"xDrip+"},{"location":"nightscout/downloaders/#androidaps-nsclient","text":"Facebook group AndroidAPS Users","title":"AndroidAPS NSClient"},{"location":"nightscout/downloaders/#nightwatch","text":"Nightwatch is not maintained anymore and might not work with recent Android versions. Switching to xDrip+ is recommended.","title":"Nightwatch"},{"location":"nightscout/downloaders/#glimp","text":"In Settings, Cloud, Nightscout, select Download only and type your Nightscout URL.","title":"Glimp"},{"location":"nightscout/downloaders/#diabox","text":"In Settings, set Data Collection to Follower, select Nightscout and type your Nightscout URL.","title":"Diabox"},{"location":"nightscout/downloaders/#ios","text":"","title":"iOS"},{"location":"nightscout/downloaders/#nightscout","text":"","title":"Nightscout"},{"location":"nightscout/downloaders/#nightscout-x","text":"","title":"Nightscout X"},{"location":"nightscout/downloaders/#nightguard","text":"GitHub","title":"Nightguard"},{"location":"nightscout/downloaders/#nightscouter","text":"GitHub","title":"Nightscouter"},{"location":"nightscout/downloaders/#loop-follow","text":"","title":"Loop Follow"},{"location":"nightscout/downloaders/#spike","text":"Look here .","title":"Spike"},{"location":"nightscout/downloaders/#xdrip4ios","text":"Set xDrip4iOS to follower mode and enable Nightscout, type your Nightscout URL. Facebook group xDrip4iOS","title":"xDrip4iOS"},{"location":"nightscout/downloaders/#sugarmate","text":"Add Nightscout as a data source, type your Nightscout URL.","title":"sugarmate"},{"location":"nightscout/downloaders/#nightscoutmenubar","text":"","title":"NightscoutMenuBar"},{"location":"nightscout/downloaders/#bitbar-nightscout","text":"","title":"BitBar Nightscout"},{"location":"nightscout/downloaders/#windows","text":"","title":"Windows"},{"location":"nightscout/downloaders/#floatingglucose","text":"","title":"FloatingGlucose"},{"location":"nightscout/downloaders/#displays","text":"","title":"Displays"},{"location":"nightscout/downloaders/#m5stack-nightscoutmon","text":"Facebook group M5STACK NIGHTSCOUT","title":"M5Stack NightscoutMon"},{"location":"nightscout/downloaders/#m5stick-nightscoutmon","text":"","title":"M5Stick NightscoutMon"},{"location":"nightscout/downloaders/#nightscout-pyportal","text":"Blog","title":"Nightscout PyPortal"},{"location":"nightscout/downloaders/#sugarpidisplay","text":"","title":"SugarPiDisplay"},{"location":"nightscout/ifttt/","text":"IFTTT Integration \u2301 If This, Then That (IFTTT) is a useful Nightscout integration. By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more. Step 1: Get your API Secret Hash \u2301 First we need to gather one thing called your \"hashed API Secret\". In your internet browser, open a \"console\" window while viewing your Nightscout site. Make sure you have \"authenticated\" your site by using your API secret in the Nightscout settings area (hint: if you see a little padlock in the upper left corner of the site, you haven't authenticated it). Refresh the site and your hashed secret key will be shown as \"apisecrethash: \"xxxxxxxxxx...\"\" For Safari users on Mac , you can open the console window by selecting \"Develop\" from the Safari top menu, and then \"Show Page Source\" (if you do not see \"Develop\" in the top menu, activate it by going to Safari > Preferences... > Advanced, and checking the \"Show Develop menu in menu bar\" option). If you're having problems seeing the apisecrethash, click the little grey triangle next to the \"status isAuthenticated\" line and the objects below it will display (see screenshot). Your hashed API secret can be copied and pasted from that line, as shown below. Save that somewhere easy to get to again, because you will be using it later. For Chrome users , the console window is found through the View >> Developer >> View Source. Click on the Console tab and scroll to find the \"status isAuthenticated\" row to find your apisecrethash. Copy your API hash to somewhere you can retreive it again, we will be copy/pasting it in Step 2. Step 2: Create your \"Applets\" \u2301 IFTTT calls their little actions that you'll create an \"applet\". I have no idea why. But, I will go along and use their terminology so we are all consistent. We are basically interested in creating applets that will be buttons on your phone to do cool things in Nightscout. So, you'll have a button that will log when you changed your sensor last...letting you see in Nightscout easily just how old a sensor is at any given time. Or you can create a button that will turn on an \"exercise\" override that you already programmed into your kid's Loop app. So, let's make our first applet (aka button). Get an IFTTT account Login to your IFTTT.com account and select click this link to get to the page for creating your first \"New Applet\". (You can also get to this Applet creation page by selecting your Account icon in the upper right of the IFTTT website, then clicking on \"Create\".) In the screen that appears, click on the black \"+this\" part of the screen In the next screen, type \"button\" in the search field and then click on the red box labelled \"ButtonWidget\" Connect the button widget by clicking on the large black\"connect\" button twice, once on the main screen and then second on the pop-up window that will appear immediately after that. (You will only have to \"connect\" the widgets for the first applet you make. After that the widgets will already connected to your IFTTT account.) Click on the large red \"button press\" box Click on the black \"+that\" text Enter \"Webhooks\" in the search field and click on the Webhooks app Connect the Webhooks app Select the blue \"Make a Web Request\" box Now you will have a blank web request template to complete. Screenshot below is an example of a completed recipe for eating soon IFTTT action. There are four parts you will need to fill in, and they are described below the screenshot. URL https://yoursite.herokuapp.com/api/v1/treatments.json (for all IFTTT recipes that are NOT remote overrides...so things like cannula changes, sensor changes, pump battery changes, etc.) Change the \"yoursite\" to your actual site's info. Method The method will be POST Content Type The content type will be application/json . Body The content of the body will depend on the action that you would like this particular button press to perform. While many recipes are available, any recipe that log carbs to NS will only display the carbs in Nightscout...Loop will not \"use\" those carbs in treatment or prediction math. The display of carbs in NS though may still be helpful for remote care givers to leave an indication that a low is being noticed and treated. Some sample content for actions that may be useful in Loop: Pump Site Change {\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Site Change\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"} CGM Sensor Start {\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Sensor Start\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"} Note {\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Note\", \"notes\": \"Hi mom, please don't text me for a bit. I'm taking a test.\", \"secret\": \"your_hashed_api_goes_here!!!\"} Special note for IFTTT to set a Remote Override with dev branch Triggering a remote override with IFTTT takes a couple considerations; 1. You have followed the directions for setting up remote overrides in Nightscout already. 2. Remote overrides will use https://yoursite.herokuapp.com/api/v2/notifications/loop for the URL line of the applet. Notice that is different from the other type of applets' URL. 3. The Body message of the applet needs to match the override already programmed in Loop app; the reason, reasonDisplay, and duration all need to match what is preset in your Loop app. The \"duration\" is giving in minutes in the body message (vs hours in Loop), and if the override is one that is \"enabled indefinitely\" then the duration is \"infinite\". The \"reason\" is the name of the override but NO EMOJI, and the \"reasonDisplay\" is the override name with the emoji. Check out the samples Body messages for overrides below. You will have to edit your body messages to match your reason and reasonDisplay. The target range and duration of the override does not need to be specified. Body message for override named \"hormones\" {\"eventType\": \"Temporary Override\", \"reason\": \"hormones\", \"reasonDisplay\": \"\ud83e\udddf\u200d\u2640\ufe0f hormones\", \"secret\": \"your_hashed_api_goes_here!!!\"} Body message for override named \"running\" {\"eventType\": \"Temporary Override\", \"reason\": \"running\", \"reasonDisplay\": \"\ud83c\udfc3\u200d\u2640\ufe0f running\", \"secret\": \"your_hashed_api_goes_here!!!\"} Body message for override named \"Low Treatment\" {\"eventType\": \"Temporary Override\", \"reason\": \"Low Treatment\", \"reasonDisplay\": \"\ud83c\udf6c Low Treatment\", \"secret\": \"your_hashed_api_goes_here!!!\"} Body message to cancel any override {\"eventType\": \"Temporary Override Cancel\", \"secret\": \"your_hashed_api_goes_here!!!\"} Click the Create Action button on the bottom of the screen when you finish. Now is your chance to change the title of your applet now to something meaningful. You can turn on notifications, too, using the slider shown. If you turn on the notifications, you will get an alert on your phone and pebble watch when the button press has been successfully deployed. Finish the IFTTT button by clicking on the Finish button that appears. Repeat the setup for new applets for as many automated actions/overrides as you would like to setup. Step 3: Enable IFTTT in your Nightscout site \u2301 Now that we have cool applets made, we need to give Nightscout some information so that it will accept commands from our applets. It's pretty simple to do...just a couple additions to your Heroku settings. Find your Maker Key by going to your IFTTT account icon in upper right corner, choose \"My services\" and then click on the Webhooks service, settings. You will see your Maker Key as the last part of the URL after the use/ ; copy and paste that last part (the red circled part as shown) Login to your Nightscout site host (azure or heroku) and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line. Step 4: Install IFTTT app on your iPhone/Android \u2301 Now that all the hard work is done, we can take easy street and just add that work to the phone via the IFTTT app. By accessing the IFTTT widget on your iPhone, you'll be able to easily and quickly access the useful buttons you've just created. Download the IFTTT app on your phone and log in using your IFTTT account. For iPhone users, if you swipe right from your iPhone's home screen, you will have the Today view showing. Scroll to the bottom, click \"edit\". This should show a list of existing widgets, followed by a list of \"more widgets\" with green + signs. Click on the IFTTT's green circle and the widget will be moved to the top, active widgets area. You can hold your finger on the three left lines of the IFTTT widget row to drag it to the top of your widget panel, if you prefer to have it as the top-most widget. If you end up with more than four IFTTT applets, they will appear in reverse-order of when they were created...which may not be the same as you'd prefer them to appear on your widget bar. If you'd like to reorder them: go into your iPhone's IFTTT app click on My Applets click on the gear icon in upper left of screen click on Widgets click on the pencil icon in upper right of screen click and hold the three lines that appear on the right side of the widget that you want to move. Drag the widget to the order in the list that you'd like it to appear in your widget quickscreen. Extra Credit: Alexa integration \u2301 Since you have IFTTT/Maker requests working, you can get it to work with anything that supports IFTTT, including Alexa. You will need to add \"alexa\" to your ENABLE line in your Heroku settings. And then repeat the steps above, but instead of using \"ButtonWidget\" service we started with earlier (the \"+if\" part of the setup)...you will use the \"AmazonAlexa\" service. Alexa requests do not need underscores, FYI.","title":"IFTTT Integration"},{"location":"nightscout/ifttt/#ifttt-integration","text":"If This, Then That (IFTTT) is a useful Nightscout integration. By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more.","title":"IFTTT Integration"},{"location":"nightscout/ifttt/#step-1-get-your-api-secret-hash","text":"First we need to gather one thing called your \"hashed API Secret\". In your internet browser, open a \"console\" window while viewing your Nightscout site. Make sure you have \"authenticated\" your site by using your API secret in the Nightscout settings area (hint: if you see a little padlock in the upper left corner of the site, you haven't authenticated it). Refresh the site and your hashed secret key will be shown as \"apisecrethash: \"xxxxxxxxxx...\"\" For Safari users on Mac , you can open the console window by selecting \"Develop\" from the Safari top menu, and then \"Show Page Source\" (if you do not see \"Develop\" in the top menu, activate it by going to Safari > Preferences... > Advanced, and checking the \"Show Develop menu in menu bar\" option). If you're having problems seeing the apisecrethash, click the little grey triangle next to the \"status isAuthenticated\" line and the objects below it will display (see screenshot). Your hashed API secret can be copied and pasted from that line, as shown below. Save that somewhere easy to get to again, because you will be using it later. For Chrome users , the console window is found through the View >> Developer >> View Source. Click on the Console tab and scroll to find the \"status isAuthenticated\" row to find your apisecrethash. Copy your API hash to somewhere you can retreive it again, we will be copy/pasting it in Step 2.","title":"Step 1: Get your API Secret Hash"},{"location":"nightscout/ifttt/#step-2-create-your-applets","text":"IFTTT calls their little actions that you'll create an \"applet\". I have no idea why. But, I will go along and use their terminology so we are all consistent. We are basically interested in creating applets that will be buttons on your phone to do cool things in Nightscout. So, you'll have a button that will log when you changed your sensor last...letting you see in Nightscout easily just how old a sensor is at any given time. Or you can create a button that will turn on an \"exercise\" override that you already programmed into your kid's Loop app. So, let's make our first applet (aka button). Get an IFTTT account Login to your IFTTT.com account and select click this link to get to the page for creating your first \"New Applet\". (You can also get to this Applet creation page by selecting your Account icon in the upper right of the IFTTT website, then clicking on \"Create\".) In the screen that appears, click on the black \"+this\" part of the screen In the next screen, type \"button\" in the search field and then click on the red box labelled \"ButtonWidget\" Connect the button widget by clicking on the large black\"connect\" button twice, once on the main screen and then second on the pop-up window that will appear immediately after that. (You will only have to \"connect\" the widgets for the first applet you make. After that the widgets will already connected to your IFTTT account.) Click on the large red \"button press\" box Click on the black \"+that\" text Enter \"Webhooks\" in the search field and click on the Webhooks app Connect the Webhooks app Select the blue \"Make a Web Request\" box Now you will have a blank web request template to complete. Screenshot below is an example of a completed recipe for eating soon IFTTT action. There are four parts you will need to fill in, and they are described below the screenshot. URL https://yoursite.herokuapp.com/api/v1/treatments.json (for all IFTTT recipes that are NOT remote overrides...so things like cannula changes, sensor changes, pump battery changes, etc.) Change the \"yoursite\" to your actual site's info. Method The method will be POST Content Type The content type will be application/json . Body The content of the body will depend on the action that you would like this particular button press to perform. While many recipes are available, any recipe that log carbs to NS will only display the carbs in Nightscout...Loop will not \"use\" those carbs in treatment or prediction math. The display of carbs in NS though may still be helpful for remote care givers to leave an indication that a low is being noticed and treated. Some sample content for actions that may be useful in Loop: Pump Site Change {\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Site Change\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"} CGM Sensor Start {\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Sensor Start\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"} Note {\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Note\", \"notes\": \"Hi mom, please don't text me for a bit. I'm taking a test.\", \"secret\": \"your_hashed_api_goes_here!!!\"} Special note for IFTTT to set a Remote Override with dev branch Triggering a remote override with IFTTT takes a couple considerations; 1. You have followed the directions for setting up remote overrides in Nightscout already. 2. Remote overrides will use https://yoursite.herokuapp.com/api/v2/notifications/loop for the URL line of the applet. Notice that is different from the other type of applets' URL. 3. The Body message of the applet needs to match the override already programmed in Loop app; the reason, reasonDisplay, and duration all need to match what is preset in your Loop app. The \"duration\" is giving in minutes in the body message (vs hours in Loop), and if the override is one that is \"enabled indefinitely\" then the duration is \"infinite\". The \"reason\" is the name of the override but NO EMOJI, and the \"reasonDisplay\" is the override name with the emoji. Check out the samples Body messages for overrides below. You will have to edit your body messages to match your reason and reasonDisplay. The target range and duration of the override does not need to be specified. Body message for override named \"hormones\" {\"eventType\": \"Temporary Override\", \"reason\": \"hormones\", \"reasonDisplay\": \"\ud83e\udddf\u200d\u2640\ufe0f hormones\", \"secret\": \"your_hashed_api_goes_here!!!\"} Body message for override named \"running\" {\"eventType\": \"Temporary Override\", \"reason\": \"running\", \"reasonDisplay\": \"\ud83c\udfc3\u200d\u2640\ufe0f running\", \"secret\": \"your_hashed_api_goes_here!!!\"} Body message for override named \"Low Treatment\" {\"eventType\": \"Temporary Override\", \"reason\": \"Low Treatment\", \"reasonDisplay\": \"\ud83c\udf6c Low Treatment\", \"secret\": \"your_hashed_api_goes_here!!!\"} Body message to cancel any override {\"eventType\": \"Temporary Override Cancel\", \"secret\": \"your_hashed_api_goes_here!!!\"} Click the Create Action button on the bottom of the screen when you finish. Now is your chance to change the title of your applet now to something meaningful. You can turn on notifications, too, using the slider shown. If you turn on the notifications, you will get an alert on your phone and pebble watch when the button press has been successfully deployed. Finish the IFTTT button by clicking on the Finish button that appears. Repeat the setup for new applets for as many automated actions/overrides as you would like to setup.","title":"Step 2: Create your \"Applets\""},{"location":"nightscout/ifttt/#step-3-enable-ifttt-in-your-nightscout-site","text":"Now that we have cool applets made, we need to give Nightscout some information so that it will accept commands from our applets. It's pretty simple to do...just a couple additions to your Heroku settings. Find your Maker Key by going to your IFTTT account icon in upper right corner, choose \"My services\" and then click on the Webhooks service, settings. You will see your Maker Key as the last part of the URL after the use/ ; copy and paste that last part (the red circled part as shown) Login to your Nightscout site host (azure or heroku) and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line.","title":"Step 3: Enable IFTTT in your Nightscout site"},{"location":"nightscout/ifttt/#step-4-install-ifttt-app-on-your-iphoneandroid","text":"Now that all the hard work is done, we can take easy street and just add that work to the phone via the IFTTT app. By accessing the IFTTT widget on your iPhone, you'll be able to easily and quickly access the useful buttons you've just created. Download the IFTTT app on your phone and log in using your IFTTT account. For iPhone users, if you swipe right from your iPhone's home screen, you will have the Today view showing. Scroll to the bottom, click \"edit\". This should show a list of existing widgets, followed by a list of \"more widgets\" with green + signs. Click on the IFTTT's green circle and the widget will be moved to the top, active widgets area. You can hold your finger on the three left lines of the IFTTT widget row to drag it to the top of your widget panel, if you prefer to have it as the top-most widget. If you end up with more than four IFTTT applets, they will appear in reverse-order of when they were created...which may not be the same as you'd prefer them to appear on your widget bar. If you'd like to reorder them: go into your iPhone's IFTTT app click on My Applets click on the gear icon in upper left of screen click on Widgets click on the pencil icon in upper right of screen click and hold the three lines that appear on the right side of the widget that you want to move. Drag the widget to the order in the list that you'd like it to appear in your widget quickscreen.","title":"Step 4: Install IFTTT app on your iPhone/Android"},{"location":"nightscout/ifttt/#extra-credit-alexa-integration","text":"Since you have IFTTT/Maker requests working, you can get it to work with anything that supports IFTTT, including Alexa. You will need to add \"alexa\" to your ENABLE line in your Heroku settings. And then repeat the steps above, but instead of using \"ButtonWidget\" service we started with earlier (the \"+if\" part of the setup)...you will use the \"AmazonAlexa\" service. Alexa requests do not need underscores, FYI.","title":"Extra Credit: Alexa integration"},{"location":"nightscout/insights/","text":"DIY Nightscout Components \u2301 Components, costs and complexity will depend on the solution you want to implement. For an overview of some possibilities, see vendors . APPLIES TO: + GitHub \u2301 GitHub is a Git repository hosting service. It's a place where you can store and share projects: software, hardware, documentation (and virtually anything) and maintain versions of your work. It allows collaboration between developers (anybody can view the complete code of Nightscout: it is open source) and anybody can download it or make a copy of it (a \"fork\" ). A GitHub project is available in a repository (also called repo) like the Apollo 11 source code and Nightscout https://github.com/nightscout/cgm-remote-monitor . Heroku \u2301 Heroku is a container-based cloud Platform as a Service. It's an infrastructure where you can run your application (your program) in the cloud, meaning that you don't need to have specific hardware (servers, hardware, infrastructures) and it is available from anywhere when connected to the internet, usually as a web page with an address like https://mynightscoutsite.herokuapp.com. Your Nightscout app will run in the Heroku cloud and will be available to any device connected to the internet and knowing the address. You can also secure it and decide who can see your BG. mongoDB \u2301 mongoDB is a document database. It's a virtual place where you can store your data, in the cloud like Heroku. Nightscout will store all your data in an Atlas database: your BG, insulin sensitivity factors, correction factors, basal profiles, etc... This will allow Nightscout to create reports and much more. Nightscout install \u2301 In order to create a new Nightscout site you'll need to open an account in each of the previous providers. The GitHub account will allow you to copy (fork) the original source code in your own cgm-remote-monitor repository, which includes the install (deploy) and update scripts as well as the rest of the functions that make Nightscout. You can see it as the software code of Nightscout, a set of instructions. The Heroku account creation will require you to provide a valid credit card to certificate you are a physical person and not an automated system. Unless you deliberately choose a paid option (and there is no trap: you won't be able to select one by mistake) you will not be billed anything. You can see Heroku as the engine of your Nightscout, the application itself, that's running somewhere on the internet and can be accessed from anywhere. The Atlas account will give you access to a small free database (500MB) that should be more than enough for most users. If uploading from a 600 series pump, or if using a DIY close loop system, it might be small and you'll need regular cleanup. Nightscout operation \u2301 During normal operation, your uploader (a device connected to your CGM and the internet) will send data to Nightscout, and Heroku will place them in the database. The values or predicted values might trigger some actions with other devices that are connected to Nightscout (like IFFT). You will be able to access them near real-time from any device connected to the internet like a computer, mobile phone with a browser or a follower app, various gadgets connected to internet, smartwatches, ...","title":"Overview"},{"location":"nightscout/insights/#diy-nightscout-components","text":"Components, costs and complexity will depend on the solution you want to implement. For an overview of some possibilities, see vendors . APPLIES TO: +","title":"DIY Nightscout Components"},{"location":"nightscout/insights/#github","text":"GitHub is a Git repository hosting service. It's a place where you can store and share projects: software, hardware, documentation (and virtually anything) and maintain versions of your work. It allows collaboration between developers (anybody can view the complete code of Nightscout: it is open source) and anybody can download it or make a copy of it (a \"fork\" ). A GitHub project is available in a repository (also called repo) like the Apollo 11 source code and Nightscout https://github.com/nightscout/cgm-remote-monitor .","title":"GitHub"},{"location":"nightscout/insights/#heroku","text":"Heroku is a container-based cloud Platform as a Service. It's an infrastructure where you can run your application (your program) in the cloud, meaning that you don't need to have specific hardware (servers, hardware, infrastructures) and it is available from anywhere when connected to the internet, usually as a web page with an address like https://mynightscoutsite.herokuapp.com. Your Nightscout app will run in the Heroku cloud and will be available to any device connected to the internet and knowing the address. You can also secure it and decide who can see your BG.","title":"Heroku"},{"location":"nightscout/insights/#mongodb","text":"mongoDB is a document database. It's a virtual place where you can store your data, in the cloud like Heroku. Nightscout will store all your data in an Atlas database: your BG, insulin sensitivity factors, correction factors, basal profiles, etc... This will allow Nightscout to create reports and much more.","title":"mongoDB"},{"location":"nightscout/insights/#nightscout-install","text":"In order to create a new Nightscout site you'll need to open an account in each of the previous providers. The GitHub account will allow you to copy (fork) the original source code in your own cgm-remote-monitor repository, which includes the install (deploy) and update scripts as well as the rest of the functions that make Nightscout. You can see it as the software code of Nightscout, a set of instructions. The Heroku account creation will require you to provide a valid credit card to certificate you are a physical person and not an automated system. Unless you deliberately choose a paid option (and there is no trap: you won't be able to select one by mistake) you will not be billed anything. You can see Heroku as the engine of your Nightscout, the application itself, that's running somewhere on the internet and can be accessed from anywhere. The Atlas account will give you access to a small free database (500MB) that should be more than enough for most users. If uploading from a 600 series pump, or if using a DIY close loop system, it might be small and you'll need regular cleanup.","title":"Nightscout install"},{"location":"nightscout/insights/#nightscout-operation","text":"During normal operation, your uploader (a device connected to your CGM and the internet) will send data to Nightscout, and Heroku will place them in the database. The values or predicted values might trigger some actions with other devices that are connected to Nightscout (like IFFT). You will be able to access them near real-time from any device connected to the internet like a computer, mobile phone with a browser or a follower app, various gadgets connected to internet, smartwatches, ...","title":"Nightscout operation"},{"location":"nightscout/multiadmin/","text":"Support and Administration of multiple sites \u2301 Either by necessity or to support others, you might want to have access to multiple accounts without having to juggle between logins and passwords. Below are described some centralizing methods reducing the administrative burden. Remote support and security \u2301 Giving username and passwords to someone in order to obtain help to fix Nightscout issues raises serious security issues. Malicious code can be added to your Nightscout project by ill-intentioned people. Always make sure the version deployed is a fork of the official project. After receiving help a good practice is to change your account passwords (GitHub, Heroku, mongoDB Atlas, Clarity, CareLink, ...) and your API secret. Note Inviting Heroku collaborators is extremely efficient for remote support. Github \u2301 You need only one Github account since you can connect multiple Heroku apps and accounts to the same GitHub account. Using this strategy you only need to update one GitHub account when a new Nightscout version is released and you will be able to deploy it in all your Heroku accounts and apps. Note You must use the standard update method . Not redeploy. Enable Automatic Deploys in Heroku \u2301 Automatic deploys will allow you to update automatically your Heroku apps when you update the GitHub repository: you will not need to login into Heroku and perform Manual Deploy, as soon as a new version will be merged into GitHub an automated deploy will trigger in all enabled Heroku apps. To enable automatic deploy, log in Heroku and select your app, then Deploy . Verify GitHub and your cgm-remote-monitor app are connected. Verify the master branch is selected and click Enable Automatic Deploys . Your Heroku site will update automatically every time you update the GitHub repository. Heroku \u2301 For free dynos purposes (1000 dynos hours per month with a credit card information present in your Heroku account) you should setup only one Nightscout site per Heroku account. This requires you to log out and in every time you need to work on an app. You can setup collaborators in Heroku to avoid having to switch accounts. First decide on which will be your main Heroku account. Then add the email address you used to register as collaborator to the other(s) one(s). Log into your other Heroku account and select your app. Select Access . Click Add collaborator and enter the email address you used to create your main Heroku account. You will now see it as a collaborator. Using the pen icon you can modify it or delete it. Log in your main Heroku account. You will see the apps you are collaborating to in the same list than your primary app. You can now perform most tasks directly in that one Heroku account (deploys, change variables, ...). Atlas \u2301 You can invite another user in your organization in order to manage several organizations from the same Atlas account. Log into your secondary Atlas account: that is the other account you want to administer from your first (main) Atlas account. Top menu, click Access Manager and select Organization Access from the drop down menu Click Invite Users Enter the email address you used to create your main Atlas account. Select Organization Owner then click Invite to Organization . Make sure you enable Organization Owner for the invited user. Log out of your secondary Atlas account and log in your main Atlas account. Top left, from the drop down menu click the caret and select View all Organizations In the left menu, click Invitations then click ACCEPT the invitation you performed from your secondary Atlas account. Going back to all your organizations you can now see and administer both of them from this account. In the example below Nightscout is the main organization and My Org 2020-09-20 is a secondary organization. Note You can rename your organizations from the top left cog (Settings) then clicking the pen icon.","title":"Running multiple sites"},{"location":"nightscout/multiadmin/#support-and-administration-of-multiple-sites","text":"Either by necessity or to support others, you might want to have access to multiple accounts without having to juggle between logins and passwords. Below are described some centralizing methods reducing the administrative burden.","title":"Support and Administration of multiple sites"},{"location":"nightscout/multiadmin/#remote-support-and-security","text":"Giving username and passwords to someone in order to obtain help to fix Nightscout issues raises serious security issues. Malicious code can be added to your Nightscout project by ill-intentioned people. Always make sure the version deployed is a fork of the official project. After receiving help a good practice is to change your account passwords (GitHub, Heroku, mongoDB Atlas, Clarity, CareLink, ...) and your API secret. Note Inviting Heroku collaborators is extremely efficient for remote support.","title":"Remote support and security"},{"location":"nightscout/multiadmin/#github","text":"You need only one Github account since you can connect multiple Heroku apps and accounts to the same GitHub account. Using this strategy you only need to update one GitHub account when a new Nightscout version is released and you will be able to deploy it in all your Heroku accounts and apps. Note You must use the standard update method . Not redeploy.","title":"Github"},{"location":"nightscout/multiadmin/#enable-automatic-deploys-in-heroku","text":"Automatic deploys will allow you to update automatically your Heroku apps when you update the GitHub repository: you will not need to login into Heroku and perform Manual Deploy, as soon as a new version will be merged into GitHub an automated deploy will trigger in all enabled Heroku apps. To enable automatic deploy, log in Heroku and select your app, then Deploy . Verify GitHub and your cgm-remote-monitor app are connected. Verify the master branch is selected and click Enable Automatic Deploys . Your Heroku site will update automatically every time you update the GitHub repository.","title":"Enable Automatic Deploys in Heroku"},{"location":"nightscout/multiadmin/#heroku","text":"For free dynos purposes (1000 dynos hours per month with a credit card information present in your Heroku account) you should setup only one Nightscout site per Heroku account. This requires you to log out and in every time you need to work on an app. You can setup collaborators in Heroku to avoid having to switch accounts. First decide on which will be your main Heroku account. Then add the email address you used to register as collaborator to the other(s) one(s). Log into your other Heroku account and select your app. Select Access . Click Add collaborator and enter the email address you used to create your main Heroku account. You will now see it as a collaborator. Using the pen icon you can modify it or delete it. Log in your main Heroku account. You will see the apps you are collaborating to in the same list than your primary app. You can now perform most tasks directly in that one Heroku account (deploys, change variables, ...).","title":"Heroku"},{"location":"nightscout/multiadmin/#atlas","text":"You can invite another user in your organization in order to manage several organizations from the same Atlas account. Log into your secondary Atlas account: that is the other account you want to administer from your first (main) Atlas account. Top menu, click Access Manager and select Organization Access from the drop down menu Click Invite Users Enter the email address you used to create your main Atlas account. Select Organization Owner then click Invite to Organization . Make sure you enable Organization Owner for the invited user. Log out of your secondary Atlas account and log in your main Atlas account. Top left, from the drop down menu click the caret and select View all Organizations In the left menu, click Invitations then click ACCEPT the invitation you performed from your secondary Atlas account. Going back to all your organizations you can now see and administer both of them from this account. In the example below Nightscout is the main organization and My Org 2020-09-20 is a secondary organization. Note You can rename your organizations from the top left cog (Settings) then clicking the pen icon.","title":"Atlas"},{"location":"nightscout/new_user/","text":"New Nightscout Users \u2301 Welcome to Nightscout! There are many ways to get started with Nightscout that the Nightscout community supports. Nightscout is DIY (Do It Yourself), even if you don\u2019t feel confident that you have the necessary skills, give it a try. You\u2019ll find people that are willing to help you setting it up in many Facebook groups. For free. Paying it forward. If you find it too complex or the maintenance too demanding you might be interested in Nightscout as a service . Components, costs and complexity will depend on the solution you want to implement. For an overview of other possibilities, see vendors . Security and safekeeping \u2301 It's highly important you understand you have to take computer security seriously when setting up Nightscout. We assume you have full legal ownership of all data being stored in your installation of Nightscout and that there are thus no liabilities you'd need to respond to regarding the data. Depending on how you use Nightscout, an unauthorized user could cause harm by for example changing the CGM data shown by Nightscout. We have no evidence of this having ever happened to anyone, but to keep it that way, take the following guidelines to heart: Use the same email address for all accounts to ensure you have access to the accounts going forward. Do not use a disposable email address. Do not use the same password for all your accounts, and choose passwords that are not easy to guess. Do not use the API_SECRET for the Atlas database password. Do not use your Dexcom or CareLink user name or password for Nightscout components. Do not share the API_SECRET or other passwords to your accounts to others. Do not use Nightscout or any related applications on rooted and/or otherwise compromized devices, and ensure you always have the latest operating system and virus protection updates installed. If you want to read more about Nightscout security, including about additional configuration options to make your installation more secure, please check our security guide . Print this document to record all information during installation. Store it together securely with your diabetes documentation. Here is a step-by-step guide for completing your own Nightscout site DIY style. \u2301 APPLIES TO: + Create your Heroku, GitHub, and Atlas accounts from a computer. \u2301 Do not change device/computer/browser during the setup process! Note If you have unexpected issues when creating your site, restart with another browser. If this is not your first attempt to deploy Nightscout You might want to do some cleanup before. Step 1: Create a GitHub account \u2301 If you already have a GitHub account and previously forked cgm-remote-monitor Make sure you delete your current cgm-remote-monitor fork using Step 1 of this guide (ONLY STEP1!) . Note You do not need several GitHub accounts for several Nightscout sites. You can connect one GitHub account to multiple Heroku apps and accounts. a) Click this link to create a GitHub account: [https://github.com/ Enter your email and click Sign up for GitHub b) Enter a password and a username (anything you want and that is accepted, not very important). Type n to decline advertisement emails. c) Play and solve the puzzle then click Create account d) GitHub will send you a verification code. Open your mail and check your inbox (check your spam-folder if not received after a couple of minutes). e) A personalization sequence will start, click Skip personalization at the bottom. f) Leave the page that opened as it is. Don't close it. Step 2: Create a Heroku account \u2301 a) Click this link to create an Heroku account: https://signup.heroku.com/login b) Enter mandatory data (*) and click CREATE FREE ACCOUNT c) Heroku will send a confirmation email, open your mail and check your inbox (check your spam-folder if not received after a couple of minutes). d) Click on the activation link e) Create a password, it is important that you write it down for later usage. Click SET PASSWORD AND LOG IN f) Click CLICK HERE TO PROCEED Read and accept Salesforce terms of service. Se sei residente in Italia, abilita l'interruttore Are you domiciled in Italy , leggi e accetta le condizioni supplementari. g) Your Heroku page will open, click on your profile picture, in the top right corner, and select Account Settings h) Click on Billing i) Click Add credit card j) Enter your credit card information and click Save Details Note Unless you voluntarily select billable features, your credit card information is only used for verifications and you will not be charged anything. Worst case you\u2019ll be charged $0.00 k) You should now have 2 pages open: Heroku and GitHub. Leave them open. Step 3: Create an Atlas account \u2301 a) Open another tab at: https://www.mongodb.com/cloud/atlas and click Get started now b) Enter your information, click Continue then Create account MongoDB Atlas will send you an email, if you don't receive it check your Spam folder. In the email you received from MongoDB Atlas (mongodb-atlas @ mongodb.com), click on Verify email Another browser tab will open with your confirmed MongoDB account, Continue . Enter some information (like below) and click Finish . c) Select Create a cluster in Shared Clusters (FREE) If you ever see this, just STOP We're building a free cluster: you don't need to provide any billing information. d) Leave all default values and click Create Cluster Atlas will create your default cluster, wait until it is complete... (can take more than 3 minutes) e) Click on CONNECT f) Click on Allow Access from Anywhere If you don't allow access from anywhere (IP 0.0.0.0/0) Nightscout will not be able to access your database. g) Click on Add IP Address h) Add a database username (for example nightscout ) and a database password (in the example below soo5ecret but please change it!). \u2301 Database credentials: Do not use your Atlas account credentials. Do not use special characters: only letters and numbers. Write down these credentials in the boxes below (yes, in this browser window you're reading now, unless you're reading a printed version). You\u2019ll need them later. Database password: Database username: i) Then click Create Database User . j) Click on Choose a connection method k) Select Connect your application l) Copy the connection string: click Copy and paste it somewhere to edit it (like Notepad). m) Paste the string in the box below (yes, in this browser window you're reading now, unless you're reading a printed version). It should be similar to this ( xxxxx will be different): mongodb+srv://nightscout:<password>@cluster0.xxxxx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority n) Invent a name for your database, this is not a critical information (for example mycgmic ), note that default is myFirstDatabase . Database Name: o) Click the Generate button (just here below this line: in this browser window you're reading): Generate The connection string will appear here var bAtlas; var sdB, sPwd; var sFinalString = \"Not defined yet\"; function Generate() { var sString = sFinalString; bAtlas=0; var sString = \"Looks good!\"; var sAtlas = document.getElementById(\"myAtlas\").value; sPwd = document.getElementById(\"myPwd\").value; sdB = document.getElementById(\"mydB\").value; var iAS = sAtlas.search(\"://\"); if(iAS!=11) { sString = \"Atlas URI should start with mongodb+srv://\"; } else { var iAP = sAtlas.search(\"<password>\"); if(iAP==-1) { sString = \"Atlas URI should contain &lt;password&gt;\"; } else { var iAD = sAtlas.search(\"myFirstDatabase\"); if(iAD==-1) { sString = \"Atlas URI should contain myFirstDatabase\"; } else { bAtlas=1; sString = sAtlas.substring(0,iAP); sFinalString = sString.concat(sPwd, sAtlas.substring(iAP+10, iAD)); sString = sAtlas.substring(iAP+10, iAD); sFinalString = sFinalString.concat(sdB, sAtlas.substring(iAD+15)); } } } if(bAtlas) document.getElementById(\"result\").innerHTML = sFinalString; else document.getElementById(\"result\").innerHTML = sString; if(bAtlas) document.getElementById(\"resultbis\").innerHTML = sFinalString; } Warning Keep this string safely aside, it is called your MONGODB_URI p) If you want to do it manually: replace <password> with your database password as noted previously (in the example below soo5ecret ) and <dbname> by any text you want, say mycgmic for example. The result will be like this: mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/mycgmic?retryWrites=true&w=majority Note There are no < and > characters in the final string, neither for password nor for database name. Step 4: Fork and deploy cgm-remote-monitor \u2301 If you previously forked cgm-remote-monitor before reaching this step, you should delete the existing cgm-remote-monitor repository before proceeding Delete your current cgm-remote-monitor fork using Step 1 of this guide (ONLY STEP1!) . a) You should now have 3 pages opened in your browser: Heroku, Atlas, and Github, Make sure you are logged-in on each one (i.e. not asking you to login) before you continue. b) Click this link https://github.com/nightscout/cgm-remote-monitor , a new GitHub page will open. Click on Fork c) Wait for a moment d) Scroll down and click Deploy to Heroku You're getting into the core setup of your site Below you'll see the minimum required configuration, you can modify the variables later in Heroku. e) Enter your CGM in the Cloud site name: invent a name you will use to see your BG in the cloud. Confirm that the name is available. f) Don\u2019t change the region. Scroll down and setup the following variables: g) API_SECRET will be your Nightscout site password, it needs to be at least 12 characters long and you should NOT use spaces if you use @ or ! symbols remember you will probably need to express them using Percent encoding in your uploader and downloader apps. If you're not sure on how to do this, it is recommended to use only letters (uppercase + lowercase) and digits. The API_SECRET is the main password allowing full access to your Nightscout site . Make sure it's reasonably secure (mix uppercase and lowercase letters, plus digits) and do no not share it publicly . If you think you exposed it by mistake, it is recommended that you change it . h) If you want to link your Dexcom Share account as a data source, complete the following lines: Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing using Dexcom Share and the bridge plugin. MOST COMMON ERRORS The BRIDGE_PASSWORD and BRIDGE_USER_NAME are NOT visible from within your Dexcom app or online account. These values are what you entered into your Dexcom mobile app when you logged into that app for the VERY FIRST time. The BRIDGE_USER_NAME is not an email address. The most common error on initial Nightscout setups is that people incorrectly use an old account or an old password. To test your username and password, go to Dexcom's Clarity page (check here for USA accounts and here for the others ) and try logging in to your Dexcom account. If your account info isn't valid, or you don't see any data in your Clarity account... you need to figure out your actual credentials before moving ahead. Password Some people have had problems with their bridge connecting when their Dexcom passwords are entirely numeric. If you have connection issues in that case, try changing your password to something with a mix of numbers and letters. Info You need to have at least one follower to use Dexcom Share. See here . i) Linking your CareLink account as a data source is not functional anymore with Heroku . Do not use the plugin below. There are alternative solutions with an Android phone and a private version of xDrip+ (recommended), or (not recommended: verify availability for your pump and country) a computer or a Raspberry Pi to bridge CareLink to Nightscout. j) Select the units you\u2019re using in DISPLAY_UNITS acceptable choices are mg/dl or mmol/L (or just mmol ). k) In ENABLE , copy and paste the following words (separated by a space) so that won't have to think about which you want now: careportal basal dbsize rawbg iob maker cob bwp cage iage sage boluscalc pushover treatmentnotify loop pump profile food openaps bage alexa override speech cors ENABLE words You find more information about the ENABLE words on the: Setup page l) Now you need the connection string you defined during the Atlas cluster creation (as the example below, but not the string below). Copy and paste it in the MONGODB_URI variable field. If you compiled all the fields and successfully generated the string this is what you should copy in MONGODB_URI : Sorry... something is missing for me to make it automatically... If you preferred to make it yourself, make sure it looks like this: mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/mycgmic?retryWrites=true&w=majority m) Scroll down to the end of the list and click Deploy app n) WAIT until completion (will take some time). Do not interrupt the process until it's complete. o) Then click View (if nothing happens, click Manage App -> Open App , in upper right corner) p) Your Nightscout site should open and direct you to a new profile creation. q) Setup your Time zone and eventually all other fields. Do not leave any fields empty. If you don't know which value to use, just use the default value. You can change these values later at any time. r) Browse down to Authentication status and click Authenticate . Enter your API secret. Click Update . s) Click Save . t) If the following pop-up shows up click OK , and check status (upper right of the window). u) If you need to modify your profile after this, authenticate with the lock icon (top right of the page): enter your API secret. Then click on the hamburger menu and select Profile Editor . Privacy warning Anyone with access to the URL of your Nightscout site, can view your BG and run reports of your data. It it strongly recommended that you enable security to your site once you're done with the setup. v) Dexcom Share and CareLink users should see data flowing in after some minutes. Other uploaders like xDrip+, Spike, xDrip4iOS, etc will need to be setup with the Nightscout address and API secret in the app. Papertrail \u2301 Finally, you might want to modify the PAPERTRAIL_API_TOKEN line. Heroku offers a free, tiny amount of Papertrail service (this is like a logging service for how the site is running), but this generates a lot of confusion to most people later on, when they get a message that their \"Free Papertrail Service has run out of room\". Papertrail is not needed, edit the line and add DISABLED at the end, so that you can recover the function if you need it later. Step 5: Uploader setup \u2301 Continue to uploader setup. Editing Config Vars in Heroku \u2301 Once Nightscout deployed, you can access your variables from Heroku in order to change or customize your site. Variables are described here . Select your app Click Settings Scroll down and click Reveal Config Vars You can modify the values clicking on the pen icon Change the contents of Value as needed then click Save Changes Changing a variable and saving a new value will restart your site, if the change is not actuated you might also want to restart all dynos .","title":"Classic DIY Installation"},{"location":"nightscout/new_user/#new-nightscout-users","text":"Welcome to Nightscout! There are many ways to get started with Nightscout that the Nightscout community supports. Nightscout is DIY (Do It Yourself), even if you don\u2019t feel confident that you have the necessary skills, give it a try. You\u2019ll find people that are willing to help you setting it up in many Facebook groups. For free. Paying it forward. If you find it too complex or the maintenance too demanding you might be interested in Nightscout as a service . Components, costs and complexity will depend on the solution you want to implement. For an overview of other possibilities, see vendors .","title":"New Nightscout Users"},{"location":"nightscout/new_user/#security-and-safekeeping","text":"It's highly important you understand you have to take computer security seriously when setting up Nightscout. We assume you have full legal ownership of all data being stored in your installation of Nightscout and that there are thus no liabilities you'd need to respond to regarding the data. Depending on how you use Nightscout, an unauthorized user could cause harm by for example changing the CGM data shown by Nightscout. We have no evidence of this having ever happened to anyone, but to keep it that way, take the following guidelines to heart: Use the same email address for all accounts to ensure you have access to the accounts going forward. Do not use a disposable email address. Do not use the same password for all your accounts, and choose passwords that are not easy to guess. Do not use the API_SECRET for the Atlas database password. Do not use your Dexcom or CareLink user name or password for Nightscout components. Do not share the API_SECRET or other passwords to your accounts to others. Do not use Nightscout or any related applications on rooted and/or otherwise compromized devices, and ensure you always have the latest operating system and virus protection updates installed. If you want to read more about Nightscout security, including about additional configuration options to make your installation more secure, please check our security guide . Print this document to record all information during installation. Store it together securely with your diabetes documentation.","title":"Security and safekeeping"},{"location":"nightscout/new_user/#here-is-a-step-by-step-guide-for-completing-your-own-nightscout-site-diy-style","text":"APPLIES TO: +","title":"Here is a step-by-step guide for completing your own Nightscout site DIY style."},{"location":"nightscout/new_user/#create-your-heroku-github-and-atlas-accounts-from-a-computer","text":"Do not change device/computer/browser during the setup process! Note If you have unexpected issues when creating your site, restart with another browser. If this is not your first attempt to deploy Nightscout You might want to do some cleanup before.","title":"Create your Heroku, GitHub, and Atlas accounts from a computer."},{"location":"nightscout/new_user/#step-1-create-a-github-account","text":"If you already have a GitHub account and previously forked cgm-remote-monitor Make sure you delete your current cgm-remote-monitor fork using Step 1 of this guide (ONLY STEP1!) . Note You do not need several GitHub accounts for several Nightscout sites. You can connect one GitHub account to multiple Heroku apps and accounts. a) Click this link to create a GitHub account: [https://github.com/ Enter your email and click Sign up for GitHub b) Enter a password and a username (anything you want and that is accepted, not very important). Type n to decline advertisement emails. c) Play and solve the puzzle then click Create account d) GitHub will send you a verification code. Open your mail and check your inbox (check your spam-folder if not received after a couple of minutes). e) A personalization sequence will start, click Skip personalization at the bottom. f) Leave the page that opened as it is. Don't close it.","title":"Step 1: Create a GitHub account"},{"location":"nightscout/new_user/#step-2-create-a-heroku-account","text":"a) Click this link to create an Heroku account: https://signup.heroku.com/login b) Enter mandatory data (*) and click CREATE FREE ACCOUNT c) Heroku will send a confirmation email, open your mail and check your inbox (check your spam-folder if not received after a couple of minutes). d) Click on the activation link e) Create a password, it is important that you write it down for later usage. Click SET PASSWORD AND LOG IN f) Click CLICK HERE TO PROCEED Read and accept Salesforce terms of service. Se sei residente in Italia, abilita l'interruttore Are you domiciled in Italy , leggi e accetta le condizioni supplementari. g) Your Heroku page will open, click on your profile picture, in the top right corner, and select Account Settings h) Click on Billing i) Click Add credit card j) Enter your credit card information and click Save Details Note Unless you voluntarily select billable features, your credit card information is only used for verifications and you will not be charged anything. Worst case you\u2019ll be charged $0.00 k) You should now have 2 pages open: Heroku and GitHub. Leave them open.","title":"Step 2: Create a Heroku account"},{"location":"nightscout/new_user/#step-3-create-an-atlas-account","text":"a) Open another tab at: https://www.mongodb.com/cloud/atlas and click Get started now b) Enter your information, click Continue then Create account MongoDB Atlas will send you an email, if you don't receive it check your Spam folder. In the email you received from MongoDB Atlas (mongodb-atlas @ mongodb.com), click on Verify email Another browser tab will open with your confirmed MongoDB account, Continue . Enter some information (like below) and click Finish . c) Select Create a cluster in Shared Clusters (FREE) If you ever see this, just STOP We're building a free cluster: you don't need to provide any billing information. d) Leave all default values and click Create Cluster Atlas will create your default cluster, wait until it is complete... (can take more than 3 minutes) e) Click on CONNECT f) Click on Allow Access from Anywhere If you don't allow access from anywhere (IP 0.0.0.0/0) Nightscout will not be able to access your database. g) Click on Add IP Address","title":"Step 3: Create an Atlas account"},{"location":"nightscout/new_user/#h-add-a-database-username-for-example-nightscout-and-a-database-password-in-the-example-below-soo5ecret-but-please-change-it","text":"Database credentials: Do not use your Atlas account credentials. Do not use special characters: only letters and numbers. Write down these credentials in the boxes below (yes, in this browser window you're reading now, unless you're reading a printed version). You\u2019ll need them later. Database password: Database username: i) Then click Create Database User . j) Click on Choose a connection method k) Select Connect your application l) Copy the connection string: click Copy and paste it somewhere to edit it (like Notepad). m) Paste the string in the box below (yes, in this browser window you're reading now, unless you're reading a printed version). It should be similar to this ( xxxxx will be different): mongodb+srv://nightscout:<password>@cluster0.xxxxx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority n) Invent a name for your database, this is not a critical information (for example mycgmic ), note that default is myFirstDatabase . Database Name: o) Click the Generate button (just here below this line: in this browser window you're reading): Generate The connection string will appear here var bAtlas; var sdB, sPwd; var sFinalString = \"Not defined yet\"; function Generate() { var sString = sFinalString; bAtlas=0; var sString = \"Looks good!\"; var sAtlas = document.getElementById(\"myAtlas\").value; sPwd = document.getElementById(\"myPwd\").value; sdB = document.getElementById(\"mydB\").value; var iAS = sAtlas.search(\"://\"); if(iAS!=11) { sString = \"Atlas URI should start with mongodb+srv://\"; } else { var iAP = sAtlas.search(\"<password>\"); if(iAP==-1) { sString = \"Atlas URI should contain &lt;password&gt;\"; } else { var iAD = sAtlas.search(\"myFirstDatabase\"); if(iAD==-1) { sString = \"Atlas URI should contain myFirstDatabase\"; } else { bAtlas=1; sString = sAtlas.substring(0,iAP); sFinalString = sString.concat(sPwd, sAtlas.substring(iAP+10, iAD)); sString = sAtlas.substring(iAP+10, iAD); sFinalString = sFinalString.concat(sdB, sAtlas.substring(iAD+15)); } } } if(bAtlas) document.getElementById(\"result\").innerHTML = sFinalString; else document.getElementById(\"result\").innerHTML = sString; if(bAtlas) document.getElementById(\"resultbis\").innerHTML = sFinalString; } Warning Keep this string safely aside, it is called your MONGODB_URI p) If you want to do it manually: replace <password> with your database password as noted previously (in the example below soo5ecret ) and <dbname> by any text you want, say mycgmic for example. The result will be like this: mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/mycgmic?retryWrites=true&w=majority Note There are no < and > characters in the final string, neither for password nor for database name.","title":"h) Add a database username (for example nightscout) and a database password (in the example below soo5ecret but please change it!)."},{"location":"nightscout/new_user/#step-4-fork-and-deploy-cgm-remote-monitor","text":"If you previously forked cgm-remote-monitor before reaching this step, you should delete the existing cgm-remote-monitor repository before proceeding Delete your current cgm-remote-monitor fork using Step 1 of this guide (ONLY STEP1!) . a) You should now have 3 pages opened in your browser: Heroku, Atlas, and Github, Make sure you are logged-in on each one (i.e. not asking you to login) before you continue. b) Click this link https://github.com/nightscout/cgm-remote-monitor , a new GitHub page will open. Click on Fork c) Wait for a moment d) Scroll down and click Deploy to Heroku You're getting into the core setup of your site Below you'll see the minimum required configuration, you can modify the variables later in Heroku. e) Enter your CGM in the Cloud site name: invent a name you will use to see your BG in the cloud. Confirm that the name is available. f) Don\u2019t change the region. Scroll down and setup the following variables: g) API_SECRET will be your Nightscout site password, it needs to be at least 12 characters long and you should NOT use spaces if you use @ or ! symbols remember you will probably need to express them using Percent encoding in your uploader and downloader apps. If you're not sure on how to do this, it is recommended to use only letters (uppercase + lowercase) and digits. The API_SECRET is the main password allowing full access to your Nightscout site . Make sure it's reasonably secure (mix uppercase and lowercase letters, plus digits) and do no not share it publicly . If you think you exposed it by mistake, it is recommended that you change it . h) If you want to link your Dexcom Share account as a data source, complete the following lines: Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing using Dexcom Share and the bridge plugin. MOST COMMON ERRORS The BRIDGE_PASSWORD and BRIDGE_USER_NAME are NOT visible from within your Dexcom app or online account. These values are what you entered into your Dexcom mobile app when you logged into that app for the VERY FIRST time. The BRIDGE_USER_NAME is not an email address. The most common error on initial Nightscout setups is that people incorrectly use an old account or an old password. To test your username and password, go to Dexcom's Clarity page (check here for USA accounts and here for the others ) and try logging in to your Dexcom account. If your account info isn't valid, or you don't see any data in your Clarity account... you need to figure out your actual credentials before moving ahead. Password Some people have had problems with their bridge connecting when their Dexcom passwords are entirely numeric. If you have connection issues in that case, try changing your password to something with a mix of numbers and letters. Info You need to have at least one follower to use Dexcom Share. See here . i) Linking your CareLink account as a data source is not functional anymore with Heroku . Do not use the plugin below. There are alternative solutions with an Android phone and a private version of xDrip+ (recommended), or (not recommended: verify availability for your pump and country) a computer or a Raspberry Pi to bridge CareLink to Nightscout. j) Select the units you\u2019re using in DISPLAY_UNITS acceptable choices are mg/dl or mmol/L (or just mmol ). k) In ENABLE , copy and paste the following words (separated by a space) so that won't have to think about which you want now: careportal basal dbsize rawbg iob maker cob bwp cage iage sage boluscalc pushover treatmentnotify loop pump profile food openaps bage alexa override speech cors ENABLE words You find more information about the ENABLE words on the: Setup page l) Now you need the connection string you defined during the Atlas cluster creation (as the example below, but not the string below). Copy and paste it in the MONGODB_URI variable field. If you compiled all the fields and successfully generated the string this is what you should copy in MONGODB_URI : Sorry... something is missing for me to make it automatically... If you preferred to make it yourself, make sure it looks like this: mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/mycgmic?retryWrites=true&w=majority m) Scroll down to the end of the list and click Deploy app n) WAIT until completion (will take some time). Do not interrupt the process until it's complete. o) Then click View (if nothing happens, click Manage App -> Open App , in upper right corner) p) Your Nightscout site should open and direct you to a new profile creation. q) Setup your Time zone and eventually all other fields. Do not leave any fields empty. If you don't know which value to use, just use the default value. You can change these values later at any time. r) Browse down to Authentication status and click Authenticate . Enter your API secret. Click Update . s) Click Save . t) If the following pop-up shows up click OK , and check status (upper right of the window). u) If you need to modify your profile after this, authenticate with the lock icon (top right of the page): enter your API secret. Then click on the hamburger menu and select Profile Editor . Privacy warning Anyone with access to the URL of your Nightscout site, can view your BG and run reports of your data. It it strongly recommended that you enable security to your site once you're done with the setup. v) Dexcom Share and CareLink users should see data flowing in after some minutes. Other uploaders like xDrip+, Spike, xDrip4iOS, etc will need to be setup with the Nightscout address and API secret in the app.","title":"Step 4: Fork and deploy cgm-remote-monitor"},{"location":"nightscout/new_user/#papertrail","text":"Finally, you might want to modify the PAPERTRAIL_API_TOKEN line. Heroku offers a free, tiny amount of Papertrail service (this is like a logging service for how the site is running), but this generates a lot of confusion to most people later on, when they get a message that their \"Free Papertrail Service has run out of room\". Papertrail is not needed, edit the line and add DISABLED at the end, so that you can recover the function if you need it later.","title":"Papertrail"},{"location":"nightscout/new_user/#step-5-uploader-setup","text":"Continue to uploader setup.","title":"Step 5: Uploader setup"},{"location":"nightscout/new_user/#editing-config-vars-in-heroku","text":"Once Nightscout deployed, you can access your variables from Heroku in order to change or customize your site. Variables are described here . Select your app Click Settings Scroll down and click Reveal Config Vars You can modify the values clicking on the pen icon Change the contents of Value as needed then click Save Changes Changing a variable and saving a new value will restart your site, if the change is not actuated you might also want to restart all dynos .","title":"Editing Config Vars in Heroku"},{"location":"nightscout/profile_editor/","text":"Profile Editor \u2301 The top part will show your site settings: Title , Units and Date Format . Profile view \u2301 Profile Editor will display your active profile. If you created more than one profile you can select the one you want with the drop down menu Stored Profiles . You can add a profile with + , delete it with X and duplicate (clone) it to create a new one starting with the values in the current one. Note: changing profile selection keeps the modifications you've made in other profiles. Each profile has a Name , a Timezone and a DIA that you can modify. If you don't know which DIA to use, ask you endocrinologist since this is a complex subject. See also here . For each profile you can define Insulin to carb ratio (I:C) , Insulin sensitivity factor (ISF) and Carbs absorption rate . Both I:C and ISF can be defined for specific times of the day by slices of 30 minutes, click the + sign to add another interval. These values are key to diabetes management. Ask your endocrinologist about them if you don't know where to start. Look here for calculating the carbs absorption rate. If your uploader doesn't send pump basal values to Nightscout, you can duplicate the information in Basal rates in order to match your current basal profile (and Nightscout is also a nice place to save this information). Basal rates can be defined by 30 minutes intervals, click + to add another one . You can also define your Target BG range Low and High for various moments of the day. After you defined your profile you need to Authenticate with your API Secret in order to be able to save it. For modifications, read the next paragraph and make sure you understand the Database records mechanism. Modifying a profile and Database records \u2301 When you modify a profile and save it, the whole database record will be updated to reflect the profile change. This means all periods of time using this specific profile since the database record Valid time and date will be updated to your profile modification. If you don't want this to happen, you should create a new database record and recreate your profiles in this new record. You can add a record with + , delete one with X (it will delete the corresponding profiles information in the time frame of the record) and duplicate (clone) it.","title":"Profile Editor"},{"location":"nightscout/profile_editor/#profile-editor","text":"The top part will show your site settings: Title , Units and Date Format .","title":"Profile Editor"},{"location":"nightscout/profile_editor/#profile-view","text":"Profile Editor will display your active profile. If you created more than one profile you can select the one you want with the drop down menu Stored Profiles . You can add a profile with + , delete it with X and duplicate (clone) it to create a new one starting with the values in the current one. Note: changing profile selection keeps the modifications you've made in other profiles. Each profile has a Name , a Timezone and a DIA that you can modify. If you don't know which DIA to use, ask you endocrinologist since this is a complex subject. See also here . For each profile you can define Insulin to carb ratio (I:C) , Insulin sensitivity factor (ISF) and Carbs absorption rate . Both I:C and ISF can be defined for specific times of the day by slices of 30 minutes, click the + sign to add another interval. These values are key to diabetes management. Ask your endocrinologist about them if you don't know where to start. Look here for calculating the carbs absorption rate. If your uploader doesn't send pump basal values to Nightscout, you can duplicate the information in Basal rates in order to match your current basal profile (and Nightscout is also a nice place to save this information). Basal rates can be defined by 30 minutes intervals, click + to add another one . You can also define your Target BG range Low and High for various moments of the day. After you defined your profile you need to Authenticate with your API Secret in order to be able to save it. For modifications, read the next paragraph and make sure you understand the Database records mechanism.","title":"Profile view"},{"location":"nightscout/profile_editor/#modifying-a-profile-and-database-records","text":"When you modify a profile and save it, the whole database record will be updated to reflect the profile change. This means all periods of time using this specific profile since the database record Valid time and date will be updated to your profile modification. If you don't want this to happen, you should create a new database record and recreate your profiles in this new record. You can add a record with + , delete one with X (it will delete the corresponding profiles information in the time frame of the record) and duplicate (clone) it.","title":"Modifying a profile and Database records"},{"location":"nightscout/pushover/","text":"Remote notifications \u2301 While Loop app currently sends notifications locally on Loop user's iPhone, parents and caregivers likely want those messages on their phones, too. We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover. Traditionally, most people may already know of Pushover alerts through their NS site. The old Loop docs had set up for how to add your PUSHOVER_ANNOUNCEMENT_KEY , PUSHOVER_API_TOKEN , and PUSHOVER_USER_KEY in your Heroku settings to get notifications on the non-looping phones of parents and caregivers. The drawback for that method is that you could not necessarily fine-tune the alerts (maybe you wanted battery alarms on your NS website, but not get pushovers for them...a bit hard to separate out the environments that way) and Pushover had a demanding acknowledgment requirement. If you failed to acknowledge an alert, you may end up getting alarm fatigue fairly quickly as the alarm repeated itself. Using Pushover THROUGH IFTTT however, we can improve the possible notifications and who receives which ones. For example, a teenage Looper may want notifications when his/her pump site needs changing and when his/her Dexcom is about to expire in the next day. S/he already gets local notifications on his/her phone via Loop for low reservoir volumes, low pump battery, and Loop failures. Dexcom app provides high/low BG notifications locally, too. If s/he were to get those same alarms via Pushover, s/he would inevitably get alarm fatigue. A remotely-monitoring parent may want additional information, like a pushover alert when the school nurse boluses for lunch, as well as Loop failures, low iPhone battery level for the child, low pump battery, and other such information that might be useful. Perhaps there's also an emergency contact person that you only want to get high/low BG alerts...you can set that up as well quite easily. The basic concept is that NS puts out an event that triggers the IFTTT service called Webhooks (old name was \"Maker Webhooks\" hence you may see references to \"maker\" in NS docs). Actually, there are several types of events that NS has programmed in all ready to use in IFTTT. For this setup, we are going to use the most general logging event called ns-event . You'll get all the alarms and notifications logged, and then you can decide in subsequent steps which ones you'd actually like to send to your phone for pushover notification. As a brief roadmap for what we are going to do: Get necessary accounts setup Add a folder to your Google Drive Make an IFTTT applet to log NS events to your Google Spreadsheets Enable NS to work with that new IFTTT applet Make an IFTTT applet to send Pushover alert when the Google Spreadsheet is updated Get Prepped \u2301 If you don't already have these steps done, you will need them. Skip any that you already have done. Setup a Nightscout site Get an IFTTT account Get a Pushover Account Get a Google Account Download the Pushover app onto your phone, and any other phone you'd like to receive Pushover alerts Download the IFTTT app onto your phone, and any other phone you'd like to use IFTTT applets on Login to the Pushover and IFTTT apps with your login information Add a Google Drive folder \u2301 Login to your Google account and select Google Drive Click on the blue \"New\" button and create a new folder named IFTTT. Double click on the newly created IFTTT folder, select the blue \"New\" button again, and create a new subfolder called \"Nightscout-Alarms\" This IFTTT/Nightscout-Alarms folder will eventually contain numerous Google Spreadsheets, one for each NS alarm or information that is logged. As new alarms are triggered, the IFTTT applet we are about to write will add a row to the appropriate spreadsheet logging the time of the alarm and any other reported details that go with the entry. For now though, your drive will be blank...screenshot below just to give you an idea of where we are going. Make 1st IFTTT Applet to Log NS Alarms \u2301 Login to your IFTTT.com account and select the \"New Applet\" button. In the screen that appears, click on the blue \"+this\" part of the screen In the next screen, type \"webhooks\" in the search field and then click on the blue connect button If this is the first time you are using IFTTT Webhooks service, you will have a \"Connect\" button to select. If you already have IFTTT applets using Webhooks, you won't see this screen...just move to the next bullet. Click on the \"receive a web request\" blue box, and then fill in the Event Name as ns-event and then press the \"Create trigger\" button. (Side note: the event name used here corresponds to the triggers discussed above for core events that NS already has integrated for IFTTT users. If you want to, instead, use the other triggers such as ns-warn or ns-urgent, you can. This example is using the most general trigger so that the options are wider for most users.) Click on the blue \"+that\" text Enter google in the search field and click on the Google Sheets icon Select the green \"Add row to spreadsheet\" box Delete the contents of the \"Spreadsheet Name\" and \"Drive folder path\". For the \"Spreadsheet Name\", click the \"Add Ingredient\" button and select the \"Value1\". For the \"Drive folder path\", enter IFTTT/Nightscout-Alarms . You do not have to modify the \"Formatted row\" box's contents. Click the \"Create action\" button at the bottom. Turn off the toggle for receiving notifications when the applet runs, and then click the Finish button You'll now have the finished IFTTT applet that will cause a row to be added to a Google spreadsheet...tracking all your NS notifications and alarms. If it is the first time that alarm has been logged, the applet will also create the spreadsheet itself. After a while, your IFTTT/Nightscout-Alarms folder will start to look like the screenshot posted above with numerous spreadsheets for each alarm type. Enable IFTTT Webhooks in your Nightscout site \u2301 If you already have created IFTTT buttons previously to work with your NS site, you can skip this section. If those buttons are working, then you've already added your MAKER_KEY and \"maker\" to your ENABLE line in Heroku. To actually make that first applet work, we need to enter a \"Maker Key\" to get NS and IFTTT talking to each other. Find your Maker Key by going to your IFTTT account, Services and then clicking on Webhooks. (Your screen may not have as many services showing; the example account below just happens to already use several services.) You will see your Maker Key as the last part of the URL; copy that last part (the red circled part) Navigate to your Heroku account's settings tab, \"reveal config vars\" and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line. Make 2nd IFTTT Applet to send Pushover notifications \u2301 In your IFTTT account, select the \"New Applet\" button. In the screen that appears, click on the blue \"+this\" part of the screen In the next screen, type \"google\" in the search field and then click on the \"Google Sheets\" logo. Click on the \"New row added to spreadsheet\" as the trigger. Enter the following information: Folder path is IFTTT/Nightscout-Alarms and for the filename you are going to enter the name of the particular NS alarm or information that you would like to get pushover alerts for. Click on the \"Create trigger\" button to save the trigger. This applet can't be created unless your filename (alarm spreadsheet) already exists. If your 1st applet we created above hasn't run for a long time, the spreadsheets may not exist yet because the alarms haven't triggered. You have two options...(1) manually create the file in your Google Drive so that you can finish the applet now or (2) wait several days/weeks for the alarms to happen and that will automatically create the files in your Google drive. If you choose option 1, here's a partial list of some of the filenames you could create in advance: Loop isn't looping Cannula age 48 hours Cannula age 72 hours Meal Bolus Warning, Pump Reservoir Low Warning Uploader Battery is Low Temporary Override Depending on your alert levels you specified in NS, some of the hours in the titles may vary to match your settings Click on the blue \"+that\" text Enter pushover in the search field and click on the Pushover icon. If this is your first time linking your IFTTT to Pushover, you will be prompted to enter your Pushover account login and allow IFTTT access. This only needs to be done once. Select the \"Send a Pushover notification\" box Delete the contents of the \"Title\" and \"Message\" and \"URL\" boxes. For the Title, click the \"Add Ingredient\" button and add ColumnC . For the \"Message\", click the \"Add Ingredient\" button and add the values of various columns from your spreadsheet for the information you would like to include. For the alerts: ColumnC contains the alarm name, ColumnA is the date/time of the alarm, and ColumnD has more detailed information about the info/alarm. This is a pretty decent recipe to follow to get the useful information in your notification. Select the \"Message Priority\" that you would like for this particular alarm type. Select the \"Device\" that you would like to receive this particular alarm type. The devices listed will be all your devices that have Pushover app installed and logged into. Click \"Create Action\" when you are finished. You'll now have made the IFTTT applet that will cause a Pushover notification to a particular device for a particular NS alarm, once the first applet records the alarm in the google spreadsheet. Keep the \"receive notification when this Applet runs\" toggled off and click the Finish button. Revisit Nightscout Alert Levels \u2301 Putting all these notifications together may cause you to want to revisit the alert levels you have set in your Heroku settings. Here's a short summary of NS for the looping-related alerts (Note: the last row, Upbat, is the Looping iPhone battery level for Loop users; or the rig's battery level for OpenAPS users.) If you'd like some of these alarms for your site and don't currently have them activated (they are all off by default unless specifically turned on), the lines you'd need to add are in the last column. If you like the default values of the WARN and/or URGENT, you don't have to add those extra lines...just the line to enable the alerts will be sufficient. SETTING DEFAULT WARN DEFAULT URGENT HEROKU SETTINGS CAGE 48 72 CAGE_ENABLE_ALERTS = true CAGE_WARN=XX CAGE_URGENT=XX SAGE 164 168 SAGE_ENABLE_ALERTS = true SAGE_WARN=XX SAGE_URGENT=XX IAGE 48 72 IAGE_ENABLE_ALERTS = true IAGE_WARN=XX IAGE_URGENT=XX LOOP 30 60 LOOP_ENABLE_ALERTS = true LOOP_WARN=XX LOOP_URGENT=XX OPENAPS 30 60 OPENAPS_ENABLE_ALERTS = true OPENAPS_WARN=XX OPENAPS_URGENT=XX PUMP_CLOCK 30 60 PUMP_ENABLE_ALERTS = true PUMP_WARN_CLOCK=XX PUMP_URGENT_CLOCK=XX PUMP_RES 10 5 PUMP_ENABLE_ALERTS = true PUMP_WARN_RES=XX PUMP_URGENT_RES=XX PUMP_BATT_P 30 20 PUMP_ENABLE_ALERTS = true PUMP_WARN_BATT_P=XX PUMP_URGENT_BATT_P=XX PUMP_BATT_V 1.35 1.30 PUMP_ENABLE_ALERTS = true PUMP_WARN_BATT_V=XX PUMP_URGENT_BATT_V=XX UPBAT 30 20 UPBAT_ENABLE_ALERTS = true UPBAT_WARN=XX UPBAT_URGENT=XX Final notes \u2301 You can use other notification services than Pushover in the last part of the second applet. For example, you could use the SMS service to send text notifications to your iPhone instead of Pushover. The downside for that is that the SMS service is limited to 100 message each month...some users may exceed that pretty easily. Another alternative notification would be IFTTT's own Notification service. This would work well, but does not have the ability to distinguish between devices the way Pushover allows. If you use IFTTT's Notifications service, every phone using your IFTTT account will get the notices. To be clear, you do NOT need to have pushover on your ENABLE line nor have PUSHOVER_USER_KEY , PUSHOVER_API_TOKEN , or PUSHOVER_ANNOUNCEMENT_KEY entered into your Heroku settings in order for any of the above to work. This is not the same Pushover as NS has integrated into its code. This is actually through IFTTT services, you just need a Pushover account to link to during the 2nd applet setup. To create more notifications, simply repeat the steps for the 2nd applet you created, only this time use a new filename that corresponds to the spreadsheet tracking the alert you'd like notifications for. You'll end up with multiple applets of the dark blue type (the pushover notifiers) and only a single light blue (NS alarm general collector). Here are examples of the Meal Bolus and Temp Basal ns-event logging spreadsheets The 1st applet can only create up to 2000 active rows in a given spreadsheet. After that, the applet will automatically create a new spreadsheet. For most alarms, it may take quite some time to reach 2000 rows of info. For other alerts, such as temp basals being set, that may fill up rather fast for the average looper. You can either clean out the data rows periodically to make room, or update your filename in the 2nd applet periodically when a new spreadsheet is made.","title":"Remote Notifications"},{"location":"nightscout/pushover/#remote-notifications","text":"While Loop app currently sends notifications locally on Loop user's iPhone, parents and caregivers likely want those messages on their phones, too. We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover. Traditionally, most people may already know of Pushover alerts through their NS site. The old Loop docs had set up for how to add your PUSHOVER_ANNOUNCEMENT_KEY , PUSHOVER_API_TOKEN , and PUSHOVER_USER_KEY in your Heroku settings to get notifications on the non-looping phones of parents and caregivers. The drawback for that method is that you could not necessarily fine-tune the alerts (maybe you wanted battery alarms on your NS website, but not get pushovers for them...a bit hard to separate out the environments that way) and Pushover had a demanding acknowledgment requirement. If you failed to acknowledge an alert, you may end up getting alarm fatigue fairly quickly as the alarm repeated itself. Using Pushover THROUGH IFTTT however, we can improve the possible notifications and who receives which ones. For example, a teenage Looper may want notifications when his/her pump site needs changing and when his/her Dexcom is about to expire in the next day. S/he already gets local notifications on his/her phone via Loop for low reservoir volumes, low pump battery, and Loop failures. Dexcom app provides high/low BG notifications locally, too. If s/he were to get those same alarms via Pushover, s/he would inevitably get alarm fatigue. A remotely-monitoring parent may want additional information, like a pushover alert when the school nurse boluses for lunch, as well as Loop failures, low iPhone battery level for the child, low pump battery, and other such information that might be useful. Perhaps there's also an emergency contact person that you only want to get high/low BG alerts...you can set that up as well quite easily. The basic concept is that NS puts out an event that triggers the IFTTT service called Webhooks (old name was \"Maker Webhooks\" hence you may see references to \"maker\" in NS docs). Actually, there are several types of events that NS has programmed in all ready to use in IFTTT. For this setup, we are going to use the most general logging event called ns-event . You'll get all the alarms and notifications logged, and then you can decide in subsequent steps which ones you'd actually like to send to your phone for pushover notification. As a brief roadmap for what we are going to do: Get necessary accounts setup Add a folder to your Google Drive Make an IFTTT applet to log NS events to your Google Spreadsheets Enable NS to work with that new IFTTT applet Make an IFTTT applet to send Pushover alert when the Google Spreadsheet is updated","title":"Remote notifications"},{"location":"nightscout/pushover/#get-prepped","text":"If you don't already have these steps done, you will need them. Skip any that you already have done. Setup a Nightscout site Get an IFTTT account Get a Pushover Account Get a Google Account Download the Pushover app onto your phone, and any other phone you'd like to receive Pushover alerts Download the IFTTT app onto your phone, and any other phone you'd like to use IFTTT applets on Login to the Pushover and IFTTT apps with your login information","title":"Get Prepped"},{"location":"nightscout/pushover/#add-a-google-drive-folder","text":"Login to your Google account and select Google Drive Click on the blue \"New\" button and create a new folder named IFTTT. Double click on the newly created IFTTT folder, select the blue \"New\" button again, and create a new subfolder called \"Nightscout-Alarms\" This IFTTT/Nightscout-Alarms folder will eventually contain numerous Google Spreadsheets, one for each NS alarm or information that is logged. As new alarms are triggered, the IFTTT applet we are about to write will add a row to the appropriate spreadsheet logging the time of the alarm and any other reported details that go with the entry. For now though, your drive will be blank...screenshot below just to give you an idea of where we are going.","title":"Add a Google Drive folder"},{"location":"nightscout/pushover/#make-1st-ifttt-applet-to-log-ns-alarms","text":"Login to your IFTTT.com account and select the \"New Applet\" button. In the screen that appears, click on the blue \"+this\" part of the screen In the next screen, type \"webhooks\" in the search field and then click on the blue connect button If this is the first time you are using IFTTT Webhooks service, you will have a \"Connect\" button to select. If you already have IFTTT applets using Webhooks, you won't see this screen...just move to the next bullet. Click on the \"receive a web request\" blue box, and then fill in the Event Name as ns-event and then press the \"Create trigger\" button. (Side note: the event name used here corresponds to the triggers discussed above for core events that NS already has integrated for IFTTT users. If you want to, instead, use the other triggers such as ns-warn or ns-urgent, you can. This example is using the most general trigger so that the options are wider for most users.) Click on the blue \"+that\" text Enter google in the search field and click on the Google Sheets icon Select the green \"Add row to spreadsheet\" box Delete the contents of the \"Spreadsheet Name\" and \"Drive folder path\". For the \"Spreadsheet Name\", click the \"Add Ingredient\" button and select the \"Value1\". For the \"Drive folder path\", enter IFTTT/Nightscout-Alarms . You do not have to modify the \"Formatted row\" box's contents. Click the \"Create action\" button at the bottom. Turn off the toggle for receiving notifications when the applet runs, and then click the Finish button You'll now have the finished IFTTT applet that will cause a row to be added to a Google spreadsheet...tracking all your NS notifications and alarms. If it is the first time that alarm has been logged, the applet will also create the spreadsheet itself. After a while, your IFTTT/Nightscout-Alarms folder will start to look like the screenshot posted above with numerous spreadsheets for each alarm type.","title":"Make 1st IFTTT Applet to Log NS Alarms"},{"location":"nightscout/pushover/#enable-ifttt-webhooks-in-your-nightscout-site","text":"If you already have created IFTTT buttons previously to work with your NS site, you can skip this section. If those buttons are working, then you've already added your MAKER_KEY and \"maker\" to your ENABLE line in Heroku. To actually make that first applet work, we need to enter a \"Maker Key\" to get NS and IFTTT talking to each other. Find your Maker Key by going to your IFTTT account, Services and then clicking on Webhooks. (Your screen may not have as many services showing; the example account below just happens to already use several services.) You will see your Maker Key as the last part of the URL; copy that last part (the red circled part) Navigate to your Heroku account's settings tab, \"reveal config vars\" and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line.","title":"Enable IFTTT Webhooks in your Nightscout site"},{"location":"nightscout/pushover/#make-2nd-ifttt-applet-to-send-pushover-notifications","text":"In your IFTTT account, select the \"New Applet\" button. In the screen that appears, click on the blue \"+this\" part of the screen In the next screen, type \"google\" in the search field and then click on the \"Google Sheets\" logo. Click on the \"New row added to spreadsheet\" as the trigger. Enter the following information: Folder path is IFTTT/Nightscout-Alarms and for the filename you are going to enter the name of the particular NS alarm or information that you would like to get pushover alerts for. Click on the \"Create trigger\" button to save the trigger. This applet can't be created unless your filename (alarm spreadsheet) already exists. If your 1st applet we created above hasn't run for a long time, the spreadsheets may not exist yet because the alarms haven't triggered. You have two options...(1) manually create the file in your Google Drive so that you can finish the applet now or (2) wait several days/weeks for the alarms to happen and that will automatically create the files in your Google drive. If you choose option 1, here's a partial list of some of the filenames you could create in advance: Loop isn't looping Cannula age 48 hours Cannula age 72 hours Meal Bolus Warning, Pump Reservoir Low Warning Uploader Battery is Low Temporary Override Depending on your alert levels you specified in NS, some of the hours in the titles may vary to match your settings Click on the blue \"+that\" text Enter pushover in the search field and click on the Pushover icon. If this is your first time linking your IFTTT to Pushover, you will be prompted to enter your Pushover account login and allow IFTTT access. This only needs to be done once. Select the \"Send a Pushover notification\" box Delete the contents of the \"Title\" and \"Message\" and \"URL\" boxes. For the Title, click the \"Add Ingredient\" button and add ColumnC . For the \"Message\", click the \"Add Ingredient\" button and add the values of various columns from your spreadsheet for the information you would like to include. For the alerts: ColumnC contains the alarm name, ColumnA is the date/time of the alarm, and ColumnD has more detailed information about the info/alarm. This is a pretty decent recipe to follow to get the useful information in your notification. Select the \"Message Priority\" that you would like for this particular alarm type. Select the \"Device\" that you would like to receive this particular alarm type. The devices listed will be all your devices that have Pushover app installed and logged into. Click \"Create Action\" when you are finished. You'll now have made the IFTTT applet that will cause a Pushover notification to a particular device for a particular NS alarm, once the first applet records the alarm in the google spreadsheet. Keep the \"receive notification when this Applet runs\" toggled off and click the Finish button.","title":"Make 2nd IFTTT Applet to send Pushover notifications"},{"location":"nightscout/pushover/#revisit-nightscout-alert-levels","text":"Putting all these notifications together may cause you to want to revisit the alert levels you have set in your Heroku settings. Here's a short summary of NS for the looping-related alerts (Note: the last row, Upbat, is the Looping iPhone battery level for Loop users; or the rig's battery level for OpenAPS users.) If you'd like some of these alarms for your site and don't currently have them activated (they are all off by default unless specifically turned on), the lines you'd need to add are in the last column. If you like the default values of the WARN and/or URGENT, you don't have to add those extra lines...just the line to enable the alerts will be sufficient. SETTING DEFAULT WARN DEFAULT URGENT HEROKU SETTINGS CAGE 48 72 CAGE_ENABLE_ALERTS = true CAGE_WARN=XX CAGE_URGENT=XX SAGE 164 168 SAGE_ENABLE_ALERTS = true SAGE_WARN=XX SAGE_URGENT=XX IAGE 48 72 IAGE_ENABLE_ALERTS = true IAGE_WARN=XX IAGE_URGENT=XX LOOP 30 60 LOOP_ENABLE_ALERTS = true LOOP_WARN=XX LOOP_URGENT=XX OPENAPS 30 60 OPENAPS_ENABLE_ALERTS = true OPENAPS_WARN=XX OPENAPS_URGENT=XX PUMP_CLOCK 30 60 PUMP_ENABLE_ALERTS = true PUMP_WARN_CLOCK=XX PUMP_URGENT_CLOCK=XX PUMP_RES 10 5 PUMP_ENABLE_ALERTS = true PUMP_WARN_RES=XX PUMP_URGENT_RES=XX PUMP_BATT_P 30 20 PUMP_ENABLE_ALERTS = true PUMP_WARN_BATT_P=XX PUMP_URGENT_BATT_P=XX PUMP_BATT_V 1.35 1.30 PUMP_ENABLE_ALERTS = true PUMP_WARN_BATT_V=XX PUMP_URGENT_BATT_V=XX UPBAT 30 20 UPBAT_ENABLE_ALERTS = true UPBAT_WARN=XX UPBAT_URGENT=XX","title":"Revisit Nightscout Alert Levels"},{"location":"nightscout/pushover/#final-notes","text":"You can use other notification services than Pushover in the last part of the second applet. For example, you could use the SMS service to send text notifications to your iPhone instead of Pushover. The downside for that is that the SMS service is limited to 100 message each month...some users may exceed that pretty easily. Another alternative notification would be IFTTT's own Notification service. This would work well, but does not have the ability to distinguish between devices the way Pushover allows. If you use IFTTT's Notifications service, every phone using your IFTTT account will get the notices. To be clear, you do NOT need to have pushover on your ENABLE line nor have PUSHOVER_USER_KEY , PUSHOVER_API_TOKEN , or PUSHOVER_ANNOUNCEMENT_KEY entered into your Heroku settings in order for any of the above to work. This is not the same Pushover as NS has integrated into its code. This is actually through IFTTT services, you just need a Pushover account to link to during the 2nd applet setup. To create more notifications, simply repeat the steps for the 2nd applet you created, only this time use a new filename that corresponds to the spreadsheet tracking the alert you'd like notifications for. You'll end up with multiple applets of the dark blue type (the pushover notifiers) and only a single light blue (NS alarm general collector). Here are examples of the Meal Bolus and Temp Basal ns-event logging spreadsheets The 1st applet can only create up to 2000 active rows in a given spreadsheet. After that, the applet will automatically create a new spreadsheet. For most alarms, it may take quite some time to reach 2000 rows of info. For other alerts, such as temp basals being set, that may fill up rather fast for the average looper. You can either clean out the data rows periodically to make room, or update your filename in the 2nd applet periodically when a new spreadsheet is made.","title":"Final notes"},{"location":"nightscout/reports/","text":"Reports \u2301 Nightscout offers some fantastic data-crunching report tools in the drawer menu, Select Reports to open the reports page. First select the report type you'd like to see (see below for an overview). Day to day , Week to week , Daily Stats , Distribution , Hourly stats , Percentile Chart , Weekly Distribution , Calibrations , Treatments , Profiles or Loopalyzer Then select the period for which you want your data analyzed. Enable the check box and either select From: and To: dates or Today , Last 2 days , Last 3 days , Last week , Last 2 weeks , Last Month , Last 3 months . You can filter your data using key Notes or Event type (select one in the drop down list). You can select which week days to use in order to better analyze patterns. Confirm your Target BT range bottom and top for your TIR and graph range lines. You can also sort the report from older to newer or newer first. Click SHOW and wait for data to load and rendering to complete. This might take some time if the period is long. Day To day \u2301 This report will show your BG, day by day, including the treatments you select. If you want to change selections, you need to click again SHOW to update the view. If you select Insulin distribution you will get a short report. Note: You need Basal rate enabled to see bolus vs basal information. You can change the vertical scale to Logarithmic or Linear . You can change the graph Size . Week to Week \u2301 This report will give you a week by week view, with color code for week days selected. Daily stats \u2301 This report will give you a daily distribution view. Distribution \u2301 This report will give you a complete distribution view with a lot of information on the dates range you selected. You also can filter by hours (scroll to the bottom of the page). A1c is only a rough estimation that can be very inaccurate and does not replace actual blood testing. The formula used is taken from:Nathan, David M., et al. \"Translating the A1C assay into estimated average glucose values.\" Diabetes care 31.8 (2008): 1473-1478. Time in fluctuation and Time in rapid fluctuation measure the % of time during the examined period, during which the blood glucose has been changing relatively fast or rapidly. Lower values are better. Mean Total Daily Change is a sum of the absolute value of all glucose excursions for the examined period, divided by the number of days. Lower is better. Mean Hourly Change is a sum of the absolute value of all glucose excursions for the examined period, divided by the number of hours in the period. Lower is better. Out of Range RMS is calculated by squaring the distance out of range for all glucose readings for the examined period, summing them, dividing by the count and taking the square root. This metric is similar to in-range percentage but weights readings far out of range higher. Lower values are better. GVI (Glycemic Variability Index) and PGS (Patient Glycemic Status) are measures developed by Dexcom, detailed can be found here . Hourly stats \u2301 This report will give you an hourly distribution view with a box plot and additional hour by hour statistics. Percentile Chart \u2301 This report will give you an percentile distribution view of the range you selected. Weekly Distribution \u2301 This report will give you an weekly view of your statistics. Calibrations \u2301 This will give you a a table of your calibrations, if your uploader sends the correct event and data. Treatments \u2301 This will give you a a table of your treatments, day by day. Profiles \u2301 This report will display profiles used in the time range. Loopalyzer \u2301 Loopalyzer is an utility made to help analyze and tune closed loop systems. It may work with other setups as well, both closed and open loop, and non loop. Select the period on which you want to run the report then click Show . A set of graphs will display top to bottom your basal profile, blood glucose, loop deviation from basal (that should be minimized for an optimized closed loop system), insulin on board and carbs on board. On the last two graphs, treatments are represented by vertical black bars. Using the dedicated menu you can display your profiles below the graph and use Timeshift . Click Show to update the display when changing the options. You can navigate day to day with < Previous day and Next day > or by period length with << Previous and Next >> (i.e. if you selected a week it will go backwards and forward week by week). Timeshift will allow you to synchronize meals within a time range in order to better analyze your data. Obviously the rest of the day will not make sense since the shift only highlights the time range you are analyzing now. For example below: dinner analysis. You might also be interested by AutoTune . Nightscout Reporter \u2301 https://nightscout-reporter.zreptil.de/ can be used to generate PDF documents with the data stored at Nightscout. You need to add cors to your ENABLE variables Facebook group Nightscout Reporter Power BI \u2301 Facebook group Nightscout Power BI Reporting","title":"Reports"},{"location":"nightscout/reports/#reports","text":"Nightscout offers some fantastic data-crunching report tools in the drawer menu, Select Reports to open the reports page. First select the report type you'd like to see (see below for an overview). Day to day , Week to week , Daily Stats , Distribution , Hourly stats , Percentile Chart , Weekly Distribution , Calibrations , Treatments , Profiles or Loopalyzer Then select the period for which you want your data analyzed. Enable the check box and either select From: and To: dates or Today , Last 2 days , Last 3 days , Last week , Last 2 weeks , Last Month , Last 3 months . You can filter your data using key Notes or Event type (select one in the drop down list). You can select which week days to use in order to better analyze patterns. Confirm your Target BT range bottom and top for your TIR and graph range lines. You can also sort the report from older to newer or newer first. Click SHOW and wait for data to load and rendering to complete. This might take some time if the period is long.","title":"Reports"},{"location":"nightscout/reports/#day-to-day","text":"This report will show your BG, day by day, including the treatments you select. If you want to change selections, you need to click again SHOW to update the view. If you select Insulin distribution you will get a short report. Note: You need Basal rate enabled to see bolus vs basal information. You can change the vertical scale to Logarithmic or Linear . You can change the graph Size .","title":"Day To day"},{"location":"nightscout/reports/#week-to-week","text":"This report will give you a week by week view, with color code for week days selected.","title":"Week to Week"},{"location":"nightscout/reports/#daily-stats","text":"This report will give you a daily distribution view.","title":"Daily stats"},{"location":"nightscout/reports/#distribution","text":"This report will give you a complete distribution view with a lot of information on the dates range you selected. You also can filter by hours (scroll to the bottom of the page). A1c is only a rough estimation that can be very inaccurate and does not replace actual blood testing. The formula used is taken from:Nathan, David M., et al. \"Translating the A1C assay into estimated average glucose values.\" Diabetes care 31.8 (2008): 1473-1478. Time in fluctuation and Time in rapid fluctuation measure the % of time during the examined period, during which the blood glucose has been changing relatively fast or rapidly. Lower values are better. Mean Total Daily Change is a sum of the absolute value of all glucose excursions for the examined period, divided by the number of days. Lower is better. Mean Hourly Change is a sum of the absolute value of all glucose excursions for the examined period, divided by the number of hours in the period. Lower is better. Out of Range RMS is calculated by squaring the distance out of range for all glucose readings for the examined period, summing them, dividing by the count and taking the square root. This metric is similar to in-range percentage but weights readings far out of range higher. Lower values are better. GVI (Glycemic Variability Index) and PGS (Patient Glycemic Status) are measures developed by Dexcom, detailed can be found here .","title":"Distribution"},{"location":"nightscout/reports/#hourly-stats","text":"This report will give you an hourly distribution view with a box plot and additional hour by hour statistics.","title":"Hourly stats"},{"location":"nightscout/reports/#percentile-chart","text":"This report will give you an percentile distribution view of the range you selected.","title":"Percentile Chart"},{"location":"nightscout/reports/#weekly-distribution","text":"This report will give you an weekly view of your statistics.","title":"Weekly Distribution"},{"location":"nightscout/reports/#calibrations","text":"This will give you a a table of your calibrations, if your uploader sends the correct event and data.","title":"Calibrations"},{"location":"nightscout/reports/#treatments","text":"This will give you a a table of your treatments, day by day.","title":"Treatments"},{"location":"nightscout/reports/#profiles","text":"This report will display profiles used in the time range.","title":"Profiles"},{"location":"nightscout/reports/#loopalyzer","text":"Loopalyzer is an utility made to help analyze and tune closed loop systems. It may work with other setups as well, both closed and open loop, and non loop. Select the period on which you want to run the report then click Show . A set of graphs will display top to bottom your basal profile, blood glucose, loop deviation from basal (that should be minimized for an optimized closed loop system), insulin on board and carbs on board. On the last two graphs, treatments are represented by vertical black bars. Using the dedicated menu you can display your profiles below the graph and use Timeshift . Click Show to update the display when changing the options. You can navigate day to day with < Previous day and Next day > or by period length with << Previous and Next >> (i.e. if you selected a week it will go backwards and forward week by week). Timeshift will allow you to synchronize meals within a time range in order to better analyze your data. Obviously the rest of the day will not make sense since the shift only highlights the time range you are analyzing now. For example below: dinner analysis. You might also be interested by AutoTune .","title":"Loopalyzer"},{"location":"nightscout/reports/#nightscout-reporter","text":"https://nightscout-reporter.zreptil.de/ can be used to generate PDF documents with the data stored at Nightscout. You need to add cors to your ENABLE variables Facebook group Nightscout Reporter","title":"Nightscout Reporter"},{"location":"nightscout/reports/#power-bi","text":"Facebook group Nightscout Power BI Reporting","title":"Power BI"},{"location":"nightscout/security/","text":"Nightscout Security \u2301 APPLIES TO: For users, your page is already secured and views can be defined from your Share panel . Nightscout security model is based on the following assumptions: The users of Nightscout only use it to process information about themselves or someone they're legally responsible for and thus own all of the data being stored in Nightscout. Given the user / operator of Nightscout is assumed to have full ownership of the data stored in Nightscout, it is assumed the user has full responsibility around the use and sharing of the data. Nightscout provides a set of APIs for reading and writing data into the Nightscout database. Nightscout itself does not directly interface with any devices. Nightscout users should verify any applications using the APIs to process the data in Nightscout have been implemented in a secure fashion and have data validation processes in place in case an unauthorized user gains access to Nightscout and alters the data. If unauthorized users gain access to the server being used to host Nightscout, the database used with Nightscout or any device used to access the Nightscout APIs, the entire system's security has to be considered compromised and the user must assume any data stored in the system might be altered and thus should not be trusted. Personal use only The system has not been designed for scenarios where a third party operates a Nightscout installation on behalf of others and if such installations are made, both the users and operators of such installations need to understand there is a large body of legislation across the world that covers use cases and data storage enabled by Nightscout and the liability issues around such installations are extremely complicated. Security and safekeeping \u2301 Use the same email address for all accounts so you'll have access to all your accounts after installation. Do not use a disposable email address - use something you know you can access later. Use a safe password for all accounts related to Nightscout, including the password for the email account for the accounts. We highly recommend using a password manager such as 1Password and allowing it to generate the passwords for you. Do not reuse the same password for all your accounts. Do not use your Dexcom or CareLink user name or password for Nightscout components. Do not use the API_SECRET for the Atlas database password. Do not share the API_SECRET or access tokens with administration privileges to anyone, ever. If you need to grant access to Nightscout, see below for instructions how to create access tokens for this purpose. Do not use Nightscout or any related applications on rooted and/or otherwise compromised devices, and ensure you always have the latest operating system and virus protection updates installed. HTTPS and certificate errors \u2301 One of the core security mechanisms on web is the SSL encryption applied to HTTP connections. When installed to Heroku, Nightscout by default forces connections to use HTTPS, thus ensuring the connection is encrypted. For secure Nightscout use, it's crucial that you assume something is wrong if you ever see your browser complain the SSL certificate of your Nightscout site does not match or work as expected by the browser. This can be a sign of a so called Man In The Middle (MITM) attack and proceeding with the problematic certificate will subsequently compromise your Nightscout site. If you see an error related to SSL, you should immediately rename the site (see below for instructions). Administration messages \u2301 Nightscout 14.2 introduced a new feature called Admin Notifies, which can warn you about issues with Nightscout installation and security issues. If you see the red megaphone in your navigation bar, it means you have messages in the queue. You have to be authenticated to Nightscout using the API_SECRET or an authentication token that has administration access to read the messages. There are multiple types of messages that might be shown: I'm seeing a message about the API_SECRET being weak \u2301 This message is shown when cryptographic analysis if the API_SECRET shows the secret is easily guessable by a computer and should be changed. Things you can do to have this message go away: The API_SECRET must be at least 12 characters long, but making it even longer makes it more secure Use a mix of small and CAPITAL letters, numbers and non-alphanumeric characters such as !#%&/()= in the API_SECRET Note: make sure your uploader and downloaders can handle special characters, you might need to express them using Percent encoding for example an API_SECRET like D0n't*H4ck@M3% would be expressed as: D0n%27t%2AH4ck%40M3%25 Consider generating the API_SECRET using a password manager The API_SECRET is set in the Heroku Settings (see here on how to edit the variables). I'm seeing a message about authentication failures \u2301 This is highly likely caused by you having installed an app on some device with the wrong API_SECRET or access token, and the app trying to authenticate to your Nightscout, or you or one of the family members have just tried to sign into Nightscout with wrong credentials. If you have apps running that use the Nightscout REST API, check you have the correct API_SECRET and/or access token configured to each. If the message keeps appearing unexpectedly or is reported against multiple IP numbers, it's possible someone is trying to brute force attack your installation and guess your API_SECRET to be able to modify data in your Nightscout. In this situation, we highly recommend you rename the Nightscout site in Heroku to change it's address and pick a name that's hard to guess. I'm seeing a message Nightscout is readable by the world \u2301 This means the site shows the CGM data to users who can guess the site address without authentication. Note Nightscout never allows data to be saved or edited without authentication, so this is not necessarily a problem depending on how hard your site address is to guess and how you want the information to be shared. If you want to have the site require authentication, read the \"How to Turn Off Unauthorized Access\" section below. Renaming the Nightscout site \u2301 If you're using Heroku you can rename your Nightscout site URL in your app Settings . Once done, make sure all apps (uploaders and downloaders) are updated accordingly, How to Turn Off Unauthorized Access \u2301 Privacy warning In a default setup, anyone with your Nightscout URL can view your site. Note Make sure the app you use to see your data can handle a secured Nightscout site. To Take Advantage of Roles, Turn Off Unauthorized Access to Your Site: If you want to ensure that ONLY someone with permission to view your site (e.g., a token) is able to view the data, you should configure the AUTH_DEFAULT_ROLES variable in Heroku. Set the value as: denied . Edit (or add) your variable in Heroku and set it to denied . This creates a scenario in which a token will be required for all access (even only view). Create Authentication Tokens for Users \u2301 Note: authentication tokens are also called access tokens Changing API_SECRET If you change your API_SECRET all your tokens will change. Make sure you update your devices and send the new token link to those you allowed to access your Nightscout To access the Authentication options, click the settings panel (three horizontal bars in the top right) in your website and select Admin Tools. The Authentication options are at the top of the Admin page. (Note: you must be logged in with your API SECRET to access these tools.) You will see several predefined roles: Roles \u2301 admin : full access careportal : can view the site and make CarePortal/treatment entries readable : read-only access; no ability to make CarePortal/treatment entries. This user CAN see reports and profile information. denied : no access (this role only works if the AUTH_DEFAULT_ROLES setting is also denied . You can\u2019t have a site that is readable to everyone and create a \u201cdenied\u201d token for a specific user.) devicestatus-upload : used by devices Note There is currently no way to limit a user so that he cannot view the Reports section if he has access to the site. Time/date-based roles are not currently possible. Create a Token \u2301 Click the \u201cAdd New Subject\u201d button. Fill in the name of the subject and the \u201crole\u201d you are giving this subject (from the list of roles shown above). Note you should only grant the readable role for users who do not need to save or edit data in Nightscout. For example, you might want to share the site to a school nurse, but not have him able edit the data. Click save. The token will be shown. You can use it in two different ways: Copy the token URL (right-click on it in the browser and select the option to copy the link address) and provide it to the user (e.g., paste it into an email). If the user enters the entire URL (with token), the token will be in effect. Copy the token string (in the example below school-a595d5f0aeff64c0 ) and use it for authentication at site opening, instead of the API secret (Nightscout minimum version 14.1.0 required). You can also add the token to the site URL to authenticate using a token. Your site link with token will look like this: https://yoursitename.herokuapp.com/?token=school-a595d5f0aeff64c0 Anybody with this link can use your Nightscout with the role defined for this token. Note If the user copies only your core URL into a browser, and your site is readable by default, the token will be bypassed. (Possible strategies to ensure the user puts the role-based URL into a browser include using a tinyurl or bit.ly.) You can edit a subject by clicking the edit icon, making changes, and saving. You can delete a subject by clicking the \u201cx\u201d icon to remove the subject from the list. Developers: API authorization \u2301 See this page for how to authenticate your app in the API calls.","title":"Secure your site"},{"location":"nightscout/security/#nightscout-security","text":"APPLIES TO: For users, your page is already secured and views can be defined from your Share panel . Nightscout security model is based on the following assumptions: The users of Nightscout only use it to process information about themselves or someone they're legally responsible for and thus own all of the data being stored in Nightscout. Given the user / operator of Nightscout is assumed to have full ownership of the data stored in Nightscout, it is assumed the user has full responsibility around the use and sharing of the data. Nightscout provides a set of APIs for reading and writing data into the Nightscout database. Nightscout itself does not directly interface with any devices. Nightscout users should verify any applications using the APIs to process the data in Nightscout have been implemented in a secure fashion and have data validation processes in place in case an unauthorized user gains access to Nightscout and alters the data. If unauthorized users gain access to the server being used to host Nightscout, the database used with Nightscout or any device used to access the Nightscout APIs, the entire system's security has to be considered compromised and the user must assume any data stored in the system might be altered and thus should not be trusted. Personal use only The system has not been designed for scenarios where a third party operates a Nightscout installation on behalf of others and if such installations are made, both the users and operators of such installations need to understand there is a large body of legislation across the world that covers use cases and data storage enabled by Nightscout and the liability issues around such installations are extremely complicated.","title":"Nightscout Security"},{"location":"nightscout/security/#security-and-safekeeping","text":"Use the same email address for all accounts so you'll have access to all your accounts after installation. Do not use a disposable email address - use something you know you can access later. Use a safe password for all accounts related to Nightscout, including the password for the email account for the accounts. We highly recommend using a password manager such as 1Password and allowing it to generate the passwords for you. Do not reuse the same password for all your accounts. Do not use your Dexcom or CareLink user name or password for Nightscout components. Do not use the API_SECRET for the Atlas database password. Do not share the API_SECRET or access tokens with administration privileges to anyone, ever. If you need to grant access to Nightscout, see below for instructions how to create access tokens for this purpose. Do not use Nightscout or any related applications on rooted and/or otherwise compromised devices, and ensure you always have the latest operating system and virus protection updates installed.","title":"Security and safekeeping"},{"location":"nightscout/security/#https-and-certificate-errors","text":"One of the core security mechanisms on web is the SSL encryption applied to HTTP connections. When installed to Heroku, Nightscout by default forces connections to use HTTPS, thus ensuring the connection is encrypted. For secure Nightscout use, it's crucial that you assume something is wrong if you ever see your browser complain the SSL certificate of your Nightscout site does not match or work as expected by the browser. This can be a sign of a so called Man In The Middle (MITM) attack and proceeding with the problematic certificate will subsequently compromise your Nightscout site. If you see an error related to SSL, you should immediately rename the site (see below for instructions).","title":"HTTPS and certificate errors"},{"location":"nightscout/security/#administration-messages","text":"Nightscout 14.2 introduced a new feature called Admin Notifies, which can warn you about issues with Nightscout installation and security issues. If you see the red megaphone in your navigation bar, it means you have messages in the queue. You have to be authenticated to Nightscout using the API_SECRET or an authentication token that has administration access to read the messages. There are multiple types of messages that might be shown:","title":"Administration messages"},{"location":"nightscout/security/#im-seeing-a-message-about-the-api_secret-being-weak","text":"This message is shown when cryptographic analysis if the API_SECRET shows the secret is easily guessable by a computer and should be changed. Things you can do to have this message go away: The API_SECRET must be at least 12 characters long, but making it even longer makes it more secure Use a mix of small and CAPITAL letters, numbers and non-alphanumeric characters such as !#%&/()= in the API_SECRET Note: make sure your uploader and downloaders can handle special characters, you might need to express them using Percent encoding for example an API_SECRET like D0n't*H4ck@M3% would be expressed as: D0n%27t%2AH4ck%40M3%25 Consider generating the API_SECRET using a password manager The API_SECRET is set in the Heroku Settings (see here on how to edit the variables).","title":"I'm seeing a message about the API_SECRET being weak"},{"location":"nightscout/security/#im-seeing-a-message-about-authentication-failures","text":"This is highly likely caused by you having installed an app on some device with the wrong API_SECRET or access token, and the app trying to authenticate to your Nightscout, or you or one of the family members have just tried to sign into Nightscout with wrong credentials. If you have apps running that use the Nightscout REST API, check you have the correct API_SECRET and/or access token configured to each. If the message keeps appearing unexpectedly or is reported against multiple IP numbers, it's possible someone is trying to brute force attack your installation and guess your API_SECRET to be able to modify data in your Nightscout. In this situation, we highly recommend you rename the Nightscout site in Heroku to change it's address and pick a name that's hard to guess.","title":"I'm seeing a message about authentication failures"},{"location":"nightscout/security/#im-seeing-a-message-nightscout-is-readable-by-the-world","text":"This means the site shows the CGM data to users who can guess the site address without authentication. Note Nightscout never allows data to be saved or edited without authentication, so this is not necessarily a problem depending on how hard your site address is to guess and how you want the information to be shared. If you want to have the site require authentication, read the \"How to Turn Off Unauthorized Access\" section below.","title":"I'm seeing a message Nightscout is readable by the world"},{"location":"nightscout/security/#renaming-the-nightscout-site","text":"If you're using Heroku you can rename your Nightscout site URL in your app Settings . Once done, make sure all apps (uploaders and downloaders) are updated accordingly,","title":"Renaming the Nightscout site"},{"location":"nightscout/security/#how-to-turn-off-unauthorized-access","text":"Privacy warning In a default setup, anyone with your Nightscout URL can view your site. Note Make sure the app you use to see your data can handle a secured Nightscout site. To Take Advantage of Roles, Turn Off Unauthorized Access to Your Site: If you want to ensure that ONLY someone with permission to view your site (e.g., a token) is able to view the data, you should configure the AUTH_DEFAULT_ROLES variable in Heroku. Set the value as: denied . Edit (or add) your variable in Heroku and set it to denied . This creates a scenario in which a token will be required for all access (even only view).","title":"How to Turn Off Unauthorized Access"},{"location":"nightscout/security/#create-authentication-tokens-for-users","text":"Note: authentication tokens are also called access tokens Changing API_SECRET If you change your API_SECRET all your tokens will change. Make sure you update your devices and send the new token link to those you allowed to access your Nightscout To access the Authentication options, click the settings panel (three horizontal bars in the top right) in your website and select Admin Tools. The Authentication options are at the top of the Admin page. (Note: you must be logged in with your API SECRET to access these tools.) You will see several predefined roles:","title":"Create Authentication Tokens for Users"},{"location":"nightscout/security/#roles","text":"admin : full access careportal : can view the site and make CarePortal/treatment entries readable : read-only access; no ability to make CarePortal/treatment entries. This user CAN see reports and profile information. denied : no access (this role only works if the AUTH_DEFAULT_ROLES setting is also denied . You can\u2019t have a site that is readable to everyone and create a \u201cdenied\u201d token for a specific user.) devicestatus-upload : used by devices Note There is currently no way to limit a user so that he cannot view the Reports section if he has access to the site. Time/date-based roles are not currently possible.","title":"Roles"},{"location":"nightscout/security/#create-a-token","text":"Click the \u201cAdd New Subject\u201d button. Fill in the name of the subject and the \u201crole\u201d you are giving this subject (from the list of roles shown above). Note you should only grant the readable role for users who do not need to save or edit data in Nightscout. For example, you might want to share the site to a school nurse, but not have him able edit the data. Click save. The token will be shown. You can use it in two different ways: Copy the token URL (right-click on it in the browser and select the option to copy the link address) and provide it to the user (e.g., paste it into an email). If the user enters the entire URL (with token), the token will be in effect. Copy the token string (in the example below school-a595d5f0aeff64c0 ) and use it for authentication at site opening, instead of the API secret (Nightscout minimum version 14.1.0 required). You can also add the token to the site URL to authenticate using a token. Your site link with token will look like this: https://yoursitename.herokuapp.com/?token=school-a595d5f0aeff64c0 Anybody with this link can use your Nightscout with the role defined for this token. Note If the user copies only your core URL into a browser, and your site is readable by default, the token will be bypassed. (Possible strategies to ensure the user puts the role-based URL into a browser include using a tinyurl or bit.ly.) You can edit a subject by clicking the edit icon, making changes, and saving. You can delete a subject by clicking the \u201cx\u201d icon to remove the subject from the list.","title":"Create a Token"},{"location":"nightscout/security/#developers-api-authorization","text":"See this page for how to authenticate your app in the API calls.","title":"Developers: API authorization"},{"location":"nightscout/setup_variables/","text":"Nightscout Configuration \u2301 Nightscout configuration is held in variables , their content can be modified to change and customize the behavior (data source, security, alarms, ...) and appearance (language, colors, visible items, ...). When deploying your Nightscout, most are left with default values and with time you might want to tune your site. APPLIES TO: Editing Config Vars in Heroku \u2301 See here where and how to change your variables. APPLIES TO: You can change your settings in the Control Panel see here for available variables and plugins. Nightscout Config Vars \u2301 Required variables \u2301 MONGODB_URI \u2301 The connection string required to access your database (where all your data is stored in the cloud). This string is vital to your Nightscout functioning. A wrong connection string will prevent your site to open and your data to upload in Nightscout An Atlas database string will look like this: mongodb+svr://sally:sallypass@cluster0.abcdef.mongodb.net/nightscout?retryWrites=true&w=majority Note If you migrated from mLab, this variable might be MONGO_CONNECTION . Only one of these two variables must be present: MONGODB_URI or MONGO_CONNECTION . API_SECRET \u2301 This is an important password Knowing your site's API Secret gives anybody full access to your Nightscout data, allows uploading to your site and uncontrolled access. Make sure you keep this password secret and avoid exposing it publicly. A passphrase that must be at least 12 characters long. MyV3ry53cr37 Note This is the passcode that will be required by the uploader app (if any) to send data to your site, and that will allow you to modify your site parameters from the web interface. Keep it secret, only share it with trusted people, change it if you believe it's been exposed publicly. Minimum length is 12 characters, don't make it too long and do not put special characters in it (better stick to letters and numbers). It is case-sensitive. MONGO_COLLECTION ( entries ) \u2301 Deprecated (set as system default) from 14.0.7 The Mongo collection where CGM entries are stored. Leave default entries . DISPLAY_UNITS \u2301 Preferred BG units for the site: mg/dl or mmol/L (or just mmol ). Setting to mmol/L puts the entire server into mmol/L mode by default, no further settings needed. Features \u2301 ENABLE \u2301 Select the right plugins! Better too many than not enough. Plugins to enable for your site. Must be a space-delimited, lower-case list. careportal basal dbsize Include the word bridge here if you are receiving data from the Dexcom Share service. careportal basal dbsize bridge If you don't want to decide now, add all the followings, you can disable them if you don't need them: careportal basal dbsize rawbg iob maker bridge cob bwp cage iage sage boluscalc pushover treatmentnotify mmconnect loop pump profile food openaps bage alexa override cors Note: mmconnect is not functional with Heroku (if you wanted to bridge from the MiniMed CareLink service you will need another device to send data to Nightscout). If you are sending data to CareLink do NOT enable mmconnect . DISABLE \u2301 Used to disable default features, expects a space delimited list. For example this will disable the direction arrow and uploader battery information: direction upbat BASE_URL \u2301 Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site. AUTH_DEFAULT_ROLES \u2301 Possible values readable , denied , or any valid role name. When readable , anyone can view Nightscout without a token. Setting it to denied will require a token from every visit, using status-only will enable api-secret based login. IMPORT_CONFIG \u2301 Used to import settings and extended settings from a url such as a gist. Structure of file should be something like: {\"settings\": {\"theme\": \"colors\"}, \"extendedSettings\": {\"upbat\": {\"enableAlerts\": true}}} TREATMENTS_AUTH \u2301 Possible values on or off . Deprecated, if set to off the careportal role will be added to AUTH_DEFAULT_ROLES Alarms \u2301 These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI. ALARM_TYPES ( simple ) \u2301 TYPES Keep the simple type if you want BG_ parameters (setup below) to be used. simple and/or predict . Simple alarms trigger when BG crosses the various thresholds set below. Predict alarms uses highly tuned formula that forecasts where the BG is going based on its trend. You will not get warnings when crossing any of the BG_ thresholds set below when using only the predict type. simple BG Thresholds These values are the ones that will trigger simple alarms. They are expressed in the unit you selected with DISPLAY_UNITS . BG_HIGH ( 260 ) \u2301 Urgent High BG threshold, triggers the ALARM_URGENT_HIGH alarm. BG_LOW ( 55 ) \u2301 Urgent Low BG threshold, triggers the ALARM_URGENT_LOW alarm. BG_TARGET_BOTTOM ( 80 ) \u2301 Low BG threshold, triggers the ALARM_LOW alarm. BG_TARGET_TOP ( 180 ) \u2301 High BG threshold, triggers the ALARM_HIGH alarm. ALARM_* ALARM_URGENT_* You can setup alarms, so that when your Nightscout page is open and the alarm enabled, above ( HIGH ) or below ( LOW ) a certain threshold, a sound might play. ALARM_URGENT_HIGH ( on ) \u2301 Default setting for new browser views, for the Urgent High alarm (triggered when BG crosses BG_HIGH ). ( on or off ) ALARM_HIGH ( on ) \u2301 Default setting for new browser views, for the High alarm (triggered when BG crosses BG_TARGET_TOP ). ( on or off ) ALARM_LOW ( on ) \u2301 Default setting for new browser views, for the Low alarm (triggered when BG crosses BG_TARGET_BOTTOM ). ( on or off ) ALARM_URGENT_LOW ( on ) \u2301 Default setting for new browser views, for the Urgent Low alarm (triggered when BG crosses BG_LOW ). ( on or off ) Pushover ALARM_*_MINS : Only the first value of the space separated list, for options in browser, will be used for pushover. ALARM_URGENT_HIGH_MINS ( 30 60 90 120 ) \u2301 Number of minutes to snooze urgent high alarms. ALARM_HIGH_MINS ( 30 60 90 120 ) \u2301 Number of minutes to snooze high alarms. ALARM_LOW_MINS ( 15 30 45 60 ) \u2301 Number of minutes to snooze low alarms. ALARM_URGENT_LOW_MINS ( 15 30 45 ) \u2301 Number of minutes to snooze urgent low alarms. ALARM_URGENT_MINS ( 30 60 90 120 ) \u2301 Number of minutes to snooze urgent alarms (that aren't tagged as high or low). ALARM_WARN_MINS ( 30 60 90 120 ) \u2301 Number of minutes to snooze warning alarms (that aren't tagged as high or low). TIMEAGO Missing data alarms can also be setup, so that when your Nightscout page is open and the alarm enabled, after a certain time without receiving BG, a sound might play. ALARM_TIMEAGO_URGENT ( on ) \u2301 Default setting for new browser views, for an urgent alarm when CGM data hasn't been received in the number of minutes set in ALARM_TIMEAGO_URGENT_MINS . on or off ) ALARM_TIMEAGO_URGENT_MINS ( 30 ) \u2301 Default setting for new browser views, for the number of minutes since the last CGM reading to trigger an ALARM_TIMEAGO_URGENT alarm. ALARM_TIMEAGO_WARN ( 180 ) \u2301 Default setting for new browser views, for a warning alarm when CGM data hasn't been received in the number of minutes set in ALARM_TIMEAGO_WARN_MINS . ( on or off ) ALARM_TIMEAGO_WARN_MINS ( 15 ) \u2301 Default setting for new browser views, for the number of minutes since the last CGM reading to trigger an ALARM_TIMEAGO_WARN alarm. Core \u2301 MONGO_TREATMENTS_COLLECTION ( treatments ) \u2301 The collection used to store treatments entered in the Care Portal, see the ENABLE env var above MONGO_DEVICESTATUS_COLLECTION ( devicestatus ) \u2301 The collection used to store device status information such as uploader battery MONGO_PROFILE_COLLECTION ( profile ) \u2301 The collection used to store your profiles MONGO_FOOD_COLLECTION ( food ) \u2301 The collection used to store your food database MONGO_ACTIVITY_COLLECTION ( activity ) \u2301 The collection used to store activity data PORT ( 1337 ) \u2301 The port that the node.js application will listen on. HOSTNAME \u2301 The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use :: . SSL_KEY \u2301 Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key). SSL_CERT \u2301 Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca). SSL_CA \u2301 Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain). HEARTBEAT ( 60 ) \u2301 Number of seconds to wait in between database checks DEBUG_MINIFY ( true ) \u2301 Debug option, setting to false will disable bundle minification to help tracking down error and speed up development DE_NORMALIZE_DATES ( true ) \u2301 The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to true causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST. Predefined values for your browser settings (optional) \u2301 TIME_FORMAT ( 12 ) \u2301 Possible values 12 or 24 NIGHT_MODE ( off ) \u2301 Possible values on or off SHOW_RAWBG ( never ) \u2301 Default setting for new browser views, for the display of raw CGM data (if available). ( always , never , or noise ) CUSTOM_TITLE ( Nightscout ) \u2301 This will change your Nightscout displayed name (top left) from default. The display name for the Nightscout site. Appears in the upper left of the main view. Often set to the name of the CGM wearer. THEME ( colors ) \u2301 Default setting for new browser views, for the color theme of the CGM graph. default colors colorblindfriendly SHOW_PLUGINS \u2301 Default setting for whether or not these plugins are checked (active) by default, not merely enabled. Include plugins here as in the ENABLE line; space-separated and lower-case. More details below . SHOW_FORECAST ( ar2 ) \u2301 Plugin forecasts that should be shown by default, supports space delimited values such as \"ar2 openaps\" LANGUAGE ( en ) \u2301 Language of Nightscout. If not available English is used. Currently supported language codes are: bg (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438), cs (\u010ce\u0161tina), de (Deutsch), dk (Dansk), el (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), en (English), es (Espa\u00f1ol), fi (Suomi), fr (Fran\u00e7ais), he (\u05e2\u05d1\u05e8\u05d9\u05ea), hr (Hrvatski), it (Italiano), ko (\ud55c\uad6d\uc5b4), nb (Norsk (Bokm\u00e5l)), nl (Nederlands), pl (Polski), pt (Portugu\u00eas (Brasil)), ro (Rom\u00e2n\u0103), ru (\u0420\u0443\u0441\u0441\u043a\u0438\u0439), sk (Sloven\u010dina), sv (Svenska), tr (Turkish), zh_cn (\u4e2d\u6587\uff08\u7b80\u4f53)), zh_tw (\u4e2d\u6587\uff08\u7e41\u9ad4)) SCALE_Y ( log ) \u2301 The type of scaling used for the Y axis of the charts system wide. The default log (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range. The linear option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted. The log-dynamic is similar to the default log options, but uses the same dynamic range and the linear scale. EDIT_MODE ( on ) \u2301 Possible values on or off . Enables the icon allowing for editing of treatments in the main view. More about edit here . BOLUS_RENDER \u2301 Settings to configure Bolus rendering BOLUS_RENDER_OVER ( 0 ) - U value over which the bolus labels use the format defined in BOLUS_RENDER_FORMAT . This value can be an integer or a float, e.g. 0.3 , 1.5 , 2 , etc. BOLUS_RENDER_FORMAT ( default ) - Possible values are hidden , default (with leading zero and U), concise (with U, without leading zero), and minimal (without leading zero and U). BOLUS_RENDER_FORMAT_SMALL ( default ) - Possible values are hidden , default (with leading zero and U), concise (with U, without leading zero), and minimal (without leading zero and U). Predefined values for your server settings (optional) \u2301 INSECURE_USE_HTTP ( false ) \u2301 Setting this variable to true will allow (unsafe) http traffic to your Nightscout instance and is not recommended . Redirect unsafe http traffic to https. Possible values false , or true . Your site redirects to https by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set INSECURE_USE_HTTP to true . SECURE_HSTS_HEADER ( true ) \u2301 Add HTTP Strict Transport Security (HSTS) header. Possible values false , or true . SECURE_HSTS_HEADER_INCLUDESUBDOMAINS ( false ) \u2301 Include subdomains options for HSTS. Possible values false , or true . SECURE_HSTS_HEADER_PRELOAD ( false ) \u2301 Ask for preload in browsers for HSTS. Possible values false , or true . SECURE_CSP ( false ) \u2301 Add Content Security Policy headers. Possible values false , or true . SECURE_CSP_REPORT_ONLY ( false ) \u2301 If set to true allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values false , or true . Split View \u2301 Some users will need easy access to multiple Nightscout views at the same time. We have a special view for this case, accessed on /split path on your Nightscout URL. The view supports any number of sites between 1 to 8 way split, where the content for the screen can be loaded from multiple Nightscout instances. Note you still need to host separate instances for each Nightscout being monitored including the one that hosts the split view page - these variables only add the ability to load multiple views into one browser page. To set the URLs from which the content is loaded, set: FRAME_URL_1 - URL where content is loaded, for the first view (increment the number up to 8 to get more views) FRAME_NAME_1 - Name for the first split view portion of the screen (increment the number to name more views) For example: FRAME_URL_1 https://janecgm.herokuapp.com FRAME_NAME_1 Jane FRAME_URL_2 https://joecgm.herokuapp.com FRAME_NAME_2 Joe To display the split view browse to: https://yourAppName.herokuapp.com/split 8 split view example: Plugins \u2301 Plugins are used to extend the way information is displayed, how notifications are sent, alarms are triggered, and more. If you want the ENABLE 'd plugins to show by default on any browser , you should put them in the SHOW_PLUGINS variable. If you want to specifically disable a plugin (mainly a default plugin) you should place it in the DISABLE variable. You also can decide to visualize them or not on your Nightscout view with the drawer menu. Authenticate and Save the settings on your browser. Heroku variables will not be modified and only default view will be seen on a new browser window. Default Plugins \u2301 Below some default plugins: timeago , upbat , direction and delta . Hovering the mouse on (computer) or touching (touch screen) some plugins will give you additional information. delta (BG Delta) \u2301 Calculates and displays the change between the last 2 BG values. Delta shows a * if time difference is more than 5 minutes. direction (BG Direction) \u2301 Displays the trend direction. upbat (Uploader Battery) \u2301 Displays the most recent battery status from the uploader phone. . Use these extended setting to adjust behavior: UPBAT_ENABLE_ALERTS ( false ) - Set to true to enable uploader battery alarms via Pushover and IFTTT. UPBAT_WARN ( 30 ) - Minimum battery percent to trigger warning. UPBAT_URGENT ( 20 ) - Minimum battery percent to trigger urgent alarm. timeago (Time Ago) \u2301 Displays the time since last CGM entry. Use these extended setting to adjust behavior: TIMEAGO_ENABLE_ALERTS ( false ) - Set to true to enable stale data alarms via Pushover and IFTTT. ALARM_TIMEAGO_WARN ( on ) - possible values on or off ALARM_TIMEAGO_WARN_MINS ( 15 ) - minutes since the last reading to trigger a warning ALARM_TIMEAGO_URGENT ( on ) - possible values on or off ALARM_TIMEAGO_URGENT_MINS ( 30 ) - minutes since the last reading to trigger a urgent alarm devicestatus (Device Status) \u2301 Used by upbat and other plugins to display device status info. Supports the DEVICESTATUS_ADVANCED=\"true\" extended setting to send all device statuses to the client for retrospective use and to support other plugins. Example: upbat information using devicestatus . errorcodes (CGM Error Codes) \u2301 Generates alarms for CGM codes 9 (hourglass) and 10 (???). Use extended settings to adjust what errorcodes trigger notifications and alarms: ERRORCODES_INFO ( 1 2 3 4 5 6 7 8 ) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or off to disable ERRORCODES_WARN ( off ) - By default there are no warning configured, set to a space separate list of numbers or off to disable ERRORCODES_URGENT ( 9 10 ) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or off to disable ar2 (AR2 Forecasting) \u2301 Generates alarms based on forecasted values. See Forecasting using AR2 algorithm Enabled by default if no thresholds are set OR ALARM_TYPES includes predict . AR2 forecasting display can be enabled/disabled from ... Use extended settings to adjust AR2 behavior: AR2_CONE_FACTOR ( 2 ) - to adjust size of cone, use 0 for a single line. simplealarms (Simple BG Alarms) \u2301 Uses BG_HIGH , BG_TARGET_TOP , BG_TARGET_BOTTOM , BG_LOW thresholds to generate alarms. Simple alarms are enabled by default if one of the BG_HIGH , BG_TARGET_TOP , BG_TARGET_BOTTOM , BG_LOW thresholds is set or ALARM_TYPES includes simple . You'll find the plugin in the drawer menu. You can change thresholds in Profile editor . You can click the loudspeaker icon to test the alarms volume or to snooze an active alarm. If you want to use sound alarms, you should click the icon to enable playback at least once after opening your Nightscout page in order to allow the browser to play it. profile (Treatment Profile) \u2301 Add a link in the drawer menu to Profile Editor and allows to enter treatment profile settings. Also uses the extended setting: PROFILE_HISTORY ( off ) - possible values on or off . Enable/disable NS ability to keep history of your profiles (still experimental) PROFILE_MULTIPLE ( off ) - possible values on or off . Enable/disable NS ability to handle and switch between multiple treatment profiles More variables of your profile will be used by Nightscout plugins like treatments, see below or here . dbsize (Database Size) \u2301 Show size of Nightscout Database, as a percentage of declared available space or in MiB. Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size to 512MiB. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit. IMPORTANT: This plugin can only check how much space database already takes, but cannot infer max size available on server for it. To have correct alarms and realistic percentage, DBSIZE_MAX need to be properly set - according to your mongoDB hosting configuration. NOTE: This plugin rely on db.stats() for reporting logical size of database, which may be different than physical size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size. NOTE: MongoDB Atlas quota is for all databases in cluster, while each instance will get only size of its own database only . It is ok when you only have one database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting DBSIZE_MAX to that fraction may help, but wont be precise. All sizes are expressed as integers, in Mebibytes 1 MiB == 1024 KiB == 1024*1024 B Extended settings available: DBSIZE_MAX ( 496 ) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier. DBSIZE_WARN_PERCENTAGE ( 60 ) - Threshold to show first warning about database size. When database reach this percentage of DBSIZE_MAX size - pill will show size in yellow. DBSIZE_URGENT_PERCENTAGE ( 75 ) - Threshold to show urgent warning about database size. When database reach this percentage of DBSIZE_MAX size, it is urgent to do backup and clean up old data. At this percentage info pill turns red. DBSIZE_ENABLE_ALERTS ( false ) - Set to true to enable notifications about database size. DBSIZE_IN_MIB ( false ) - Set to true to display size of database in MiB-s instead of default percentage. Advanced Plugins: \u2301 careportal (Careportal) \u2301 An optional form to enter treatments. Care Portal is an important plugin that gives access to the Log a treatment interface. Unlock it entering your API secret with the lock icon top right, then use the + icon to log a treatment. More information here . boluscalc (Bolus Wizard) \u2301 Bolus Wizard plugin gives access to the Bolus Wizard interface. You can access it with the calculator icon top right. food (Custom Foods) \u2301 Custom Foods enabled by the variable food allows to to customize your food database and adds a Food Editor entry in the menu. rawbg (Raw BG) \u2301 Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with extended setting. Raw BG will only display if your sensor provides this data, your bridge device transfers it and your uploader sends it to Nightscout. DISPLAY ( unsmoothed ) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record. \u200b unfiltered - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value. filtered - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high. unsmoothed - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the filtered setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the unfiltered setting) by the ratio. The effect is to exaggerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm. iob (Insulin-on-Board) - cob (Carbs-on-Board) \u2301 iob (Insulin-on-Board) \u2301 Adds the IOB pill visualization in the client and calculates values that used by other plugins. Uses treatments with insulin doses and the dia and sens fields from the treatment profile. cob (Carbs-on-Board) \u2301 Adds the COB pill visualization in the client and calculates values that used by other plugins. Uses treatments with carb doses and the carbs_hr , carbratio , and sens fields from the treatment profile. When you enter the information with the Care Portal or Nightscout receives if from the uploader, you can see remaining insulin on board and carbs. bwp (Bolus Wizard Preview) \u2301 This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation. The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the iob plugin and sens , target_high , and target_low fields from the treatment profile . Defaults that can be adjusted with extended settings BWP_WARN ( 0.50 ) - If BWP is > BWP_WARN a warning alarm will be triggered. BWP_URGENT ( 1.00 ) - If BWP is > BWP_URGENT an urgent alarm will be triggered. BWP_SNOOZE_MINS ( 10 ) - minutes to snooze when there is enough IOB to cover a high BG. BWP_SNOOZE - ( 0.10 ) If BG is higher then the target_high and BWP < BWP_SNOOZE alarms will be snoozed for BWP_SNOOZE_MINS . cage (Cannula Age) / sage (Sensor Age) / iage (Insulin Age) / bage (Battery Age) \u2301 cage (Cannula Age) \u2301 Calculates the number of hours since the last Site Change treatment that was recorded. CAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming cannula change. CAGE_INFO ( 44 ) - If time since last Site Change matches CAGE_INFO , user will be warned of upcoming cannula change CAGE_WARN ( 48 ) - If time since last Site Change matches CAGE_WARN , user will be alarmed to to change the cannula CAGE_URGENT ( 72 ) - If time since last Site Change matches CAGE_URGENT , user will be issued a persistent warning of overdue change. CAGE_DISPLAY ( hours ) - Possible values are hours or days . If days is selected and age of canula is greater than 24h number is displayed in days and hours sage (Sensor Age) \u2301 Calculates the number of days and hours since the last Sensor Start and Sensor Change treatment that was recorded. SAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming sensor change. SAGE_INFO ( 144 ) - If time since last sensor event matches SAGE_INFO , user will be warned of upcoming sensor change SAGE_WARN ( 164 ) - If time since last sensor event matches SAGE_WARN , user will be alarmed to to change/restart the sensor SAGE_URGENT ( 166 ) - If time since last sensor event matches SAGE_URGENT , user will be issued a persistent warning of overdue change. iage (Insulin Age) \u2301 Calculates the number of days and hours since the last Insulin Change treatment that was recorded. IAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming insulin reservoir change. IAGE_INFO ( 44 ) - If time since last Insulin Change matches IAGE_INFO , user will be warned of upcoming insulin reservoir change IAGE_WARN ( 48 ) - If time since last Insulin Change matches IAGE_WARN , user will be alarmed to to change the insulin reservoir IAGE_URGENT ( 72 ) - If time since last Insulin Change matches IAGE_URGENT , user will be issued a persistent warning of overdue change. bage (Battery Age) \u2301 Calculates the number of days and hours since the last Pump Battery Change treatment that was recorded. BAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming pump battery change. BAGE_DISPLAY ( days ) - Set to hours to display time since last Pump Battery Change in hours only. BAGE_INFO ( 312 ) - If time since last Pump Battery Change matches BAGE_INFO hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days). BAGE_WARN ( 336 ) - If time since last Pump Battery Change matches BAGE_WARN hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days). BAGE_URGENT ( 360 ) - If time since last Pump Battery Change matches BAGE_URGENT hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days). treatmentnotify (Treatment Notifications) \u2301 Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment. Default snooze is 10 minutes, and can be set using the TREATMENTNOTIFY_SNOOZE_MINS extended setting. basal (Basal Profile) \u2301 Adds the Basal pill visualization to display the basal rate for the current time. Also enables the bwp plugin to calculate correction temp basal suggestions. Uses the basal field from the treatment profile . Also uses the extended settings: BASAL_RENDER ( none ) Possible values are none , default , or icicle (inverted) bridge (Share2Nightscout bridge) \u2301 Glucose reading directly from the Dexcom Share service, uses these extended settings ( * mandatory): BRIDGE_USER_NAME - Your username for the Share service. * BRIDGE_PASSWORD - Your password for the Share service. * BRIDGE_INTERVAL ( 150000 2.5 minutes ) - The time (in milliseconds) to wait between each update. BRIDGE_MAX_COUNT ( 1 ) - The number of records to attempt to fetch per update. BRIDGE_FIRST_FETCH_COUNT ( 3 ) - Changes max count during the very first update only. BRIDGE_MAX_FAILURES ( 3 ) - How many failures before giving up. BRIDGE_MINUTES ( 1400 ) - The time window to search for new data per update (the default value is one day in minutes). BRIDGE_SERVER ( `) - The default blank value is used to fetch data from Dexcom servers in the US. Set to ( EU`) to fetch from European servers instead. * mmconnect (MiniMed Connect bridge) \u2301 This plugin is NOT functional with Heroku: do not enable it. Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ( read more ) ( * mandatory) with the following extended settings: MMCONNECT_USER_NAME - Your user name for CareLink Connect. * MMCONNECT_PASSWORD - Your password for CareLink Connect. * MMCONNECT_INTERVAL ( 60000 1 minute ) - Number of milliseconds to wait between requests to the CareLink server. MMCONNECT_MAX_RETRY_DURATION ( 32 ) - Maximum number of total seconds to spend retrying failed requests before giving up. MMCONNECT_SGV_LIMIT ( 24 ) - Maximum number of recent sensor glucose values to send to Nightscout on each request. MMCONNECT_VERBOSE - Set this to \"true\" to log CareLink request information to the console. MMCONNECT_STORE_RAW_DATA - Set this to \"true\" to store raw data returned from CareLink as type: \"carelink_raw\" database entries (useful for development). MMCONNECT_SERVER - Set this to EU if you're using the European Medtronic services * pump (Pump Monitoring) \u2301 Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, ... Requires DEVICESTATUS_ADVANCED=\"true\" to be set PUMP_ENABLE_ALERTS ( false ) - Set to true to enable notifications for Pump battery and reservoir. PUMP_WARN_ON_SUSPEND ( false ) - Set to true to get an alarm when the pump is suspended. PUMP_FIELDS ( reservoir battery ) - The fields to display by default. Any of the following fields: reservoir , battery , clock , status , and device PUMP_RETRO_FIELDS ( reservoir battery clock ) - The fields to display in retro mode. Any of the above fields. PUMP_WARN_CLOCK ( 30 ) - The number of minutes ago that needs to be exceed before an alert is triggered. PUMP_URGENT_CLOCK ( 60 ) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered. PUMP_WARN_RES ( 10 ) - The number of units remaining, a warning will be triggered when dropping below this threshold. PUMP_URGENT_RES ( 5 ) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold. PUMP_WARN_BATT_P ( 30 ) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold. PUMP_URGENT_BATT_P ( 20 ) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold. PUMP_WARN_BATT_V ( 1.35 ) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold. PUMP_URGENT_BATT_V ( 1.30 ) - The voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold. openaps (OpenAPS) \u2301 Integrated OpenAPS loop monitoring, uses these extended setting: Requires DEVICESTATUS_ADVANCED=\"true\" to be set OPENAPS_ENABLE_ALERTS ( false ) - Set to true to enable notifications when OpenAPS isn't looping. If OpenAPS is going to offline for a period of time, you can add an OpenAPS Offline event for the expected duration from Careportal to avoid getting alerts. OPENAPS_WARN ( 30 ) - The number of minutes since the last loop that needs to be exceed before an alert is triggered OPENAPS_URGENT ( 60 ) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered OPENAPS_FIELDS ( status-symbol status-label iob meal-assist rssi ) - The fields to display by default. Any of the following fields: status-symbol , status-label , iob , meal-assist , freq , and rssi OPENAPS_RETRO_FIELDS ( status-symbol status-label iob meal-assist rssi ) - The fields to display in retro mode. Any of the above fields. OPENAPS_PRED_IOB_COLOR ( #1e88e5 ) - The color to use for IOB prediction lines. Colors can be in #RRGGBB format, but other CSS color units may be used as well. OPENAPS_PRED_COB_COLOR ( #FB8C00 ) - The color to use for COB prediction lines. Same format as above. OPENAPS_PRED_ACOB_COLOR ( #FB8C00 ) - The color to use for ACOB prediction lines. Same format as above. OPENAPS_PRED_ZT_COLOR ( #00d2d2 ) - The color to use for ZT prediction lines. Same format as above. OPENAPS_PRED_UAM_COLOR ( #c9bd60 ) - The color to use for UAM prediction lines. Same format as above. OPENAPS_COLOR_PREDICTION_LINES ( true ) - Enables / disables the colored lines vs the classic purple color. Also see Pushover and IFTTT Maker . loop (Loop) \u2301 iOS Loop app monitoring, uses these extended settings: Requires DEVICESTATUS_ADVANCED=\"true\" to be set LOOP_ENABLE_ALERTS ( false ) - Set to true to enable notifications when Loop isn't looping. LOOP_WARN ( 30 ) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered LOOP_URGENT ( 60 ) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered Add loop to SHOW_FORECAST to show forecasted BG. For remote overrides, the following extended settings must be configured: LOOP_APNS_KEY - Apple Push Notifications service (APNs) Key, created in the Apple Developer website. LOOP_APNS_KEY_ID - The Key ID for the above key. LOOP_DEVELOPER_TEAM_ID - Your Apple developer team ID. LOOP_PUSH_SERVER_ENVIRONMENT - (optional) Set this to production if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight. override (Override Mode) \u2301 Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode: Requires DEVICESTATUS_ADVANCED=\"true\" to be set xdripjs (xDrip-js) \u2301 Integrated xDrip-js monitoring, uses these extended settings: Requires DEVICESTATUS_ADVANCED=\"true\" to be set XDRIPJS_ENABLE_ALERTS ( false ) - Set to true to enable notifications when CGM state is not OK or battery voltages fall below threshold. XDRIPJS_STATE_NOTIFY_INTRVL ( 0.5 ) - Set to number of hours between CGM state notifications XDRIPJS_WARN_BAT_V ( 300 ) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold. alexa (Amazon Alexa) \u2301 Integration with Amazon Alexa, detailed setup instructions googlehome (Google Home/DialogFlow) \u2301 Integration with Google Home (via DialogFlow), detailed setup instructions speech (Speech) \u2301 Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms. cors (CORS) \u2301 Enabled CORS so other websites can make request to your Nightscout site, uses these extended settings: CORS_ALLOW_ORIGIN ( * ) - The list of sites that are allow to make requests dbsize (Database Size) \u2301 Show size of Nightscout Database, as a percentage of declared available space or in MiB. Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size to 512MiB. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit. IMPORTANT: This plugin can only check how much space database already takes, but cannot infer max size available on server for it. To have correct alarms and realistic percentage, DBSIZE_MAX need to be properly set - according to your mongoDB hosting configuration. NOTE: This plugin rely on db.stats() for reporting logical size of database, which may be different than physical size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size. NOTE: MongoDB Atlas quota is for all databases in cluster, while each instance will get only size of its own database only . It is ok when you only have one database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting DBSIZE_MAX to that fraction may help, but wont be precise. All sizes are expressed as integers, in Mebibytes 1 MiB == 1024 KiB == 1024*1024 B Extended settings available: DBSIZE_MAX ( 496 ) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier. DBSIZE_WARN_PERCENTAGE ( 60 ) - Threshold to show first warning about database size. When database reach this percentage of DBSIZE_MAX size - pill will show size in yellow. DBSIZE_URGENT_PERCENTAGE ( 75 ) - Threshold to show urgent warning about database size. When database reach this percentage of DBSIZE_MAX size, it is urgent to do backup and clean up old data. At this percentage info pill turns red. DBSIZE_ENABLE_ALERTS ( false ) - Set to true to enable notifications about database size. DBSIZE_IN_MIB ( false ) - Set to true to display size of database in MiB-s instead of default percentage. Extended Settings \u2301 Some plugins support additional configuration using extra environment variables. These are prefixed with the name of the plugin and a _ . For example setting MYPLUGIN_EXAMPLE_VALUE=1234 would make extendedSettings.exampleValue available to the MYPLUGIN plugin. Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser. DEVICESTATUS_ADVANCED ( true ) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site. DEVICESTATUS_DAYS ( 1 ) - Defaults to 1, can optionally be set to 2. Users can use this to show 48 hours of device status data for in retro mode, rather than the default 24 hours. Setting this value to 2 will roughly double the bandwidth usage of nightscout, so users with a data cap may not want to update this setting. Pushover \u2301 In addition to the normal web based alarms, there is also support for Pushover based alarms and notifications. To get started install the Pushover application on your iOS or Android device and create an account. Using that account login to Pushover , in the top left you\u2019ll see your User Key, you\u2019ll need this plus an application API Token/Key to complete this setup. You\u2019ll need to Create a Pushover Application . You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch. Maybe you'd like to use this one ? Pushover is configured using the following Environment Variables: * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\"pushover\"`. * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below. * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user. This also supports a space delimited list of keys. To disable `INFO` level pushes set this to `off`. * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`). If not defined this will fallback to `PUSHOVER_USER_KEY`. A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too. This also support a space delimited list of keys. To disable Alarm pushes set this to `off`. * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements. If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`. This also support a space delimited list of keys. To disable Announcement pushes set this to `off`. * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible. * `API_SECRET` - Used for signing the pushover callback request for acknowledgments. If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\"off\"` If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\"off\"` If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\"off\"` If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements For testing/development try [localtunnel](http://localtunnel.me/). IFTTT Maker \u2301 In addition to the normal web based alarms, and pushover, there is also integration for IFTTT Webhooks . With Maker you are able to integrate with all the other IFTTT Services . For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more. Setup IFTTT account: login or create an account Follow the Detailed IFTTT setup Instructions Configure Nightscout by setting these webpage environment variables: ENABLE - maker should be added to the list of plugins, for example: ENABLE=\"maker\" . MAKER_KEY - Set this to your secret key (see [ Detailed Instructions ) MAKER_KEY=\"abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\" This also supports a space delimited list of keys. MAKER_ANNOUNCEMENT_KEY - An optional Maker key, will be used for system wide user generated announcements. If not defined this will fallback to MAKER_KEY . A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too. This also support a space delimited list of keys. Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with ns- . The core events are: ns-event - This event is sent to the maker service for all alarms and notifications. This is good catch all event for general logging. ns-allclear - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms. For example, you could use this event to turn a light to green. ns-info - Plugins that generate notifications at the info level will cause this event to also be triggered. It will be sent in addition to ns-event . ns-warning - Alarms at the warning level with cause this event to also be triggered. It will be sent in addition to ns-event . ns-urgent - Alarms at the urgent level with cause this event to also be triggered. It will be sent in addition to ns-event . see the full list of events Treatment Profile \u2301 Some of the plugins make use of a treatment profile that can be edited using the Profile Editor . Treatment Profile Fields: timezone (Time Zone) - time zone local to the patient. Should be set. units (Profile Units) - blood glucose units used in the profile, either \"mg/dl\" or \"mmol\" dia (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours. carbs_hr (Carbs per Hour) - The number of carbs that are processed per hour, for more information see #DIYPS . carbratio (Carb Ratio) - grams per unit of insulin. sens (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose. basal The basal rate set on the pump. target_high - Upper target for correction boluses. target_low - Lower target for correction boluses.","title":"Configure your Nightscout"},{"location":"nightscout/setup_variables/#nightscout-configuration","text":"Nightscout configuration is held in variables , their content can be modified to change and customize the behavior (data source, security, alarms, ...) and appearance (language, colors, visible items, ...). When deploying your Nightscout, most are left with default values and with time you might want to tune your site. APPLIES TO:","title":"Nightscout Configuration"},{"location":"nightscout/setup_variables/#editing-config-vars-in-heroku","text":"See here where and how to change your variables. APPLIES TO: You can change your settings in the Control Panel see here for available variables and plugins.","title":"Editing Config Vars in Heroku"},{"location":"nightscout/setup_variables/#nightscout-config-vars","text":"","title":"Nightscout Config Vars"},{"location":"nightscout/setup_variables/#required-variables","text":"","title":"Required variables"},{"location":"nightscout/setup_variables/#mongodb_uri","text":"The connection string required to access your database (where all your data is stored in the cloud). This string is vital to your Nightscout functioning. A wrong connection string will prevent your site to open and your data to upload in Nightscout An Atlas database string will look like this: mongodb+svr://sally:sallypass@cluster0.abcdef.mongodb.net/nightscout?retryWrites=true&w=majority Note If you migrated from mLab, this variable might be MONGO_CONNECTION . Only one of these two variables must be present: MONGODB_URI or MONGO_CONNECTION .","title":"MONGODB_URI"},{"location":"nightscout/setup_variables/#api_secret","text":"This is an important password Knowing your site's API Secret gives anybody full access to your Nightscout data, allows uploading to your site and uncontrolled access. Make sure you keep this password secret and avoid exposing it publicly. A passphrase that must be at least 12 characters long. MyV3ry53cr37 Note This is the passcode that will be required by the uploader app (if any) to send data to your site, and that will allow you to modify your site parameters from the web interface. Keep it secret, only share it with trusted people, change it if you believe it's been exposed publicly. Minimum length is 12 characters, don't make it too long and do not put special characters in it (better stick to letters and numbers). It is case-sensitive.","title":"API_SECRET"},{"location":"nightscout/setup_variables/#mongo_collection-entries","text":"Deprecated (set as system default) from 14.0.7 The Mongo collection where CGM entries are stored. Leave default entries .","title":"MONGO_COLLECTION ( entries)"},{"location":"nightscout/setup_variables/#display_units","text":"Preferred BG units for the site: mg/dl or mmol/L (or just mmol ). Setting to mmol/L puts the entire server into mmol/L mode by default, no further settings needed.","title":"DISPLAY_UNITS"},{"location":"nightscout/setup_variables/#features","text":"","title":"Features"},{"location":"nightscout/setup_variables/#enable","text":"Select the right plugins! Better too many than not enough. Plugins to enable for your site. Must be a space-delimited, lower-case list. careportal basal dbsize Include the word bridge here if you are receiving data from the Dexcom Share service. careportal basal dbsize bridge If you don't want to decide now, add all the followings, you can disable them if you don't need them: careportal basal dbsize rawbg iob maker bridge cob bwp cage iage sage boluscalc pushover treatmentnotify mmconnect loop pump profile food openaps bage alexa override cors Note: mmconnect is not functional with Heroku (if you wanted to bridge from the MiniMed CareLink service you will need another device to send data to Nightscout). If you are sending data to CareLink do NOT enable mmconnect .","title":"ENABLE"},{"location":"nightscout/setup_variables/#disable","text":"Used to disable default features, expects a space delimited list. For example this will disable the direction arrow and uploader battery information: direction upbat","title":"DISABLE"},{"location":"nightscout/setup_variables/#base_url","text":"Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.","title":"BASE_URL"},{"location":"nightscout/setup_variables/#auth_default_roles","text":"Possible values readable , denied , or any valid role name. When readable , anyone can view Nightscout without a token. Setting it to denied will require a token from every visit, using status-only will enable api-secret based login.","title":"AUTH_DEFAULT_ROLES"},{"location":"nightscout/setup_variables/#import_config","text":"Used to import settings and extended settings from a url such as a gist. Structure of file should be something like: {\"settings\": {\"theme\": \"colors\"}, \"extendedSettings\": {\"upbat\": {\"enableAlerts\": true}}}","title":"IMPORT_CONFIG"},{"location":"nightscout/setup_variables/#treatments_auth","text":"Possible values on or off . Deprecated, if set to off the careportal role will be added to AUTH_DEFAULT_ROLES","title":"TREATMENTS_AUTH"},{"location":"nightscout/setup_variables/#alarms","text":"These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.","title":"Alarms"},{"location":"nightscout/setup_variables/#alarm_types-simple","text":"TYPES Keep the simple type if you want BG_ parameters (setup below) to be used. simple and/or predict . Simple alarms trigger when BG crosses the various thresholds set below. Predict alarms uses highly tuned formula that forecasts where the BG is going based on its trend. You will not get warnings when crossing any of the BG_ thresholds set below when using only the predict type. simple BG Thresholds These values are the ones that will trigger simple alarms. They are expressed in the unit you selected with DISPLAY_UNITS .","title":"ALARM_TYPES  (simple)"},{"location":"nightscout/setup_variables/#bg_high-260","text":"Urgent High BG threshold, triggers the ALARM_URGENT_HIGH alarm.","title":"BG_HIGH (260)"},{"location":"nightscout/setup_variables/#bg_low-55","text":"Urgent Low BG threshold, triggers the ALARM_URGENT_LOW alarm.","title":"BG_LOW  (55)"},{"location":"nightscout/setup_variables/#bg_target_bottom-80","text":"Low BG threshold, triggers the ALARM_LOW alarm.","title":"BG_TARGET_BOTTOM  (80)"},{"location":"nightscout/setup_variables/#bg_target_top-180","text":"High BG threshold, triggers the ALARM_HIGH alarm. ALARM_* ALARM_URGENT_* You can setup alarms, so that when your Nightscout page is open and the alarm enabled, above ( HIGH ) or below ( LOW ) a certain threshold, a sound might play.","title":"BG_TARGET_TOP  (180)"},{"location":"nightscout/setup_variables/#alarm_urgent_high-on","text":"Default setting for new browser views, for the Urgent High alarm (triggered when BG crosses BG_HIGH ). ( on or off )","title":"ALARM_URGENT_HIGH  (on)"},{"location":"nightscout/setup_variables/#alarm_high-on","text":"Default setting for new browser views, for the High alarm (triggered when BG crosses BG_TARGET_TOP ). ( on or off )","title":"ALARM_HIGH (on)"},{"location":"nightscout/setup_variables/#alarm_low-on","text":"Default setting for new browser views, for the Low alarm (triggered when BG crosses BG_TARGET_BOTTOM ). ( on or off )","title":"ALARM_LOW  (on)"},{"location":"nightscout/setup_variables/#alarm_urgent_low-on","text":"Default setting for new browser views, for the Urgent Low alarm (triggered when BG crosses BG_LOW ). ( on or off ) Pushover ALARM_*_MINS : Only the first value of the space separated list, for options in browser, will be used for pushover.","title":"ALARM_URGENT_LOW  (on)"},{"location":"nightscout/setup_variables/#alarm_urgent_high_mins-30-60-90-120","text":"Number of minutes to snooze urgent high alarms.","title":"ALARM_URGENT_HIGH_MINS  (30 60 90 120)"},{"location":"nightscout/setup_variables/#alarm_high_mins-30-60-90-120","text":"Number of minutes to snooze high alarms.","title":"ALARM_HIGH_MINS  (30 60 90 120)"},{"location":"nightscout/setup_variables/#alarm_low_mins-15-30-45-60","text":"Number of minutes to snooze low alarms.","title":"ALARM_LOW_MINS (15 30 45 60)"},{"location":"nightscout/setup_variables/#alarm_urgent_low_mins-15-30-45","text":"Number of minutes to snooze urgent low alarms.","title":"ALARM_URGENT_LOW_MINS (15 30 45)"},{"location":"nightscout/setup_variables/#alarm_urgent_mins-30-60-90-120","text":"Number of minutes to snooze urgent alarms (that aren't tagged as high or low).","title":"ALARM_URGENT_MINS (30 60 90 120)"},{"location":"nightscout/setup_variables/#alarm_warn_mins-30-60-90-120","text":"Number of minutes to snooze warning alarms (that aren't tagged as high or low). TIMEAGO Missing data alarms can also be setup, so that when your Nightscout page is open and the alarm enabled, after a certain time without receiving BG, a sound might play.","title":"ALARM_WARN_MINS (30 60 90 120)"},{"location":"nightscout/setup_variables/#alarm_timeago_urgent-on","text":"Default setting for new browser views, for an urgent alarm when CGM data hasn't been received in the number of minutes set in ALARM_TIMEAGO_URGENT_MINS . on or off )","title":"ALARM_TIMEAGO_URGENT  (on)"},{"location":"nightscout/setup_variables/#alarm_timeago_urgent_mins-30","text":"Default setting for new browser views, for the number of minutes since the last CGM reading to trigger an ALARM_TIMEAGO_URGENT alarm.","title":"ALARM_TIMEAGO_URGENT_MINS  (30)"},{"location":"nightscout/setup_variables/#alarm_timeago_warn-180","text":"Default setting for new browser views, for a warning alarm when CGM data hasn't been received in the number of minutes set in ALARM_TIMEAGO_WARN_MINS . ( on or off )","title":"ALARM_TIMEAGO_WARN  (180)"},{"location":"nightscout/setup_variables/#alarm_timeago_warn_mins-15","text":"Default setting for new browser views, for the number of minutes since the last CGM reading to trigger an ALARM_TIMEAGO_WARN alarm.","title":"ALARM_TIMEAGO_WARN_MINS  (15)"},{"location":"nightscout/setup_variables/#core","text":"","title":"Core"},{"location":"nightscout/setup_variables/#mongo_treatments_collection-treatments","text":"The collection used to store treatments entered in the Care Portal, see the ENABLE env var above","title":"MONGO_TREATMENTS_COLLECTION (treatments)"},{"location":"nightscout/setup_variables/#mongo_devicestatus_collection-devicestatus","text":"The collection used to store device status information such as uploader battery","title":"MONGO_DEVICESTATUS_COLLECTION (devicestatus)"},{"location":"nightscout/setup_variables/#mongo_profile_collection-profile","text":"The collection used to store your profiles","title":"MONGO_PROFILE_COLLECTION (profile)"},{"location":"nightscout/setup_variables/#mongo_food_collection-food","text":"The collection used to store your food database","title":"MONGO_FOOD_COLLECTION (food)"},{"location":"nightscout/setup_variables/#mongo_activity_collection-activity","text":"The collection used to store activity data","title":"MONGO_ACTIVITY_COLLECTION (activity)"},{"location":"nightscout/setup_variables/#port-1337","text":"The port that the node.js application will listen on.","title":"PORT (1337)"},{"location":"nightscout/setup_variables/#hostname","text":"The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use :: .","title":"HOSTNAME"},{"location":"nightscout/setup_variables/#ssl_key","text":"Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).","title":"SSL_KEY"},{"location":"nightscout/setup_variables/#ssl_cert","text":"Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).","title":"SSL_CERT"},{"location":"nightscout/setup_variables/#ssl_ca","text":"Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).","title":"SSL_CA"},{"location":"nightscout/setup_variables/#heartbeat-60","text":"Number of seconds to wait in between database checks","title":"HEARTBEAT (60)"},{"location":"nightscout/setup_variables/#debug_minify-true","text":"Debug option, setting to false will disable bundle minification to help tracking down error and speed up development","title":"DEBUG_MINIFY (true)"},{"location":"nightscout/setup_variables/#de_normalize_datestrue","text":"The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to true causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.","title":"DE_NORMALIZE_DATES(true)"},{"location":"nightscout/setup_variables/#predefined-values-for-your-browser-settings-optional","text":"","title":"Predefined values for your browser settings (optional)"},{"location":"nightscout/setup_variables/#time_format-12","text":"Possible values 12 or 24","title":"TIME_FORMAT (12)"},{"location":"nightscout/setup_variables/#night_mode-off","text":"Possible values on or off","title":"NIGHT_MODE (off)"},{"location":"nightscout/setup_variables/#show_rawbg-never","text":"Default setting for new browser views, for the display of raw CGM data (if available). ( always , never , or noise )","title":"SHOW_RAWBG (never)"},{"location":"nightscout/setup_variables/#custom_title-nightscout","text":"This will change your Nightscout displayed name (top left) from default. The display name for the Nightscout site. Appears in the upper left of the main view. Often set to the name of the CGM wearer.","title":"CUSTOM_TITLE (Nightscout)"},{"location":"nightscout/setup_variables/#theme-colors","text":"Default setting for new browser views, for the color theme of the CGM graph. default colors colorblindfriendly","title":"THEME (colors)"},{"location":"nightscout/setup_variables/#show_plugins","text":"Default setting for whether or not these plugins are checked (active) by default, not merely enabled. Include plugins here as in the ENABLE line; space-separated and lower-case. More details below .","title":"SHOW_PLUGINS"},{"location":"nightscout/setup_variables/#show_forecast-ar2","text":"Plugin forecasts that should be shown by default, supports space delimited values such as \"ar2 openaps\"","title":"SHOW_FORECAST (ar2)"},{"location":"nightscout/setup_variables/#language-en","text":"Language of Nightscout. If not available English is used. Currently supported language codes are: bg (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438), cs (\u010ce\u0161tina), de (Deutsch), dk (Dansk), el (\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac), en (English), es (Espa\u00f1ol), fi (Suomi), fr (Fran\u00e7ais), he (\u05e2\u05d1\u05e8\u05d9\u05ea), hr (Hrvatski), it (Italiano), ko (\ud55c\uad6d\uc5b4), nb (Norsk (Bokm\u00e5l)), nl (Nederlands), pl (Polski), pt (Portugu\u00eas (Brasil)), ro (Rom\u00e2n\u0103), ru (\u0420\u0443\u0441\u0441\u043a\u0438\u0439), sk (Sloven\u010dina), sv (Svenska), tr (Turkish), zh_cn (\u4e2d\u6587\uff08\u7b80\u4f53)), zh_tw (\u4e2d\u6587\uff08\u7e41\u9ad4))","title":"LANGUAGE (en)"},{"location":"nightscout/setup_variables/#scale_y-log","text":"The type of scaling used for the Y axis of the charts system wide. The default log (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range. The linear option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted. The log-dynamic is similar to the default log options, but uses the same dynamic range and the linear scale.","title":"SCALE_Y (log)"},{"location":"nightscout/setup_variables/#edit_mode-on","text":"Possible values on or off . Enables the icon allowing for editing of treatments in the main view. More about edit here .","title":"EDIT_MODE (on)"},{"location":"nightscout/setup_variables/#bolus_render","text":"Settings to configure Bolus rendering BOLUS_RENDER_OVER ( 0 ) - U value over which the bolus labels use the format defined in BOLUS_RENDER_FORMAT . This value can be an integer or a float, e.g. 0.3 , 1.5 , 2 , etc. BOLUS_RENDER_FORMAT ( default ) - Possible values are hidden , default (with leading zero and U), concise (with U, without leading zero), and minimal (without leading zero and U). BOLUS_RENDER_FORMAT_SMALL ( default ) - Possible values are hidden , default (with leading zero and U), concise (with U, without leading zero), and minimal (without leading zero and U).","title":"BOLUS_RENDER"},{"location":"nightscout/setup_variables/#predefined-values-for-your-server-settings-optional","text":"","title":"Predefined values for your server settings (optional)"},{"location":"nightscout/setup_variables/#insecure_use_http-false","text":"Setting this variable to true will allow (unsafe) http traffic to your Nightscout instance and is not recommended . Redirect unsafe http traffic to https. Possible values false , or true . Your site redirects to https by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set INSECURE_USE_HTTP to true .","title":"INSECURE_USE_HTTP (false)"},{"location":"nightscout/setup_variables/#secure_hsts_header-true","text":"Add HTTP Strict Transport Security (HSTS) header. Possible values false , or true .","title":"SECURE_HSTS_HEADER (true)"},{"location":"nightscout/setup_variables/#secure_hsts_header_includesubdomains-false","text":"Include subdomains options for HSTS. Possible values false , or true .","title":"SECURE_HSTS_HEADER_INCLUDESUBDOMAINS (false)"},{"location":"nightscout/setup_variables/#secure_hsts_header_preload-false","text":"Ask for preload in browsers for HSTS. Possible values false , or true .","title":"SECURE_HSTS_HEADER_PRELOAD (false)"},{"location":"nightscout/setup_variables/#secure_csp-false","text":"Add Content Security Policy headers. Possible values false , or true .","title":"SECURE_CSP (false)"},{"location":"nightscout/setup_variables/#secure_csp_report_only-false","text":"If set to true allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values false , or true .","title":"SECURE_CSP_REPORT_ONLY (false)"},{"location":"nightscout/setup_variables/#split-view","text":"Some users will need easy access to multiple Nightscout views at the same time. We have a special view for this case, accessed on /split path on your Nightscout URL. The view supports any number of sites between 1 to 8 way split, where the content for the screen can be loaded from multiple Nightscout instances. Note you still need to host separate instances for each Nightscout being monitored including the one that hosts the split view page - these variables only add the ability to load multiple views into one browser page. To set the URLs from which the content is loaded, set: FRAME_URL_1 - URL where content is loaded, for the first view (increment the number up to 8 to get more views) FRAME_NAME_1 - Name for the first split view portion of the screen (increment the number to name more views) For example: FRAME_URL_1 https://janecgm.herokuapp.com FRAME_NAME_1 Jane FRAME_URL_2 https://joecgm.herokuapp.com FRAME_NAME_2 Joe To display the split view browse to: https://yourAppName.herokuapp.com/split 8 split view example:","title":"Split View"},{"location":"nightscout/setup_variables/#plugins","text":"Plugins are used to extend the way information is displayed, how notifications are sent, alarms are triggered, and more. If you want the ENABLE 'd plugins to show by default on any browser , you should put them in the SHOW_PLUGINS variable. If you want to specifically disable a plugin (mainly a default plugin) you should place it in the DISABLE variable. You also can decide to visualize them or not on your Nightscout view with the drawer menu. Authenticate and Save the settings on your browser. Heroku variables will not be modified and only default view will be seen on a new browser window.","title":"Plugins"},{"location":"nightscout/setup_variables/#default-plugins","text":"Below some default plugins: timeago , upbat , direction and delta . Hovering the mouse on (computer) or touching (touch screen) some plugins will give you additional information.","title":"Default Plugins"},{"location":"nightscout/setup_variables/#delta-bg-delta","text":"Calculates and displays the change between the last 2 BG values. Delta shows a * if time difference is more than 5 minutes.","title":"delta (BG Delta)"},{"location":"nightscout/setup_variables/#direction-bg-direction","text":"Displays the trend direction.","title":"direction (BG Direction)"},{"location":"nightscout/setup_variables/#upbat-uploader-battery","text":"Displays the most recent battery status from the uploader phone. . Use these extended setting to adjust behavior: UPBAT_ENABLE_ALERTS ( false ) - Set to true to enable uploader battery alarms via Pushover and IFTTT. UPBAT_WARN ( 30 ) - Minimum battery percent to trigger warning. UPBAT_URGENT ( 20 ) - Minimum battery percent to trigger urgent alarm.","title":"upbat (Uploader Battery)"},{"location":"nightscout/setup_variables/#timeago-time-ago","text":"Displays the time since last CGM entry. Use these extended setting to adjust behavior: TIMEAGO_ENABLE_ALERTS ( false ) - Set to true to enable stale data alarms via Pushover and IFTTT. ALARM_TIMEAGO_WARN ( on ) - possible values on or off ALARM_TIMEAGO_WARN_MINS ( 15 ) - minutes since the last reading to trigger a warning ALARM_TIMEAGO_URGENT ( on ) - possible values on or off ALARM_TIMEAGO_URGENT_MINS ( 30 ) - minutes since the last reading to trigger a urgent alarm","title":"timeago (Time Ago)"},{"location":"nightscout/setup_variables/#devicestatus-device-status","text":"Used by upbat and other plugins to display device status info. Supports the DEVICESTATUS_ADVANCED=\"true\" extended setting to send all device statuses to the client for retrospective use and to support other plugins. Example: upbat information using devicestatus .","title":"devicestatus (Device Status)"},{"location":"nightscout/setup_variables/#errorcodes-cgm-error-codes","text":"Generates alarms for CGM codes 9 (hourglass) and 10 (???). Use extended settings to adjust what errorcodes trigger notifications and alarms: ERRORCODES_INFO ( 1 2 3 4 5 6 7 8 ) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or off to disable ERRORCODES_WARN ( off ) - By default there are no warning configured, set to a space separate list of numbers or off to disable ERRORCODES_URGENT ( 9 10 ) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or off to disable","title":"errorcodes (CGM Error Codes)"},{"location":"nightscout/setup_variables/#ar2-ar2-forecasting","text":"Generates alarms based on forecasted values. See Forecasting using AR2 algorithm Enabled by default if no thresholds are set OR ALARM_TYPES includes predict . AR2 forecasting display can be enabled/disabled from ... Use extended settings to adjust AR2 behavior: AR2_CONE_FACTOR ( 2 ) - to adjust size of cone, use 0 for a single line.","title":"ar2 (AR2 Forecasting)"},{"location":"nightscout/setup_variables/#simplealarms-simple-bg-alarms","text":"Uses BG_HIGH , BG_TARGET_TOP , BG_TARGET_BOTTOM , BG_LOW thresholds to generate alarms. Simple alarms are enabled by default if one of the BG_HIGH , BG_TARGET_TOP , BG_TARGET_BOTTOM , BG_LOW thresholds is set or ALARM_TYPES includes simple . You'll find the plugin in the drawer menu. You can change thresholds in Profile editor . You can click the loudspeaker icon to test the alarms volume or to snooze an active alarm. If you want to use sound alarms, you should click the icon to enable playback at least once after opening your Nightscout page in order to allow the browser to play it.","title":"simplealarms (Simple BG Alarms)"},{"location":"nightscout/setup_variables/#profile-treatment-profile","text":"Add a link in the drawer menu to Profile Editor and allows to enter treatment profile settings. Also uses the extended setting: PROFILE_HISTORY ( off ) - possible values on or off . Enable/disable NS ability to keep history of your profiles (still experimental) PROFILE_MULTIPLE ( off ) - possible values on or off . Enable/disable NS ability to handle and switch between multiple treatment profiles More variables of your profile will be used by Nightscout plugins like treatments, see below or here .","title":"profile (Treatment Profile)"},{"location":"nightscout/setup_variables/#dbsize-database-size","text":"Show size of Nightscout Database, as a percentage of declared available space or in MiB. Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size to 512MiB. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit. IMPORTANT: This plugin can only check how much space database already takes, but cannot infer max size available on server for it. To have correct alarms and realistic percentage, DBSIZE_MAX need to be properly set - according to your mongoDB hosting configuration. NOTE: This plugin rely on db.stats() for reporting logical size of database, which may be different than physical size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size. NOTE: MongoDB Atlas quota is for all databases in cluster, while each instance will get only size of its own database only . It is ok when you only have one database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting DBSIZE_MAX to that fraction may help, but wont be precise. All sizes are expressed as integers, in Mebibytes 1 MiB == 1024 KiB == 1024*1024 B Extended settings available: DBSIZE_MAX ( 496 ) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier. DBSIZE_WARN_PERCENTAGE ( 60 ) - Threshold to show first warning about database size. When database reach this percentage of DBSIZE_MAX size - pill will show size in yellow. DBSIZE_URGENT_PERCENTAGE ( 75 ) - Threshold to show urgent warning about database size. When database reach this percentage of DBSIZE_MAX size, it is urgent to do backup and clean up old data. At this percentage info pill turns red. DBSIZE_ENABLE_ALERTS ( false ) - Set to true to enable notifications about database size. DBSIZE_IN_MIB ( false ) - Set to true to display size of database in MiB-s instead of default percentage.","title":"dbsize (Database Size)"},{"location":"nightscout/setup_variables/#advanced-plugins","text":"","title":"Advanced Plugins:"},{"location":"nightscout/setup_variables/#careportal-careportal","text":"An optional form to enter treatments. Care Portal is an important plugin that gives access to the Log a treatment interface. Unlock it entering your API secret with the lock icon top right, then use the + icon to log a treatment. More information here .","title":"careportal (Careportal)"},{"location":"nightscout/setup_variables/#boluscalc-bolus-wizard","text":"Bolus Wizard plugin gives access to the Bolus Wizard interface. You can access it with the calculator icon top right.","title":"boluscalc (Bolus Wizard)"},{"location":"nightscout/setup_variables/#food-custom-foods","text":"Custom Foods enabled by the variable food allows to to customize your food database and adds a Food Editor entry in the menu.","title":"food (Custom Foods)"},{"location":"nightscout/setup_variables/#rawbg-raw-bg","text":"Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with extended setting. Raw BG will only display if your sensor provides this data, your bridge device transfers it and your uploader sends it to Nightscout. DISPLAY ( unsmoothed ) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record. \u200b unfiltered - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value. filtered - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high. unsmoothed - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the filtered setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the unfiltered setting) by the ratio. The effect is to exaggerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.","title":"rawbg (Raw BG)"},{"location":"nightscout/setup_variables/#iob-insulin-on-board-cob-carbs-on-board","text":"","title":"iob (Insulin-on-Board) - cob (Carbs-on-Board)"},{"location":"nightscout/setup_variables/#iob-insulin-on-board","text":"Adds the IOB pill visualization in the client and calculates values that used by other plugins. Uses treatments with insulin doses and the dia and sens fields from the treatment profile.","title":"iob (Insulin-on-Board)"},{"location":"nightscout/setup_variables/#cob-carbs-on-board","text":"Adds the COB pill visualization in the client and calculates values that used by other plugins. Uses treatments with carb doses and the carbs_hr , carbratio , and sens fields from the treatment profile. When you enter the information with the Care Portal or Nightscout receives if from the uploader, you can see remaining insulin on board and carbs.","title":"cob (Carbs-on-Board)"},{"location":"nightscout/setup_variables/#bwp-bolus-wizard-preview","text":"This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation. The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the iob plugin and sens , target_high , and target_low fields from the treatment profile . Defaults that can be adjusted with extended settings BWP_WARN ( 0.50 ) - If BWP is > BWP_WARN a warning alarm will be triggered. BWP_URGENT ( 1.00 ) - If BWP is > BWP_URGENT an urgent alarm will be triggered. BWP_SNOOZE_MINS ( 10 ) - minutes to snooze when there is enough IOB to cover a high BG. BWP_SNOOZE - ( 0.10 ) If BG is higher then the target_high and BWP < BWP_SNOOZE alarms will be snoozed for BWP_SNOOZE_MINS .","title":"bwp (Bolus Wizard Preview)"},{"location":"nightscout/setup_variables/#cage-cannula-age-sage-sensor-age-iage-insulin-age-bage-battery-age","text":"","title":"cage (Cannula Age) / sage (Sensor Age) / iage (Insulin Age) / bage (Battery Age)"},{"location":"nightscout/setup_variables/#cage-cannula-age","text":"Calculates the number of hours since the last Site Change treatment that was recorded. CAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming cannula change. CAGE_INFO ( 44 ) - If time since last Site Change matches CAGE_INFO , user will be warned of upcoming cannula change CAGE_WARN ( 48 ) - If time since last Site Change matches CAGE_WARN , user will be alarmed to to change the cannula CAGE_URGENT ( 72 ) - If time since last Site Change matches CAGE_URGENT , user will be issued a persistent warning of overdue change. CAGE_DISPLAY ( hours ) - Possible values are hours or days . If days is selected and age of canula is greater than 24h number is displayed in days and hours","title":"cage (Cannula Age)"},{"location":"nightscout/setup_variables/#sage-sensor-age","text":"Calculates the number of days and hours since the last Sensor Start and Sensor Change treatment that was recorded. SAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming sensor change. SAGE_INFO ( 144 ) - If time since last sensor event matches SAGE_INFO , user will be warned of upcoming sensor change SAGE_WARN ( 164 ) - If time since last sensor event matches SAGE_WARN , user will be alarmed to to change/restart the sensor SAGE_URGENT ( 166 ) - If time since last sensor event matches SAGE_URGENT , user will be issued a persistent warning of overdue change.","title":"sage (Sensor Age)"},{"location":"nightscout/setup_variables/#iage-insulin-age","text":"Calculates the number of days and hours since the last Insulin Change treatment that was recorded. IAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming insulin reservoir change. IAGE_INFO ( 44 ) - If time since last Insulin Change matches IAGE_INFO , user will be warned of upcoming insulin reservoir change IAGE_WARN ( 48 ) - If time since last Insulin Change matches IAGE_WARN , user will be alarmed to to change the insulin reservoir IAGE_URGENT ( 72 ) - If time since last Insulin Change matches IAGE_URGENT , user will be issued a persistent warning of overdue change.","title":"iage (Insulin Age)"},{"location":"nightscout/setup_variables/#bage-battery-age","text":"Calculates the number of days and hours since the last Pump Battery Change treatment that was recorded. BAGE_ENABLE_ALERTS ( false ) - Set to true to enable notifications to remind you of upcoming pump battery change. BAGE_DISPLAY ( days ) - Set to hours to display time since last Pump Battery Change in hours only. BAGE_INFO ( 312 ) - If time since last Pump Battery Change matches BAGE_INFO hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days). BAGE_WARN ( 336 ) - If time since last Pump Battery Change matches BAGE_WARN hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days). BAGE_URGENT ( 360 ) - If time since last Pump Battery Change matches BAGE_URGENT hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).","title":"bage (Battery Age)"},{"location":"nightscout/setup_variables/#treatmentnotify-treatment-notifications","text":"Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment. Default snooze is 10 minutes, and can be set using the TREATMENTNOTIFY_SNOOZE_MINS extended setting.","title":"treatmentnotify (Treatment Notifications)"},{"location":"nightscout/setup_variables/#basal-basal-profile","text":"Adds the Basal pill visualization to display the basal rate for the current time. Also enables the bwp plugin to calculate correction temp basal suggestions. Uses the basal field from the treatment profile . Also uses the extended settings: BASAL_RENDER ( none ) Possible values are none , default , or icicle (inverted)","title":"basal (Basal Profile)"},{"location":"nightscout/setup_variables/#bridge-share2nightscout-bridge","text":"Glucose reading directly from the Dexcom Share service, uses these extended settings ( * mandatory): BRIDGE_USER_NAME - Your username for the Share service. * BRIDGE_PASSWORD - Your password for the Share service. * BRIDGE_INTERVAL ( 150000 2.5 minutes ) - The time (in milliseconds) to wait between each update. BRIDGE_MAX_COUNT ( 1 ) - The number of records to attempt to fetch per update. BRIDGE_FIRST_FETCH_COUNT ( 3 ) - Changes max count during the very first update only. BRIDGE_MAX_FAILURES ( 3 ) - How many failures before giving up. BRIDGE_MINUTES ( 1400 ) - The time window to search for new data per update (the default value is one day in minutes). BRIDGE_SERVER ( `) - The default blank value is used to fetch data from Dexcom servers in the US. Set to ( EU`) to fetch from European servers instead. *","title":"bridge (Share2Nightscout bridge)"},{"location":"nightscout/setup_variables/#mmconnect-minimed-connect-bridge","text":"This plugin is NOT functional with Heroku: do not enable it. Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ( read more ) ( * mandatory) with the following extended settings: MMCONNECT_USER_NAME - Your user name for CareLink Connect. * MMCONNECT_PASSWORD - Your password for CareLink Connect. * MMCONNECT_INTERVAL ( 60000 1 minute ) - Number of milliseconds to wait between requests to the CareLink server. MMCONNECT_MAX_RETRY_DURATION ( 32 ) - Maximum number of total seconds to spend retrying failed requests before giving up. MMCONNECT_SGV_LIMIT ( 24 ) - Maximum number of recent sensor glucose values to send to Nightscout on each request. MMCONNECT_VERBOSE - Set this to \"true\" to log CareLink request information to the console. MMCONNECT_STORE_RAW_DATA - Set this to \"true\" to store raw data returned from CareLink as type: \"carelink_raw\" database entries (useful for development). MMCONNECT_SERVER - Set this to EU if you're using the European Medtronic services *","title":"mmconnect (MiniMed Connect bridge)"},{"location":"nightscout/setup_variables/#pump-pump-monitoring","text":"Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, ... Requires DEVICESTATUS_ADVANCED=\"true\" to be set PUMP_ENABLE_ALERTS ( false ) - Set to true to enable notifications for Pump battery and reservoir. PUMP_WARN_ON_SUSPEND ( false ) - Set to true to get an alarm when the pump is suspended. PUMP_FIELDS ( reservoir battery ) - The fields to display by default. Any of the following fields: reservoir , battery , clock , status , and device PUMP_RETRO_FIELDS ( reservoir battery clock ) - The fields to display in retro mode. Any of the above fields. PUMP_WARN_CLOCK ( 30 ) - The number of minutes ago that needs to be exceed before an alert is triggered. PUMP_URGENT_CLOCK ( 60 ) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered. PUMP_WARN_RES ( 10 ) - The number of units remaining, a warning will be triggered when dropping below this threshold. PUMP_URGENT_RES ( 5 ) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold. PUMP_WARN_BATT_P ( 30 ) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold. PUMP_URGENT_BATT_P ( 20 ) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold. PUMP_WARN_BATT_V ( 1.35 ) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold. PUMP_URGENT_BATT_V ( 1.30 ) - The voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.","title":"pump (Pump Monitoring)"},{"location":"nightscout/setup_variables/#openaps-openaps","text":"Integrated OpenAPS loop monitoring, uses these extended setting: Requires DEVICESTATUS_ADVANCED=\"true\" to be set OPENAPS_ENABLE_ALERTS ( false ) - Set to true to enable notifications when OpenAPS isn't looping. If OpenAPS is going to offline for a period of time, you can add an OpenAPS Offline event for the expected duration from Careportal to avoid getting alerts. OPENAPS_WARN ( 30 ) - The number of minutes since the last loop that needs to be exceed before an alert is triggered OPENAPS_URGENT ( 60 ) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered OPENAPS_FIELDS ( status-symbol status-label iob meal-assist rssi ) - The fields to display by default. Any of the following fields: status-symbol , status-label , iob , meal-assist , freq , and rssi OPENAPS_RETRO_FIELDS ( status-symbol status-label iob meal-assist rssi ) - The fields to display in retro mode. Any of the above fields. OPENAPS_PRED_IOB_COLOR ( #1e88e5 ) - The color to use for IOB prediction lines. Colors can be in #RRGGBB format, but other CSS color units may be used as well. OPENAPS_PRED_COB_COLOR ( #FB8C00 ) - The color to use for COB prediction lines. Same format as above. OPENAPS_PRED_ACOB_COLOR ( #FB8C00 ) - The color to use for ACOB prediction lines. Same format as above. OPENAPS_PRED_ZT_COLOR ( #00d2d2 ) - The color to use for ZT prediction lines. Same format as above. OPENAPS_PRED_UAM_COLOR ( #c9bd60 ) - The color to use for UAM prediction lines. Same format as above. OPENAPS_COLOR_PREDICTION_LINES ( true ) - Enables / disables the colored lines vs the classic purple color. Also see Pushover and IFTTT Maker .","title":"openaps (OpenAPS)"},{"location":"nightscout/setup_variables/#loop-loop","text":"iOS Loop app monitoring, uses these extended settings: Requires DEVICESTATUS_ADVANCED=\"true\" to be set LOOP_ENABLE_ALERTS ( false ) - Set to true to enable notifications when Loop isn't looping. LOOP_WARN ( 30 ) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered LOOP_URGENT ( 60 ) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered Add loop to SHOW_FORECAST to show forecasted BG. For remote overrides, the following extended settings must be configured: LOOP_APNS_KEY - Apple Push Notifications service (APNs) Key, created in the Apple Developer website. LOOP_APNS_KEY_ID - The Key ID for the above key. LOOP_DEVELOPER_TEAM_ID - Your Apple developer team ID. LOOP_PUSH_SERVER_ENVIRONMENT - (optional) Set this to production if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.","title":"loop (Loop)"},{"location":"nightscout/setup_variables/#override-override-mode","text":"Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode: Requires DEVICESTATUS_ADVANCED=\"true\" to be set","title":"override (Override Mode)"},{"location":"nightscout/setup_variables/#xdripjs-xdrip-js","text":"Integrated xDrip-js monitoring, uses these extended settings: Requires DEVICESTATUS_ADVANCED=\"true\" to be set XDRIPJS_ENABLE_ALERTS ( false ) - Set to true to enable notifications when CGM state is not OK or battery voltages fall below threshold. XDRIPJS_STATE_NOTIFY_INTRVL ( 0.5 ) - Set to number of hours between CGM state notifications XDRIPJS_WARN_BAT_V ( 300 ) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.","title":"xdripjs (xDrip-js)"},{"location":"nightscout/setup_variables/#alexa-amazon-alexa","text":"Integration with Amazon Alexa, detailed setup instructions","title":"alexa (Amazon Alexa)"},{"location":"nightscout/setup_variables/#googlehome-google-homedialogflow","text":"Integration with Google Home (via DialogFlow), detailed setup instructions","title":"googlehome (Google Home/DialogFlow)"},{"location":"nightscout/setup_variables/#speech-speech","text":"Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.","title":"speech (Speech)"},{"location":"nightscout/setup_variables/#cors-cors","text":"Enabled CORS so other websites can make request to your Nightscout site, uses these extended settings: CORS_ALLOW_ORIGIN ( * ) - The list of sites that are allow to make requests","title":"cors (CORS)"},{"location":"nightscout/setup_variables/#dbsize-database-size_1","text":"Show size of Nightscout Database, as a percentage of declared available space or in MiB. Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size to 512MiB. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit. IMPORTANT: This plugin can only check how much space database already takes, but cannot infer max size available on server for it. To have correct alarms and realistic percentage, DBSIZE_MAX need to be properly set - according to your mongoDB hosting configuration. NOTE: This plugin rely on db.stats() for reporting logical size of database, which may be different than physical size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size. NOTE: MongoDB Atlas quota is for all databases in cluster, while each instance will get only size of its own database only . It is ok when you only have one database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting DBSIZE_MAX to that fraction may help, but wont be precise. All sizes are expressed as integers, in Mebibytes 1 MiB == 1024 KiB == 1024*1024 B Extended settings available: DBSIZE_MAX ( 496 ) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier. DBSIZE_WARN_PERCENTAGE ( 60 ) - Threshold to show first warning about database size. When database reach this percentage of DBSIZE_MAX size - pill will show size in yellow. DBSIZE_URGENT_PERCENTAGE ( 75 ) - Threshold to show urgent warning about database size. When database reach this percentage of DBSIZE_MAX size, it is urgent to do backup and clean up old data. At this percentage info pill turns red. DBSIZE_ENABLE_ALERTS ( false ) - Set to true to enable notifications about database size. DBSIZE_IN_MIB ( false ) - Set to true to display size of database in MiB-s instead of default percentage.","title":"dbsize (Database Size)"},{"location":"nightscout/setup_variables/#extended-settings","text":"Some plugins support additional configuration using extra environment variables. These are prefixed with the name of the plugin and a _ . For example setting MYPLUGIN_EXAMPLE_VALUE=1234 would make extendedSettings.exampleValue available to the MYPLUGIN plugin. Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser. DEVICESTATUS_ADVANCED ( true ) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site. DEVICESTATUS_DAYS ( 1 ) - Defaults to 1, can optionally be set to 2. Users can use this to show 48 hours of device status data for in retro mode, rather than the default 24 hours. Setting this value to 2 will roughly double the bandwidth usage of nightscout, so users with a data cap may not want to update this setting.","title":"Extended Settings"},{"location":"nightscout/setup_variables/#pushover","text":"In addition to the normal web based alarms, there is also support for Pushover based alarms and notifications. To get started install the Pushover application on your iOS or Android device and create an account. Using that account login to Pushover , in the top left you\u2019ll see your User Key, you\u2019ll need this plus an application API Token/Key to complete this setup. You\u2019ll need to Create a Pushover Application . You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch. Maybe you'd like to use this one ? Pushover is configured using the following Environment Variables: * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\"pushover\"`. * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below. * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user. This also supports a space delimited list of keys. To disable `INFO` level pushes set this to `off`. * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`). If not defined this will fallback to `PUSHOVER_USER_KEY`. A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too. This also support a space delimited list of keys. To disable Alarm pushes set this to `off`. * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements. If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`. This also support a space delimited list of keys. To disable Announcement pushes set this to `off`. * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible. * `API_SECRET` - Used for signing the pushover callback request for acknowledgments. If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\"off\"` If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\"off\"` If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\"off\"` If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements For testing/development try [localtunnel](http://localtunnel.me/).","title":"Pushover"},{"location":"nightscout/setup_variables/#ifttt-maker","text":"In addition to the normal web based alarms, and pushover, there is also integration for IFTTT Webhooks . With Maker you are able to integrate with all the other IFTTT Services . For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more. Setup IFTTT account: login or create an account Follow the Detailed IFTTT setup Instructions Configure Nightscout by setting these webpage environment variables: ENABLE - maker should be added to the list of plugins, for example: ENABLE=\"maker\" . MAKER_KEY - Set this to your secret key (see [ Detailed Instructions ) MAKER_KEY=\"abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\" This also supports a space delimited list of keys. MAKER_ANNOUNCEMENT_KEY - An optional Maker key, will be used for system wide user generated announcements. If not defined this will fallback to MAKER_KEY . A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too. This also support a space delimited list of keys. Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with ns- . The core events are: ns-event - This event is sent to the maker service for all alarms and notifications. This is good catch all event for general logging. ns-allclear - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms. For example, you could use this event to turn a light to green. ns-info - Plugins that generate notifications at the info level will cause this event to also be triggered. It will be sent in addition to ns-event . ns-warning - Alarms at the warning level with cause this event to also be triggered. It will be sent in addition to ns-event . ns-urgent - Alarms at the urgent level with cause this event to also be triggered. It will be sent in addition to ns-event . see the full list of events","title":"IFTTT Maker"},{"location":"nightscout/setup_variables/#treatment-profile","text":"Some of the plugins make use of a treatment profile that can be edited using the Profile Editor . Treatment Profile Fields: timezone (Time Zone) - time zone local to the patient. Should be set. units (Profile Units) - blood glucose units used in the profile, either \"mg/dl\" or \"mmol\" dia (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours. carbs_hr (Carbs per Hour) - The number of carbs that are processed per hour, for more information see #DIYPS . carbratio (Carb Ratio) - grams per unit of insulin. sens (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose. basal The basal rate set on the pump. target_high - Upper target for correction boluses. target_low - Lower target for correction boluses.","title":"Treatment Profile"},{"location":"nightscout/wearable/","text":"How to display Nightscout data on your watch. \u2301 Pebble Smartwatches \u2301 Pebble smartwatch use is a historic milestone of CGM in the Cloud. Pebble has been bought by Fitbit in 2016 and necessary resources have moved to archives and rebble.io . Pebble support is still maintained in Loop, AndroidAPS, FreeAPS and xDrip+. You still can find the Pebble app for iOS in the Apple Store . For Android you need to download it from APKMirror or APKPure . For authentication and getting the watchfaces, the original server closed so you'll need to register with Rebble . You'll find Nightscout watchfaces here . Search for Nightscout, CGM, ... Configure the watchface with your Nightscout site URL. urchin \u2301 A Pebble watchface to view data from a continuous glucose monitor in graph format. If you want to use your Pebble with Loop look here , for AndroidAPS here and FreeAPS here . xDrip+ \u2301 Enable Pebble Integration in Smartwatch features. You can answer no to default watchface install so that you will be able to select another one. You can then decide to install or not the snooze control. Android Wear OS smartwatches \u2301 With an Android smartphone. Android Wear 1.x: \u2301 Recommended: Install an old version of Android Wear on your phone (search APKMirror for example: Android Wear 2.9.0.185084575.gms) and pair your watch. Make sure to allow GPS and Wear OS access to position on the watch. Allow Wear OS to run in background on your phone. Note If you installed Wear OS, you will need to manually update the watch the Google Play Services see here . Once your smartwatch Google Play Service has been updated to a version above 9.x you can safely update Android Wear to Wear OS. Change the watchface to match your app (in Wear OS or on your watch). Android Wear 2.x: \u2301 Install Wear OS on your phone and pair your watch. Make sure to allow GPS and Wear OS access to position on the watch. Allow Wear OS to run in background on your phone. Install your app wear extension from the smartwatch Google Play store, selecting the apps installed on your phone. Note: Newer versions of Wear OS do not support this feature anymore, use Wear Installer . Change the watchface to match your app (in Wear OS or on your watch). xDrip+ \u2301 Enable Android Wear Integration to send xDrip+ BG to the smartwatch. Do not enable neither Collection nor Force Collection. Full xDrip+ wear documentation here . NB: you can also use Tasker . AndroidAPS \u2301 For AndroidAPS here . Glimp \u2301 Select your Wearable device and enable the Glimp watchface. Amazfit Pace & Stratos \u2301 xDrip+ \u2301 Install the Amazfit watch app on your phone. Install the Amazfit tool on a Windows PC. Download the widget from the project author (Klaus3d3) GitHub repository . OEM unlock and enable USB debug on the watch, run TOOL ALL IN ONE and click the APK Installer button, select the widget apk file and INSTALL it. Close the install window and click Reboot System. In xDrip+, enable the Amazfit service and select the options you want to enable. Original instructions here . Xiaomi MiBand 4 and 5 \u2301 Amazfit Band 5, Bip, Bip Lite, Bip S and GTR \u2301 Amazfit GTR2, GTR2e, GTS2, GTS2e and GTR42 \u2301 xDrip+ \u2301 Follow Artem's instructions here . Apple Watch \u2301 Nightguard \u2301 Apple Watch series 3 and above. GitHub sugarmate \u2301 You can setup sugarmate as a calendar complication to display Nightscout on your Apple watch. nsapple \u2301 nsapple is an apple watch app for Nightscout / Loop followers. Loop Follow \u2301 You can setup Loop Follow as a calendar complication to display Nightscout on your Apple watch. Fitbit \u2301 Nightscout Monitor \u2301 Ionic/Sense/Versa/Versa 2/Versa 3/Versa Lite Repository Glance \u2301 Ionic/Sense/Versa/Versa 2/Versa 3/Versa Lite Web site Sentinel \u2301 Ionic/Sense/Versa/Versa 2/Versa Lite Facebook group: Sentinel Marclock \u2301 Ionic/Sense/Versa/Versa 2/Versa Lite Instructions Samsung Gear Smartwatches \u2301 xDrip+ with Tasker \u2301 Note: also available for Android Wear devices Instructions G-Watch app \u2301 Facebook group: G-Watch App Garmin Smartwatches and Computers \u2301 By Phimby By Horsetooth By andreas-may By Fredrik_S By John_","title":"Nightscout on your watch"},{"location":"nightscout/wearable/#how-to-display-nightscout-data-on-your-watch","text":"","title":"How to display Nightscout data on your watch."},{"location":"nightscout/wearable/#pebble-smartwatches","text":"Pebble smartwatch use is a historic milestone of CGM in the Cloud. Pebble has been bought by Fitbit in 2016 and necessary resources have moved to archives and rebble.io . Pebble support is still maintained in Loop, AndroidAPS, FreeAPS and xDrip+. You still can find the Pebble app for iOS in the Apple Store . For Android you need to download it from APKMirror or APKPure . For authentication and getting the watchfaces, the original server closed so you'll need to register with Rebble . You'll find Nightscout watchfaces here . Search for Nightscout, CGM, ... Configure the watchface with your Nightscout site URL.","title":"Pebble Smartwatches"},{"location":"nightscout/wearable/#urchin","text":"A Pebble watchface to view data from a continuous glucose monitor in graph format. If you want to use your Pebble with Loop look here , for AndroidAPS here and FreeAPS here .","title":"urchin"},{"location":"nightscout/wearable/#xdrip","text":"Enable Pebble Integration in Smartwatch features. You can answer no to default watchface install so that you will be able to select another one. You can then decide to install or not the snooze control.","title":"xDrip+"},{"location":"nightscout/wearable/#android-wear-os-smartwatches","text":"With an Android smartphone.","title":"Android Wear OS smartwatches"},{"location":"nightscout/wearable/#android-wear-1x","text":"Recommended: Install an old version of Android Wear on your phone (search APKMirror for example: Android Wear 2.9.0.185084575.gms) and pair your watch. Make sure to allow GPS and Wear OS access to position on the watch. Allow Wear OS to run in background on your phone. Note If you installed Wear OS, you will need to manually update the watch the Google Play Services see here . Once your smartwatch Google Play Service has been updated to a version above 9.x you can safely update Android Wear to Wear OS. Change the watchface to match your app (in Wear OS or on your watch).","title":"Android Wear 1.x:"},{"location":"nightscout/wearable/#android-wear-2x","text":"Install Wear OS on your phone and pair your watch. Make sure to allow GPS and Wear OS access to position on the watch. Allow Wear OS to run in background on your phone. Install your app wear extension from the smartwatch Google Play store, selecting the apps installed on your phone. Note: Newer versions of Wear OS do not support this feature anymore, use Wear Installer . Change the watchface to match your app (in Wear OS or on your watch).","title":"Android Wear 2.x:"},{"location":"nightscout/wearable/#xdrip_1","text":"Enable Android Wear Integration to send xDrip+ BG to the smartwatch. Do not enable neither Collection nor Force Collection. Full xDrip+ wear documentation here . NB: you can also use Tasker .","title":"xDrip+"},{"location":"nightscout/wearable/#androidaps","text":"For AndroidAPS here .","title":"AndroidAPS"},{"location":"nightscout/wearable/#glimp","text":"Select your Wearable device and enable the Glimp watchface.","title":"Glimp"},{"location":"nightscout/wearable/#amazfit-pace-stratos","text":"","title":"Amazfit Pace &amp; Stratos"},{"location":"nightscout/wearable/#xdrip_2","text":"Install the Amazfit watch app on your phone. Install the Amazfit tool on a Windows PC. Download the widget from the project author (Klaus3d3) GitHub repository . OEM unlock and enable USB debug on the watch, run TOOL ALL IN ONE and click the APK Installer button, select the widget apk file and INSTALL it. Close the install window and click Reboot System. In xDrip+, enable the Amazfit service and select the options you want to enable. Original instructions here .","title":"xDrip+"},{"location":"nightscout/wearable/#xiaomi-miband-4-and-5","text":"","title":"Xiaomi MiBand 4 and 5"},{"location":"nightscout/wearable/#amazfit-band-5-bip-bip-lite-bip-s-and-gtr","text":"","title":"Amazfit Band 5, Bip, Bip Lite, Bip S and GTR"},{"location":"nightscout/wearable/#amazfit-gtr2-gtr2e-gts2-gts2e-and-gtr42","text":"","title":"Amazfit GTR2, GTR2e, GTS2, GTS2e and GTR42"},{"location":"nightscout/wearable/#xdrip_3","text":"Follow Artem's instructions here .","title":"xDrip+"},{"location":"nightscout/wearable/#apple-watch","text":"","title":"Apple Watch"},{"location":"nightscout/wearable/#nightguard","text":"Apple Watch series 3 and above. GitHub","title":"Nightguard"},{"location":"nightscout/wearable/#sugarmate","text":"You can setup sugarmate as a calendar complication to display Nightscout on your Apple watch.","title":"sugarmate"},{"location":"nightscout/wearable/#nsapple","text":"nsapple is an apple watch app for Nightscout / Loop followers.","title":"nsapple"},{"location":"nightscout/wearable/#loop-follow","text":"You can setup Loop Follow as a calendar complication to display Nightscout on your Apple watch.","title":"Loop Follow"},{"location":"nightscout/wearable/#fitbit","text":"","title":"Fitbit"},{"location":"nightscout/wearable/#nightscout-monitor","text":"Ionic/Sense/Versa/Versa 2/Versa 3/Versa Lite Repository","title":"Nightscout Monitor"},{"location":"nightscout/wearable/#glance","text":"Ionic/Sense/Versa/Versa 2/Versa 3/Versa Lite Web site","title":"Glance"},{"location":"nightscout/wearable/#sentinel","text":"Ionic/Sense/Versa/Versa 2/Versa Lite Facebook group: Sentinel","title":"Sentinel"},{"location":"nightscout/wearable/#marclock","text":"Ionic/Sense/Versa/Versa 2/Versa Lite Instructions","title":"Marclock"},{"location":"nightscout/wearable/#samsung-gear-smartwatches","text":"","title":"Samsung Gear Smartwatches"},{"location":"nightscout/wearable/#xdrip-with-tasker","text":"Note: also available for Android Wear devices Instructions","title":"xDrip+ with Tasker"},{"location":"nightscout/wearable/#g-watch-app","text":"Facebook group: G-Watch App","title":"G-Watch app"},{"location":"nightscout/wearable/#garmin-smartwatches-and-computers","text":"By Phimby By Horsetooth By andreas-may By Fredrik_S By John_","title":"Garmin Smartwatches and Computers"},{"location":"pages/hello.html/","text":"This is a page","title":"This is a Page"},{"location":"troubleshoot/cleanup/","text":"Cleanup \u2301 After unsuccessful attempts you might want to cleanup the various accounts to avoid confusion. If you're still trying to deploy your first Nightscout, ignore all data loss recommendations below. If you have a large amount of CGM data, be extra cautious when performing Atlas cleanup. Github \u2301 Github cleanup consists of deleting your fork and forking again the official latest released version . Follow Step 1 of this guide (ONLY STEP1!) . Heroku \u2301 If you experience issues during deployment you might end up with many apps. Make sure you keep the last one that was functional or delete all before attempting a new deployment. This will just make it easier to find which app you're trying to build. Keeping sleeping apps doesn't have any negative impact but no real advantage unless you do it on purpose. Deleting an Heroku app does not delete your Nightscout data, but you might want to write down your variables if your site was functional before. Note you can also rename an app (unless the name is already in use in heroku.com). To delete an app, select it and go to Settings , scroll down to Delete App Copy and paste your app name to confirm deletion, Atlas \u2301 It is very easy to get lost in Atlas. The structure from top to bottom is: Organization, Projects and Databases. You can have several organizations, each of them several projects and each of them several databases. Note If you are deploying a brand new Nightscout make sure you have one organization, one project and one cluster created. No more no less. If you want to cleanup Atlas, unless you don't have data, you must first find out which database contains your data. For this, start from View All Organizations : You can delete empty organizations (those without any project inside). Select the organization, then top left the cog wheel to go in Settings , then scroll down to Delete Organization : Delete . If an organization is connected to mLab delete it only if you don't want to migrate the database or if you're done it with another organization. Deleting an organization without projects will not delete your data. Once inside an organization, you will see its projects. You can safely delete projects without clusters. Deleting an empty project doesn't delete your Nightscout data. For non-empty projects continue reading before deciding to delete them. You can then move to your project (select it) and check its database(s) selecting COLLECTIONS An empty project will look like below, and this is typically what you have before deploying Nightscout in Heroku. Once Nightscout is deployed in a project, a new database will be created there. The database currently used by your Nightscout is the one specified in the connection string, in the example below dbname . Whenever you change the database name in the connection string, a new database will be created in your project. mongodb+srv://atlasusername:atlaspassword@cluster0.zzzzz.mongodb.net/ dbname ?retryWrites=true&w=majority There is usually one database for Nightscout, if there are several, select one and then the other(s) to understand which one contains your data. For this, select entries . A large database is most probably one you want to keep. You can safely delete empty databases (check the size first). If you're not sure you're deleting the right database, just leave it. Hover on the database name and click the bin icon. Confirm deletion by copying the database name and click Drop . If your database gets recreated after you deleted it this means you MONGODB_URI or MONGO_CONNECTION string is pointing to it. If you want to delete a non-empty Project you need to terminate all clusters belonging to it. \u2301 Terminating a cluster will delete all information and databases in this cluster! Confirm with your cluster name and wait until shutdown is complete. You can then delete the empty project.","title":"Cleanup"},{"location":"troubleshoot/cleanup/#cleanup","text":"After unsuccessful attempts you might want to cleanup the various accounts to avoid confusion. If you're still trying to deploy your first Nightscout, ignore all data loss recommendations below. If you have a large amount of CGM data, be extra cautious when performing Atlas cleanup.","title":"Cleanup"},{"location":"troubleshoot/cleanup/#github","text":"Github cleanup consists of deleting your fork and forking again the official latest released version . Follow Step 1 of this guide (ONLY STEP1!) .","title":"Github"},{"location":"troubleshoot/cleanup/#heroku","text":"If you experience issues during deployment you might end up with many apps. Make sure you keep the last one that was functional or delete all before attempting a new deployment. This will just make it easier to find which app you're trying to build. Keeping sleeping apps doesn't have any negative impact but no real advantage unless you do it on purpose. Deleting an Heroku app does not delete your Nightscout data, but you might want to write down your variables if your site was functional before. Note you can also rename an app (unless the name is already in use in heroku.com). To delete an app, select it and go to Settings , scroll down to Delete App Copy and paste your app name to confirm deletion,","title":"Heroku"},{"location":"troubleshoot/cleanup/#atlas","text":"It is very easy to get lost in Atlas. The structure from top to bottom is: Organization, Projects and Databases. You can have several organizations, each of them several projects and each of them several databases. Note If you are deploying a brand new Nightscout make sure you have one organization, one project and one cluster created. No more no less. If you want to cleanup Atlas, unless you don't have data, you must first find out which database contains your data. For this, start from View All Organizations : You can delete empty organizations (those without any project inside). Select the organization, then top left the cog wheel to go in Settings , then scroll down to Delete Organization : Delete . If an organization is connected to mLab delete it only if you don't want to migrate the database or if you're done it with another organization. Deleting an organization without projects will not delete your data. Once inside an organization, you will see its projects. You can safely delete projects without clusters. Deleting an empty project doesn't delete your Nightscout data. For non-empty projects continue reading before deciding to delete them. You can then move to your project (select it) and check its database(s) selecting COLLECTIONS An empty project will look like below, and this is typically what you have before deploying Nightscout in Heroku. Once Nightscout is deployed in a project, a new database will be created there. The database currently used by your Nightscout is the one specified in the connection string, in the example below dbname . Whenever you change the database name in the connection string, a new database will be created in your project. mongodb+srv://atlasusername:atlaspassword@cluster0.zzzzz.mongodb.net/ dbname ?retryWrites=true&w=majority There is usually one database for Nightscout, if there are several, select one and then the other(s) to understand which one contains your data. For this, select entries . A large database is most probably one you want to keep. You can safely delete empty databases (check the size first). If you're not sure you're deleting the right database, just leave it. Hover on the database name and click the bin icon. Confirm deletion by copying the database name and click Drop . If your database gets recreated after you deleted it this means you MONGODB_URI or MONGO_CONNECTION string is pointing to it.","title":"Atlas"},{"location":"troubleshoot/cleanup/#if-you-want-to-delete-a-non-empty-project-you-need-to-terminate-all-clusters-belonging-to-it","text":"Terminating a cluster will delete all information and databases in this cluster! Confirm with your cluster name and wait until shutdown is complete. You can then delete the empty project.","title":"If you want to delete a non-empty Project you need to terminate all clusters belonging to it."},{"location":"troubleshoot/connection_string/","text":"Meet your connection string \u2301 APPLIES TO: For technical details look here . A typical mLab migrated string will look like this: mongodb+srv://heroku_0v50k8rf:ddfsjcpfu8fcoj9n6dueabfd5u@cluster0.g03wh.mongodb.net/heroku_0v50k8rf?retryWrites=true&w=majority A typical new string created with Atlas will look like this: mongodb+srv://johndoe:V3ry53cr3t@cluster0.a01bc.mongodb.net/myCGMiC?retryWrites=true&w=majority It will start by mongodb+srv:// with mongodb a standard prefix for a connection string, and +srv adding a security layer. After :// you'll find your database username , that is not your Atlas account username. In the examples above heroku_0v50k8rf or johndoe . Following the username, a separator : and your database password that is not your Atlas account password. In the examples above a typical 26 characters password created automatically with the mLab add-on ddfsjcpfu8fcoj9n6dueabfd5u and a user created password V3ry53cr3t . Following the password, a separator @ then the host name that was provided by Atlas after you created you cluster. typically it will look like cluster0. a1b2c3 .mongodb.net After the host name and the separator / you'll see your Nightscout database name . If you migrated from mLab it will be identical to your database username (unless you modified it). If you created your Atlas cluster it will be the one you decided. In the examples above heroku_0v50k8rf or myCGMiC . Another separator ? and you'll see two options: retryWrites=true&w=majority Unable to connect to Mongo \u2301 Common reasons: The database Heroku is pointing to is not available (mLab services stopped in Dec 2020). Your Atlas connection string is incorrect If you see this message Update to latest version and come back after you have a more accurate error message. MongoDB in read only mode \u2301 If you see this message: Verify your Atlas database is not read only, if migration went well on the first time it should be like this, else click Edit Change the permissions to Atlas Admin and Update User Restart all dynos in Heroku MONGODB_URI missing \u2301 If you see this message: If you forgot to migrate to Atlas you need to attach a new Atlas database . If you know you migrated, and your Nightscout was still functional after November 11th 2020, continue below to recover: Generic Unable to connect to Mongo \u2301 If you see this message: Check you authorized all IPs to access your Atlas database: Open your Atlas cluster and select your Nightscout project, then Network access If you see an IP (in red above) instead of 0.0.0.0/0 click Edit select ALLOW ACCESS FROM ANYWHERE then Confirm . Restart all dynos in Heroku Bad connection string \u2301 If you see this message: Open Heroku and Reveal Config Vars in Settings Search for a variable called MONGODB_URI or MONGO_CONNECTION . If you find none, go here . MONGODB_URI or MONGO_CONNECTION There should be at least one and only one of them, not both. If you migrated from mLab Heroku add-on it is usually MONGO_CONNECTION if you deployed a brand new Nightscout it should be MONGODB_URI Verify it is looking like this: mongodb+srv://atlasusername:atlaspassword@cluster0.zzzzz.mongodb.net/dbname?retryWrites=true&w=majority Note that your atlasusername , atlaspassword and dbname will be different from the example above. Paste the string in the box below: Click the Analyze button: Analyze Analysis result will appear here. If the analysis result doesn't show any error, check below the data is what you actually wanted: Database Username: ... Database Password: ... Database name: ... var sUser, sdB, sPwd; function Analyze() { var sString = \"Your connection string structure looks good.\"; var bErr = 0; var sAtlas = document.getElementById(\"myAtlas\").value; var iAS = sAtlas.search(\" \"); if(iAS!=-1) { sString = \"There should be no space characters in the string. Remove all spaces\"; bErr = 1; } iAS = sAtlas.search(\"mongodb://\"); if(iAS!=-1 && !bErr) { sString = \"This is not an Atlas connection string: it should start with mongodb+srv://\"; bErr = 1; } iAS = sAtlas.search(\"<password>\"); if(iAS!=-1 && !bErr) { sString = \"You should replace &lt;password&gt; with your actual Atlas database password in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\"<dbname>\"); if(iAS!=-1 && !bErr) { sString = \"You should replace &lt;dbname&gt; with your actual Atlas database name in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\"<\"); if(iAS!=-1 && !bErr) { sString = \"There should be no &lt; characters in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\">\"); if(iAS!=-1 && !bErr) { sString = \"There should be no &gt; characters in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\"retryWrites=true\"); if(iAS==-1 && !bErr) { sString = \"Your Atlas string should end with ?retryWrites=true&w=majority\"; bErr = 1; } var iUsr, iAt, iCol, idB, iQM; iUsr = sAtlas.search(\"://\"); if(iUsr==-1 && !bErr) { sString = \"Your Atlas string should start by mongodb+srv://\"; bErr = 1; } else { iUsr = iUsr + 3; sAtlas = sAtlas.substr(iUsr); } iAt = sAtlas.search(\"@\"); if(iAt==-1 && !bErr) { sString = \"Your Atlas string should contain @ after your password\"; bErr = 1; }; iCol = sAtlas.search(\":\"); if(iCol==-1 && !bErr) { sString = \"Your Atlas user and password should be separated by :\"; bErr = 1; }; iQm = sAtlas.search(\"\\\\?\"); if(iQm==-1 && !bErr) { sString = \"Your Atlas string should end with ?retryWrites=true&w=majority\"; bErr = 1; }; idB = sAtlas.search(\"net/\"); if(idB==-1 && !bErr) { sString = \"Your Atlas string should be in the mongodb.net domain\"; bErr = 1; } else idB = idB + 4; if(!bErr) { sUser = sAtlas.substring(0, iCol); sPwd = sAtlas.substring(iCol + 1, iAt); sdB = sAtlas.substring(idB, iQm); document.getElementById(\"myUser\").innerHTML = sUser; document.getElementById(\"myPwd\").innerHTML = sPwd; document.getElementById(\"mydB\").innerHTML = sdB; } document.getElementById(\"result\").innerHTML = sString; } Note If you migrated from Heroku mLab add-on, your database username and database name should be identical. If you've just created a new site, try to use this help page to verify or recreate it. If you're still in trouble continue below: Recover your connection string \u2301 If you've tried several times to deploy or migrate, you might end-up with many useless items in your accounts. At this point, you could benefit doing some cleanup in order to identify the correct Atlas database you want to connect to. Consider cleanup before continuing. a) Go to your MongDB account. Log in if necessary https://cloud.mongodb.com/ b) Click Connect below your cluster name (in the example below Cluster0 , but it might have another name) c) Click Connect your application d) A new view opens, in (2) Add your connection string into your application code you will find your MONGODB_URI or MONGO_CONNECTION string. Click Copy then Close e) Paste it into a place where you can edit the text (i.e. a Word or a Notepad document). Edit your string so that you add the database user password after the database user info. You defined them during your MongoDB Atlas database creation, when you reached this step . Here\u2019s an example of how the string is built up: mongodb+srv:// nightscout : <password> @cluster0.xxxxx.mongodb.net/ myFirstDatabase ?retryWrites=true&w=majority f) Edit your string in order to replace <password> with your database password. g) If you don't remember your Atlas database password (which should not be your mongoDB Atlas account password) invent a new one (only letters and numbers). Your string will now look like this: (do not use the same password as the example). Note there are no remaining < and > . mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority h) Copy this resulting string above into your Heroku variable MONGODB_URI (new Nightscout) or MONGO_CONNECTION (migration). There must be only one of these variables, not both. Open this link in another tab to see how to edit your Heroku variables. i) If there is neither one nor the other create a new MONGODB_URI variable and paste the string in the value field. j) If you remembered your password restart all dynos in Heroku, and you should be done. k) If you changed your password or your Nightscout page still fails to open continue. Change your Atlas database password \u2301 If you changed the password in the string you will need to change it in the database too: Click Database Access At the end of the line, click Edit In Password click Edit Password Note: take a look at the top of this view, after Edit User you can see your database user name before @ . Check it's matching the one in your connection string. If you forgot your password invent a new one (use only letters and numbers: no special characters) or better: use Autogenerate Secure Password and click Copy Else make it the same than the one in your Heroku MONGODB_URI connection string variable Click Update User Make sure the password matches in your connection string Heroku variable MONGODB_URI (new Nightscout) or MONGO_CONNECTION (migration) Refreshing your Nightscout web page display should be enough, but you can also restart Heroku dynos .","title":"Connection failure"},{"location":"troubleshoot/connection_string/#meet-your-connection-string","text":"APPLIES TO: For technical details look here . A typical mLab migrated string will look like this: mongodb+srv://heroku_0v50k8rf:ddfsjcpfu8fcoj9n6dueabfd5u@cluster0.g03wh.mongodb.net/heroku_0v50k8rf?retryWrites=true&w=majority A typical new string created with Atlas will look like this: mongodb+srv://johndoe:V3ry53cr3t@cluster0.a01bc.mongodb.net/myCGMiC?retryWrites=true&w=majority It will start by mongodb+srv:// with mongodb a standard prefix for a connection string, and +srv adding a security layer. After :// you'll find your database username , that is not your Atlas account username. In the examples above heroku_0v50k8rf or johndoe . Following the username, a separator : and your database password that is not your Atlas account password. In the examples above a typical 26 characters password created automatically with the mLab add-on ddfsjcpfu8fcoj9n6dueabfd5u and a user created password V3ry53cr3t . Following the password, a separator @ then the host name that was provided by Atlas after you created you cluster. typically it will look like cluster0. a1b2c3 .mongodb.net After the host name and the separator / you'll see your Nightscout database name . If you migrated from mLab it will be identical to your database username (unless you modified it). If you created your Atlas cluster it will be the one you decided. In the examples above heroku_0v50k8rf or myCGMiC . Another separator ? and you'll see two options: retryWrites=true&w=majority","title":"Meet your connection string"},{"location":"troubleshoot/connection_string/#unable-to-connect-to-mongo","text":"Common reasons: The database Heroku is pointing to is not available (mLab services stopped in Dec 2020). Your Atlas connection string is incorrect If you see this message Update to latest version and come back after you have a more accurate error message.","title":"Unable to connect to Mongo"},{"location":"troubleshoot/connection_string/#mongodb-in-read-only-mode","text":"If you see this message: Verify your Atlas database is not read only, if migration went well on the first time it should be like this, else click Edit Change the permissions to Atlas Admin and Update User Restart all dynos in Heroku","title":"MongoDB in read only mode"},{"location":"troubleshoot/connection_string/#mongodb_uri-missing","text":"If you see this message: If you forgot to migrate to Atlas you need to attach a new Atlas database . If you know you migrated, and your Nightscout was still functional after November 11th 2020, continue below to recover:","title":"MONGODB_URI missing"},{"location":"troubleshoot/connection_string/#generic-unable-to-connect-to-mongo","text":"If you see this message: Check you authorized all IPs to access your Atlas database: Open your Atlas cluster and select your Nightscout project, then Network access If you see an IP (in red above) instead of 0.0.0.0/0 click Edit select ALLOW ACCESS FROM ANYWHERE then Confirm . Restart all dynos in Heroku","title":"Generic Unable to connect to Mongo"},{"location":"troubleshoot/connection_string/#bad-connection-string","text":"If you see this message: Open Heroku and Reveal Config Vars in Settings Search for a variable called MONGODB_URI or MONGO_CONNECTION . If you find none, go here . MONGODB_URI or MONGO_CONNECTION There should be at least one and only one of them, not both. If you migrated from mLab Heroku add-on it is usually MONGO_CONNECTION if you deployed a brand new Nightscout it should be MONGODB_URI Verify it is looking like this: mongodb+srv://atlasusername:atlaspassword@cluster0.zzzzz.mongodb.net/dbname?retryWrites=true&w=majority Note that your atlasusername , atlaspassword and dbname will be different from the example above. Paste the string in the box below: Click the Analyze button: Analyze Analysis result will appear here. If the analysis result doesn't show any error, check below the data is what you actually wanted: Database Username: ... Database Password: ... Database name: ... var sUser, sdB, sPwd; function Analyze() { var sString = \"Your connection string structure looks good.\"; var bErr = 0; var sAtlas = document.getElementById(\"myAtlas\").value; var iAS = sAtlas.search(\" \"); if(iAS!=-1) { sString = \"There should be no space characters in the string. Remove all spaces\"; bErr = 1; } iAS = sAtlas.search(\"mongodb://\"); if(iAS!=-1 && !bErr) { sString = \"This is not an Atlas connection string: it should start with mongodb+srv://\"; bErr = 1; } iAS = sAtlas.search(\"<password>\"); if(iAS!=-1 && !bErr) { sString = \"You should replace &lt;password&gt; with your actual Atlas database password in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\"<dbname>\"); if(iAS!=-1 && !bErr) { sString = \"You should replace &lt;dbname&gt; with your actual Atlas database name in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\"<\"); if(iAS!=-1 && !bErr) { sString = \"There should be no &lt; characters in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\">\"); if(iAS!=-1 && !bErr) { sString = \"There should be no &gt; characters in the Atlas string\"; bErr = 1; } iAS = sAtlas.search(\"retryWrites=true\"); if(iAS==-1 && !bErr) { sString = \"Your Atlas string should end with ?retryWrites=true&w=majority\"; bErr = 1; } var iUsr, iAt, iCol, idB, iQM; iUsr = sAtlas.search(\"://\"); if(iUsr==-1 && !bErr) { sString = \"Your Atlas string should start by mongodb+srv://\"; bErr = 1; } else { iUsr = iUsr + 3; sAtlas = sAtlas.substr(iUsr); } iAt = sAtlas.search(\"@\"); if(iAt==-1 && !bErr) { sString = \"Your Atlas string should contain @ after your password\"; bErr = 1; }; iCol = sAtlas.search(\":\"); if(iCol==-1 && !bErr) { sString = \"Your Atlas user and password should be separated by :\"; bErr = 1; }; iQm = sAtlas.search(\"\\\\?\"); if(iQm==-1 && !bErr) { sString = \"Your Atlas string should end with ?retryWrites=true&w=majority\"; bErr = 1; }; idB = sAtlas.search(\"net/\"); if(idB==-1 && !bErr) { sString = \"Your Atlas string should be in the mongodb.net domain\"; bErr = 1; } else idB = idB + 4; if(!bErr) { sUser = sAtlas.substring(0, iCol); sPwd = sAtlas.substring(iCol + 1, iAt); sdB = sAtlas.substring(idB, iQm); document.getElementById(\"myUser\").innerHTML = sUser; document.getElementById(\"myPwd\").innerHTML = sPwd; document.getElementById(\"mydB\").innerHTML = sdB; } document.getElementById(\"result\").innerHTML = sString; } Note If you migrated from Heroku mLab add-on, your database username and database name should be identical. If you've just created a new site, try to use this help page to verify or recreate it. If you're still in trouble continue below:","title":"Bad connection string"},{"location":"troubleshoot/connection_string/#recover-your-connection-string","text":"If you've tried several times to deploy or migrate, you might end-up with many useless items in your accounts. At this point, you could benefit doing some cleanup in order to identify the correct Atlas database you want to connect to. Consider cleanup before continuing. a) Go to your MongDB account. Log in if necessary https://cloud.mongodb.com/ b) Click Connect below your cluster name (in the example below Cluster0 , but it might have another name) c) Click Connect your application d) A new view opens, in (2) Add your connection string into your application code you will find your MONGODB_URI or MONGO_CONNECTION string. Click Copy then Close e) Paste it into a place where you can edit the text (i.e. a Word or a Notepad document). Edit your string so that you add the database user password after the database user info. You defined them during your MongoDB Atlas database creation, when you reached this step . Here\u2019s an example of how the string is built up: mongodb+srv:// nightscout : <password> @cluster0.xxxxx.mongodb.net/ myFirstDatabase ?retryWrites=true&w=majority f) Edit your string in order to replace <password> with your database password. g) If you don't remember your Atlas database password (which should not be your mongoDB Atlas account password) invent a new one (only letters and numbers). Your string will now look like this: (do not use the same password as the example). Note there are no remaining < and > . mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority h) Copy this resulting string above into your Heroku variable MONGODB_URI (new Nightscout) or MONGO_CONNECTION (migration). There must be only one of these variables, not both. Open this link in another tab to see how to edit your Heroku variables. i) If there is neither one nor the other create a new MONGODB_URI variable and paste the string in the value field. j) If you remembered your password restart all dynos in Heroku, and you should be done. k) If you changed your password or your Nightscout page still fails to open continue.","title":"Recover your connection string"},{"location":"troubleshoot/connection_string/#change-your-atlas-database-password","text":"If you changed the password in the string you will need to change it in the database too: Click Database Access At the end of the line, click Edit In Password click Edit Password Note: take a look at the top of this view, after Edit User you can see your database user name before @ . Check it's matching the one in your connection string. If you forgot your password invent a new one (use only letters and numbers: no special characters) or better: use Autogenerate Secure Password and click Copy Else make it the same than the one in your Heroku MONGODB_URI connection string variable Click Update User Make sure the password matches in your connection string Heroku variable MONGODB_URI (new Nightscout) or MONGO_CONNECTION (migration) Refreshing your Nightscout web page display should be enough, but you can also restart Heroku dynos .","title":"Change your Atlas database password"},{"location":"troubleshoot/troublehoot/","text":"Overall third party services \u2301 APPLIES TO: DIY Nightscout For Nightscout as a service contact directly support at t1pal.com or use the Get Support links. Before troubleshooting \u2301 Check the services you're using. Dexcom: https://status.dexcom.com/ Carelink US: https://carelink.minimed.com/ Carelink non-US: https://carelink.minimed.eu/app/login GitHub: https://www.githubstatus.com/ Heroku: https://status.heroku.com/ Atlas: https://status.cloud.mongodb.com/ GitHub and Heroku \u2301 A valid GitHub Directory could not be found. \u2301 When trying to deploy a new Nightscout site, this message appears when clicking Deploy to Heroku . Change browser and retry. Cannot find cgm-remote-monitor in Heroku / No GitHub source visible \u2301 When updating Nightscout, cgm-remote-monitor doesn't appear automatically in Heroku under your repository name. When updating Nightscout, your repository name doesn't appear in Manual Deploy so that you can't select the master branch. Disconnect and re- Connect like this: If it doesn't help try to re-authorize as explained below: Cannot find cgm-remote-monitor in Heroku: Item cannot be retrieved \u2301 When updating Nightscout, cgm-remote-monitor doesn't appear automatically in Heroku under your repository name and an error message appears when you try to connect to GitHub. In Heroku, go to Account Settings Select Applications and click Re-authorize Click Authorize GitHub in the pop-up. If it doesn't help, you can also try to Revoke access ... before going back to Re- Connect your GitHub account. This is necessary if someone else did setup Nightscout for you and left his own GitHub connected to your Heroku account. Atlas \u2301 Limit of one free cluster. \u2301 When creating a new site or migrating (usually not the first attempt), when reaching Target Cluster . Click the leaf top left in your Atlas account. Look at the Project Name you wanted to use when creating your new cluster, it shouldn't contain a cluster yet (like the example below, I tried to create a new Nightscout site but there is already a cluster inside the project I wanted to use). You can't have two clusters in a free project. Click your Project Name . This should not happen in normal conditions. Before deleting a cluster, check it doesn't contain your data! Click on Collections in the cluster you selected. Click on entries In the case there is data, like in the example below, don't use this cluster . Leave it like this and create a new one. If there no data , you can safely delete it. In this cluster you want to delete click ... then Terminate Copy the cluster name to confirm then click Terminate Wait until the operation completes. You can now use this project name to create a new site. Nightscout page doesn't open \u2301 Application Error \u2301 Update Nightscout to latest release . It might not fix your issue but it will help find a solution. If you didn't migrate your Heroku database from mLab to Atlas create a new Atlas database . If you didn't migrate from Azure to Heroku create a new site create a new Nightscout site with Heroku . If you're creating a new Nightscout site, it might have failed because of a wrong connection string. Delete your Heroku app and deploy again after checking the Atlas connection string is correct. If your site is already up to date: Restart all dynos \u2301 Log in Heroku, go to Settings , More , Restart all dynos . Nightscout stopped working after a few weeks \u2301 Same screen than above but you received a mail from Heroku telling you you're out of dyno hours... Check your remaining dyno hours in Heroku, click on your profile picture top right and select Account Settings , then Billing . An account without credit card information has 550 free dyno hours, with credit card information 1000. Boot Error - Unable to connect to Mongo \u2301 Look at this dedicated page . No data in Nightscout \u2301 New Nightscout sites Check you database is not read only . Make sure your Nightscout time zone is correct. Dexcom data not showing \u2301 Dexcom Share \u2301 Make sure you have Dexcom Share turned ON in your Dexcom app. In the Dexcom app's main screen, find the triangle made of dots. If the dots are grey, you do not have Share turned on. Tap the triangle, and follow the directions to add a follower (yourself if you don't have someone else you'd like to invite) and turn on Share. If you are using a Dexcom system, and your data is not appearing in Nightscout, there are only a limited number of reasons for that. You should check your (1) Heroku settings and (2) Dexcom Share. NOTE: The #1 reason why BGs aren't showing is that you have mismatched password and user names in Heroku settings and Dexcom. Heroku Settings \u2301 Login to your Heroku account and from within Heroku Settings , click on the Reveal Config Vars Now from the Config Vars area, check the following (see screenshot below for reference): You must use the same BRIDGE_PASSWORD or BRIDGE_USER_NAME that your Dexcom mobile app is using. You must have bridge and careportal on the ENABLE line (you can have other values there...but don't forget these two). If you are outside the USA, you must add BRIDGE_SERVER set to EU in Heroku settings. Your careportal must be one word in the ENABLE line, sometimes autocorrect makes it two words. If using mmol , make sure you have spelled that value correctly in the DISPLAY_UNITS . One thing that can happen if you have an incorrect Dexcom login/password in your Share account settings and/or in your Nightscout BRIDGE settings is that Dexcom will lock your account...and you won't see CGM data in Nightscout. If you notice your CGM readings disappeared, but everything else is flowing...check your Heroku logs that are viewable by selecting \"View Logs\" from the drop-down menu underneath the \"More\" option. Do your logs have \"SSO authentication errors\" like in the red box highlighted above? If you do, then: Delete your BRIDGE entries within Heroku settings. Don't delete the variables, just delete the values of BRIDGE_PASSWORD and BRIDGE_USER_NAME. Wait 15 minutes and then follow the directions below. It is important to wait 15 minutes: the reason you can't log in right now is that your Dexcom account has a temporary lock from the passwords in the step above being incorrect. The temporary lock will expire after 10-15 minutes of giving the account login a break from the incorrect logins. So, definitely wait or else you'll just keep prolonging the issue. When you change these variables, Heroku restarts Nightscout. So now everything should work. About your Bridge password and user name The BRIDGE_PASSWORD and BRIDGE_USER_NAME are NOT visible from within your Dexcom mobile app or online account. The values of them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. If you have double-checked everything else that could be incorrect and BGs still aren't showing in Nightscout, then you likely have those Bridge values incorrect. To fix that, delete your Dexcom app (don't stop the session before deleting the app...just keep it going). Download the app again from the iPhone's App Store and login to the freshly-downloaded Dexcom app. Take note that deleting the app will not stop your session, your session will pick right back up once the transmitter pairs again. The BRIDGE_USER_NAME is not an email address. Use that exact same login now in your Heroku settings. You can leave your Loop's Share account info blank...you just need the transmitter ID going forward. Dexcom username issue \u2301 It seems that Dexcom share somewhere in its systems is not capable of using the username other than ordinary letters. By changing the username, this has been solved for everyone who has tried so far. If that doesn't work for you, please report it at https://github.com/nightscout/cgm-remote-monitor/issues/5608 or if you can comment on any Facebook post that linked to this site. Change username \u2301 Unfortunately, it is not possible to change the username of a Dexcom account. You have to create a whole new account. Create new account \u2301 You can only associate one email address with a Dexcom account, so it might be a good idea to create a new email address and associate it to your current account so that you can use your current email with the new account. Go to https://www.dexcom.com and look for where to create accounts. Follow the instructions to create a new account. The alternative is to delete the old account. But do not do that. It may be good to be able to go back and retrieve historical data. Make sure the new username contains only letters. It is better to stick to a-z. We know that the period . underscore _ and at @ characters creates problems, but we do not know which other characters can create problems. Reinstall Dexcom Transmitter app \u2301 When you install the Dexcom app, it is linked to a Dexcom account. Unfortunately, there is no way to switch accounts. What you have to do is simply uninstall the app and reinstall it. In principle, it is the same procedure as changing phone. Of course, this time you should log in with the new account. Write down the current Transmitter ID. You can find the ID if you look in settings in the Dexcom app. Uninstall the Dexcom app Reinstall the Dexcom app Log in with your new account Follow the instructions in the app. For G6 do not select sensor code. The sensor code is already saved on your old transmitter. Enter the transmitter ID and wait for pairing Answer yes to the question \"have you inserted sensor\" You then have to re-invite your followers. Nightscout \u2301 Check your Heroku settings match your new credentials (see above) Dexcom or CareLink data stopping after a while \u2301 Note CareLink with mmconnect data source stopped functioning for most . Remove the mmconnect plugin from ENABLE if you use Heroku . First verify you can see your BG in Clarity. If data is present open Heroku and check you app didn't fall asleep. A sleeping app might be due to your Heroku free plan: a Hobby plan makes the app never sleep. https://www.heroku.com/pricing Another reason for a sleeping app can be due to a failure to obtain data from Dexcom Share, check the logs to understand the reasons. UpTime Robot Using an uptime robot with a bad password, or other issues originating from Nightscout can lead to a locked account (Dexcom) or Heroku addresses ban. This is not a recommended solution as it might generate a global Heroku IP blacklist lock that could propagate to all other users. If you use Nightscout, uploading data in the cloud or even just having a browser or an app downloading data should be enough to keep your app awake. Error code instead of a BG value \u2301 Nightscout implements Dexcom error codes as listed below: Code Corresponding error ?SN Sensor not active ?MD Minimal deviation ?NA No antenna ?NC Sensor not calibrated ?CD Counts deviation ?AD Absolute deviation ??? Power deviation ?RF Bad RF Data timing issues \u2301 Basal is shifted in time \u2301 Check the time zone is correct for your currently active profile in your Nightscout Profile editor . Data in the future \u2301 Check you don't have data in the future with the Admin tools . Remove them if existing. If this isn't working, or shows no future data, check in Atlas Open your Nightscout cluster and select Collections In Entries type {date:-1} and click Find Delete the entries in the future (manually) with the bin icon Database full \u2301 Free databases like M0 Sandbox provided by Atlas will only hold a limited amount of data (512MB) and you will eventually need to manually cleanup. You can extend the capacity to 2 and 5GB paying an M2 or M5 Shared cluster. Make sure your Nightscout site has Database Size enabled to monitor database capacity. Look here for more information on this plugin. Check in Atlas Open your Nightscout cluster and select Collections Click your database name (hidden left). Check the DATABASE SIZE is indeed close to or at the limit then look at these three collections Documents size : devicestatus , entries and treatments . Open Nightscout Admin tools . Depending on the collection you identified above, choose which of the following you want to cleanup: Cleanup: \u2301 You can cleanup (enter the number of days to keep) or delete your devices status: Same for Treatments : And Glucose entries . If you are reluctant to lose historical data you should consider opting for a paid database solution. Reports slow loading or timeout \u2301 Loopers might experience Nightscout taking an extremely long time or even timing out when creating reports due to the profiles collection database growing too big. Two solutions are available: Follow this video (set it full screen in 720p) to selectively delete profiles https://www.youtube.com/watch?v=iipp0MfPKNQ Delete all profiles in Atlas Log in to Atlas https://account.mongodb.com/account/login Select your cluster then COLLECTIONS Select the profile collection and click the bin icon to delete all profiles. Write profile in the box then click Drop Open your Nightscout and create a new profile (mind the time zone!), authenticate and save it. If you are using Loop, temporarily change a basal rate in Loop, and confirm your profiles now show up in Nightscout.","title":"Troubleshooting"},{"location":"troubleshoot/troublehoot/#overall-third-party-services","text":"APPLIES TO: DIY Nightscout For Nightscout as a service contact directly support at t1pal.com or use the Get Support links.","title":"Overall third party services"},{"location":"troubleshoot/troublehoot/#before-troubleshooting","text":"Check the services you're using. Dexcom: https://status.dexcom.com/ Carelink US: https://carelink.minimed.com/ Carelink non-US: https://carelink.minimed.eu/app/login GitHub: https://www.githubstatus.com/ Heroku: https://status.heroku.com/ Atlas: https://status.cloud.mongodb.com/","title":"Before troubleshooting"},{"location":"troubleshoot/troublehoot/#github-and-heroku","text":"","title":"GitHub and Heroku"},{"location":"troubleshoot/troublehoot/#a-valid-github-directory-could-not-be-found","text":"When trying to deploy a new Nightscout site, this message appears when clicking Deploy to Heroku . Change browser and retry.","title":"A valid GitHub Directory could not be found."},{"location":"troubleshoot/troublehoot/#cannot-find-cgm-remote-monitor-in-heroku-no-github-source-visible","text":"When updating Nightscout, cgm-remote-monitor doesn't appear automatically in Heroku under your repository name. When updating Nightscout, your repository name doesn't appear in Manual Deploy so that you can't select the master branch. Disconnect and re- Connect like this: If it doesn't help try to re-authorize as explained below:","title":"Cannot find cgm-remote-monitor in Heroku / No GitHub source visible"},{"location":"troubleshoot/troublehoot/#cannot-find-cgm-remote-monitor-in-heroku-item-cannot-be-retrieved","text":"When updating Nightscout, cgm-remote-monitor doesn't appear automatically in Heroku under your repository name and an error message appears when you try to connect to GitHub. In Heroku, go to Account Settings Select Applications and click Re-authorize Click Authorize GitHub in the pop-up. If it doesn't help, you can also try to Revoke access ... before going back to Re- Connect your GitHub account. This is necessary if someone else did setup Nightscout for you and left his own GitHub connected to your Heroku account.","title":"Cannot find cgm-remote-monitor in Heroku: Item cannot be retrieved"},{"location":"troubleshoot/troublehoot/#atlas","text":"","title":"Atlas"},{"location":"troubleshoot/troublehoot/#limit-of-one-free-cluster","text":"When creating a new site or migrating (usually not the first attempt), when reaching Target Cluster . Click the leaf top left in your Atlas account. Look at the Project Name you wanted to use when creating your new cluster, it shouldn't contain a cluster yet (like the example below, I tried to create a new Nightscout site but there is already a cluster inside the project I wanted to use). You can't have two clusters in a free project. Click your Project Name . This should not happen in normal conditions. Before deleting a cluster, check it doesn't contain your data! Click on Collections in the cluster you selected. Click on entries In the case there is data, like in the example below, don't use this cluster . Leave it like this and create a new one. If there no data , you can safely delete it. In this cluster you want to delete click ... then Terminate Copy the cluster name to confirm then click Terminate Wait until the operation completes. You can now use this project name to create a new site.","title":"Limit of one free cluster."},{"location":"troubleshoot/troublehoot/#nightscout-page-doesnt-open","text":"","title":"Nightscout page doesn't open"},{"location":"troubleshoot/troublehoot/#application-error","text":"Update Nightscout to latest release . It might not fix your issue but it will help find a solution. If you didn't migrate your Heroku database from mLab to Atlas create a new Atlas database . If you didn't migrate from Azure to Heroku create a new site create a new Nightscout site with Heroku . If you're creating a new Nightscout site, it might have failed because of a wrong connection string. Delete your Heroku app and deploy again after checking the Atlas connection string is correct. If your site is already up to date:","title":"Application Error"},{"location":"troubleshoot/troublehoot/#restart-all-dynos","text":"Log in Heroku, go to Settings , More , Restart all dynos .","title":"Restart all dynos"},{"location":"troubleshoot/troublehoot/#nightscout-stopped-working-after-a-few-weeks","text":"Same screen than above but you received a mail from Heroku telling you you're out of dyno hours... Check your remaining dyno hours in Heroku, click on your profile picture top right and select Account Settings , then Billing . An account without credit card information has 550 free dyno hours, with credit card information 1000.","title":"Nightscout stopped working after a few weeks"},{"location":"troubleshoot/troublehoot/#boot-error-unable-to-connect-to-mongo","text":"Look at this dedicated page .","title":"Boot Error - Unable to connect to Mongo"},{"location":"troubleshoot/troublehoot/#no-data-in-nightscout","text":"New Nightscout sites Check you database is not read only . Make sure your Nightscout time zone is correct.","title":"No data in Nightscout"},{"location":"troubleshoot/troublehoot/#dexcom-data-not-showing","text":"","title":"Dexcom data not showing"},{"location":"troubleshoot/troublehoot/#dexcom-share","text":"Make sure you have Dexcom Share turned ON in your Dexcom app. In the Dexcom app's main screen, find the triangle made of dots. If the dots are grey, you do not have Share turned on. Tap the triangle, and follow the directions to add a follower (yourself if you don't have someone else you'd like to invite) and turn on Share. If you are using a Dexcom system, and your data is not appearing in Nightscout, there are only a limited number of reasons for that. You should check your (1) Heroku settings and (2) Dexcom Share. NOTE: The #1 reason why BGs aren't showing is that you have mismatched password and user names in Heroku settings and Dexcom.","title":"Dexcom Share"},{"location":"troubleshoot/troublehoot/#heroku-settings","text":"Login to your Heroku account and from within Heroku Settings , click on the Reveal Config Vars Now from the Config Vars area, check the following (see screenshot below for reference): You must use the same BRIDGE_PASSWORD or BRIDGE_USER_NAME that your Dexcom mobile app is using. You must have bridge and careportal on the ENABLE line (you can have other values there...but don't forget these two). If you are outside the USA, you must add BRIDGE_SERVER set to EU in Heroku settings. Your careportal must be one word in the ENABLE line, sometimes autocorrect makes it two words. If using mmol , make sure you have spelled that value correctly in the DISPLAY_UNITS . One thing that can happen if you have an incorrect Dexcom login/password in your Share account settings and/or in your Nightscout BRIDGE settings is that Dexcom will lock your account...and you won't see CGM data in Nightscout. If you notice your CGM readings disappeared, but everything else is flowing...check your Heroku logs that are viewable by selecting \"View Logs\" from the drop-down menu underneath the \"More\" option. Do your logs have \"SSO authentication errors\" like in the red box highlighted above? If you do, then: Delete your BRIDGE entries within Heroku settings. Don't delete the variables, just delete the values of BRIDGE_PASSWORD and BRIDGE_USER_NAME. Wait 15 minutes and then follow the directions below. It is important to wait 15 minutes: the reason you can't log in right now is that your Dexcom account has a temporary lock from the passwords in the step above being incorrect. The temporary lock will expire after 10-15 minutes of giving the account login a break from the incorrect logins. So, definitely wait or else you'll just keep prolonging the issue. When you change these variables, Heroku restarts Nightscout. So now everything should work. About your Bridge password and user name The BRIDGE_PASSWORD and BRIDGE_USER_NAME are NOT visible from within your Dexcom mobile app or online account. The values of them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. If you have double-checked everything else that could be incorrect and BGs still aren't showing in Nightscout, then you likely have those Bridge values incorrect. To fix that, delete your Dexcom app (don't stop the session before deleting the app...just keep it going). Download the app again from the iPhone's App Store and login to the freshly-downloaded Dexcom app. Take note that deleting the app will not stop your session, your session will pick right back up once the transmitter pairs again. The BRIDGE_USER_NAME is not an email address. Use that exact same login now in your Heroku settings. You can leave your Loop's Share account info blank...you just need the transmitter ID going forward.","title":"Heroku Settings"},{"location":"troubleshoot/troublehoot/#dexcom-username-issue","text":"It seems that Dexcom share somewhere in its systems is not capable of using the username other than ordinary letters. By changing the username, this has been solved for everyone who has tried so far. If that doesn't work for you, please report it at https://github.com/nightscout/cgm-remote-monitor/issues/5608 or if you can comment on any Facebook post that linked to this site.","title":"Dexcom username issue"},{"location":"troubleshoot/troublehoot/#change-username","text":"Unfortunately, it is not possible to change the username of a Dexcom account. You have to create a whole new account.","title":"Change username"},{"location":"troubleshoot/troublehoot/#create-new-account","text":"You can only associate one email address with a Dexcom account, so it might be a good idea to create a new email address and associate it to your current account so that you can use your current email with the new account. Go to https://www.dexcom.com and look for where to create accounts. Follow the instructions to create a new account. The alternative is to delete the old account. But do not do that. It may be good to be able to go back and retrieve historical data. Make sure the new username contains only letters. It is better to stick to a-z. We know that the period . underscore _ and at @ characters creates problems, but we do not know which other characters can create problems.","title":"Create new account"},{"location":"troubleshoot/troublehoot/#reinstall-dexcom-transmitter-app","text":"When you install the Dexcom app, it is linked to a Dexcom account. Unfortunately, there is no way to switch accounts. What you have to do is simply uninstall the app and reinstall it. In principle, it is the same procedure as changing phone. Of course, this time you should log in with the new account. Write down the current Transmitter ID. You can find the ID if you look in settings in the Dexcom app. Uninstall the Dexcom app Reinstall the Dexcom app Log in with your new account Follow the instructions in the app. For G6 do not select sensor code. The sensor code is already saved on your old transmitter. Enter the transmitter ID and wait for pairing Answer yes to the question \"have you inserted sensor\" You then have to re-invite your followers.","title":"Reinstall Dexcom Transmitter app"},{"location":"troubleshoot/troublehoot/#nightscout","text":"Check your Heroku settings match your new credentials (see above)","title":"Nightscout"},{"location":"troubleshoot/troublehoot/#dexcom-or-carelink-data-stopping-after-a-while","text":"Note CareLink with mmconnect data source stopped functioning for most . Remove the mmconnect plugin from ENABLE if you use Heroku . First verify you can see your BG in Clarity. If data is present open Heroku and check you app didn't fall asleep. A sleeping app might be due to your Heroku free plan: a Hobby plan makes the app never sleep. https://www.heroku.com/pricing Another reason for a sleeping app can be due to a failure to obtain data from Dexcom Share, check the logs to understand the reasons. UpTime Robot Using an uptime robot with a bad password, or other issues originating from Nightscout can lead to a locked account (Dexcom) or Heroku addresses ban. This is not a recommended solution as it might generate a global Heroku IP blacklist lock that could propagate to all other users. If you use Nightscout, uploading data in the cloud or even just having a browser or an app downloading data should be enough to keep your app awake.","title":"Dexcom or CareLink data stopping after a while"},{"location":"troubleshoot/troublehoot/#error-code-instead-of-a-bg-value","text":"Nightscout implements Dexcom error codes as listed below: Code Corresponding error ?SN Sensor not active ?MD Minimal deviation ?NA No antenna ?NC Sensor not calibrated ?CD Counts deviation ?AD Absolute deviation ??? Power deviation ?RF Bad RF","title":"Error code instead of a BG value"},{"location":"troubleshoot/troublehoot/#data-timing-issues","text":"","title":"Data timing issues"},{"location":"troubleshoot/troublehoot/#basal-is-shifted-in-time","text":"Check the time zone is correct for your currently active profile in your Nightscout Profile editor .","title":"Basal is shifted in time"},{"location":"troubleshoot/troublehoot/#data-in-the-future","text":"Check you don't have data in the future with the Admin tools . Remove them if existing. If this isn't working, or shows no future data, check in Atlas Open your Nightscout cluster and select Collections In Entries type {date:-1} and click Find Delete the entries in the future (manually) with the bin icon","title":"Data in the future"},{"location":"troubleshoot/troublehoot/#database-full","text":"Free databases like M0 Sandbox provided by Atlas will only hold a limited amount of data (512MB) and you will eventually need to manually cleanup. You can extend the capacity to 2 and 5GB paying an M2 or M5 Shared cluster. Make sure your Nightscout site has Database Size enabled to monitor database capacity. Look here for more information on this plugin. Check in Atlas Open your Nightscout cluster and select Collections Click your database name (hidden left). Check the DATABASE SIZE is indeed close to or at the limit then look at these three collections Documents size : devicestatus , entries and treatments . Open Nightscout Admin tools . Depending on the collection you identified above, choose which of the following you want to cleanup:","title":"Database full"},{"location":"troubleshoot/troublehoot/#cleanup","text":"You can cleanup (enter the number of days to keep) or delete your devices status: Same for Treatments : And Glucose entries . If you are reluctant to lose historical data you should consider opting for a paid database solution.","title":"Cleanup:"},{"location":"troubleshoot/troublehoot/#reports-slow-loading-or-timeout","text":"Loopers might experience Nightscout taking an extremely long time or even timing out when creating reports due to the profiles collection database growing too big. Two solutions are available: Follow this video (set it full screen in 720p) to selectively delete profiles https://www.youtube.com/watch?v=iipp0MfPKNQ Delete all profiles in Atlas Log in to Atlas https://account.mongodb.com/account/login Select your cluster then COLLECTIONS Select the profile collection and click the bin icon to delete all profiles. Write profile in the box then click Drop Open your Nightscout and create a new profile (mind the time zone!), authenticate and save it. If you are using Loop, temporarily change a basal rate in Loop, and confirm your profiles now show up in Nightscout.","title":"Reports slow loading or timeout"},{"location":"update/newdatabase/","text":"Attach a new Atlas database to your Heroku app \u2301 APPLIES TO: + In December 2020, mLab stopped operations. If you were using Heroku DIY and didn't migrate your database from mLab to Atlas you need to create a new database for your Nightscout site. If you prefer to follow a video Use this easy guide . Make sure to use only letters and numbers in database name and password. Step 1: Create an Atlas account \u2301 Click here: https://www.mongodb.com/cloud/atlas and click Start Free Enter information then click Get Started Free Select Create a cluster in Shared Clusters (FREE) Leave all default values and click Create Cluster Atlas will create your default cluster, wait until completion\u2026 (can take more than 3 minutes) Click on CONNECT Click on Allow Access from Anywhere If you don't allow access from anywhere (IP 0.0.0.0/0) Nightscout will not be able to access your database. Click on Add IP Address Add a database username (for example nightscout ) and a database password (in the example below soo5ecret ). Database credentials Do not use your Atlas account credentials. Do not use special characters: only letters and numbers. Write down these credentials in the boxes below (yes, in this browser window you're reading now, unless you're reading a printed version). You\u2019ll need them later. Database password: Database username: Then click Create Database User . Click on Choose a connection method Select Connect your application Copy the connection string: click Copy . Paste the string in the box below. It should be similar to this ( xxxxx will be different): mongodb+srv://nightscout:<password>@cluster0.xxxxx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority Invent a name for your database, this is not a critical information (for example mycgmic ), note that default is myFirstDatabase . Database Name: Click the Generate button (just here below this line: in this browser window you're reading): Generate The connection string will appear here var bAtlas; var sdB, sPwd; var sFinalString = \"Not defined yet\"; function Generate() { var sString = sFinalString; bAtlas=0; var sString = \"Looks good!\"; var sAtlas = document.getElementById(\"myAtlas\").value; sPwd = document.getElementById(\"myPwd\").value; sdB = document.getElementById(\"mydB\").value; var iAS = sAtlas.search(\"://\"); if(iAS!=11) { sString = \"Atlas URI should start with mongodb+srv://\"; } else { var iAP = sAtlas.search(\"<password>\"); if(iAP==-1) { sString = \"Atlas URI should contain &lt;password&gt;\"; } else { var iAD = sAtlas.search(\"myFirstDatabase\"); if(iAD==-1) { sString = \"Atlas URI should contain myFirstDatabase\"; } else { bAtlas=1; sString = sAtlas.substring(0,iAP); sFinalString = sString.concat(sPwd, sAtlas.substring(iAP+10, iAD)); sString = sAtlas.substring(iAP+10, iAD); sFinalString = sFinalString.concat(sdB, sAtlas.substring(iAD+15)); } } } if(bAtlas) document.getElementById(\"result\").innerHTML = sFinalString; else document.getElementById(\"result\").innerHTML = sString; } Warning Keep this string safely aside, it is called your MONGODB_URI If you want to do it manually: replace <password> with your database password as noted previously (in the example below soo5ecret ) and <dbname> by any text you want, say mycgmic for example. The result will be like this: mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/mycgmic?retryWrites=true&w=majority Note There are no < and > characters in the final string, neither for password nor for database name. Step 2: Add your connection string to Heroku \u2301 Access your variables opening Heroku . Select your app Click Settings Scroll down and click Reveal Config Vars Scroll down Config Vars until you\u2019ll see KEY and VALUE In KEY write MONGODB_URI and paste in the field VALUE the connection string you obtained above from Atlas. Click Add This new key will be inserted at the bottom of the list. Step 3: Update Nightscout \u2301 Update your Nightscout to latest release! Versions older than 13.0.x won't probably run. Versions 13.x are not optimized for the Atlas database. Check your profile time zone is correct.","title":"Attach a new Atlas database"},{"location":"update/newdatabase/#attach-a-new-atlas-database-to-your-heroku-app","text":"APPLIES TO: + In December 2020, mLab stopped operations. If you were using Heroku DIY and didn't migrate your database from mLab to Atlas you need to create a new database for your Nightscout site. If you prefer to follow a video Use this easy guide . Make sure to use only letters and numbers in database name and password.","title":"Attach a new Atlas database to your Heroku app"},{"location":"update/newdatabase/#step-1-create-an-atlas-account","text":"Click here: https://www.mongodb.com/cloud/atlas and click Start Free Enter information then click Get Started Free Select Create a cluster in Shared Clusters (FREE) Leave all default values and click Create Cluster Atlas will create your default cluster, wait until completion\u2026 (can take more than 3 minutes) Click on CONNECT Click on Allow Access from Anywhere If you don't allow access from anywhere (IP 0.0.0.0/0) Nightscout will not be able to access your database. Click on Add IP Address Add a database username (for example nightscout ) and a database password (in the example below soo5ecret ). Database credentials Do not use your Atlas account credentials. Do not use special characters: only letters and numbers. Write down these credentials in the boxes below (yes, in this browser window you're reading now, unless you're reading a printed version). You\u2019ll need them later. Database password: Database username: Then click Create Database User . Click on Choose a connection method Select Connect your application Copy the connection string: click Copy . Paste the string in the box below. It should be similar to this ( xxxxx will be different): mongodb+srv://nightscout:<password>@cluster0.xxxxx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority Invent a name for your database, this is not a critical information (for example mycgmic ), note that default is myFirstDatabase . Database Name: Click the Generate button (just here below this line: in this browser window you're reading): Generate The connection string will appear here var bAtlas; var sdB, sPwd; var sFinalString = \"Not defined yet\"; function Generate() { var sString = sFinalString; bAtlas=0; var sString = \"Looks good!\"; var sAtlas = document.getElementById(\"myAtlas\").value; sPwd = document.getElementById(\"myPwd\").value; sdB = document.getElementById(\"mydB\").value; var iAS = sAtlas.search(\"://\"); if(iAS!=11) { sString = \"Atlas URI should start with mongodb+srv://\"; } else { var iAP = sAtlas.search(\"<password>\"); if(iAP==-1) { sString = \"Atlas URI should contain &lt;password&gt;\"; } else { var iAD = sAtlas.search(\"myFirstDatabase\"); if(iAD==-1) { sString = \"Atlas URI should contain myFirstDatabase\"; } else { bAtlas=1; sString = sAtlas.substring(0,iAP); sFinalString = sString.concat(sPwd, sAtlas.substring(iAP+10, iAD)); sString = sAtlas.substring(iAP+10, iAD); sFinalString = sFinalString.concat(sdB, sAtlas.substring(iAD+15)); } } } if(bAtlas) document.getElementById(\"result\").innerHTML = sFinalString; else document.getElementById(\"result\").innerHTML = sString; } Warning Keep this string safely aside, it is called your MONGODB_URI If you want to do it manually: replace <password> with your database password as noted previously (in the example below soo5ecret ) and <dbname> by any text you want, say mycgmic for example. The result will be like this: mongodb+srv://nightscout:soo5ecret@cluster0.xxxxx.mongodb.net/mycgmic?retryWrites=true&w=majority Note There are no < and > characters in the final string, neither for password nor for database name.","title":"Step 1: Create an Atlas account"},{"location":"update/newdatabase/#step-2-add-your-connection-string-to-heroku","text":"Access your variables opening Heroku . Select your app Click Settings Scroll down and click Reveal Config Vars Scroll down Config Vars until you\u2019ll see KEY and VALUE In KEY write MONGODB_URI and paste in the field VALUE the connection string you obtained above from Atlas. Click Add This new key will be inserted at the bottom of the list.","title":"Step 2: Add your connection string to Heroku"},{"location":"update/newdatabase/#step-3-update-nightscout","text":"Update your Nightscout to latest release! Versions older than 13.0.x won't probably run. Versions 13.x are not optimized for the Atlas database. Check your profile time zone is correct.","title":"Step 3: Update Nightscout"},{"location":"update/redeploy/","text":"Redeploy your repository \u2301 APPLIES TO: Azure Users As of 0.12, Nightscout no longer readily supports the free Azure platform. It is recommended that you create a new site with Heroku . Multiple Heroku apps and accounts linked to one Github If you delete and redeploy you might need to connect again cgm-remote-monitor . Automatic deploy might not be maintained after a redeploy. If you prefer to follow a video Use this one . Step 1. Cleanup Github \u2301 Click here to log in at GitHub: https://github.com/login . Enter your username or email and your password. Click Sign in Select your own cgm-remote-monitor project (not nightscout/cgm-remote-monitor ) Click Settings Scroll down to Danger zone and click Delete this repository Copy and paste your full repository name to confirm then click I understand... Click this link to go to the official repository: https://github.com/nightscout/cgm-remote-monitor Click on Fork Wait for completion then leave GitHub open. Step 2: Deploy in Heroku \u2301 Log in Heroku https://id.heroku.com/login Select your app (hidden in yellow) Click on Deploy Verify Heroku is connected to GitHub, if not, click Connect to GitHub If Heroku is not connected to GitHub, scroll down and click Connect to GitHub , if a popup window opens and requires authorization, click Authorize Heroku Type cgm-remote-monitor and click Search then click Connect If you have trouble connecting your app, click Disconnect and reconnect it as shown above Scroll down to the bottom of the page, select the master branch and click Deploy Branch Build will start and information will scroll in the log window. Do not leave the page, do not interfere and wait for completion. It might take more than 10 minutes. Interrupting the process will lead to a broken site and you'll need to restart deployment. Wait until the deploy process completes and click View (if nothing happens click Manage App then upper right Open App ) Your site will open and should be at the latest version. Check your profile time zone is correct. You're done!","title":"Redeploying"},{"location":"update/redeploy/#redeploy-your-repository","text":"APPLIES TO: Azure Users As of 0.12, Nightscout no longer readily supports the free Azure platform. It is recommended that you create a new site with Heroku . Multiple Heroku apps and accounts linked to one Github If you delete and redeploy you might need to connect again cgm-remote-monitor . Automatic deploy might not be maintained after a redeploy. If you prefer to follow a video Use this one .","title":"Redeploy your repository"},{"location":"update/redeploy/#step-1-cleanup-github","text":"Click here to log in at GitHub: https://github.com/login . Enter your username or email and your password. Click Sign in Select your own cgm-remote-monitor project (not nightscout/cgm-remote-monitor ) Click Settings Scroll down to Danger zone and click Delete this repository Copy and paste your full repository name to confirm then click I understand... Click this link to go to the official repository: https://github.com/nightscout/cgm-remote-monitor Click on Fork Wait for completion then leave GitHub open.","title":"Step 1. Cleanup Github"},{"location":"update/redeploy/#step-2-deploy-in-heroku","text":"Log in Heroku https://id.heroku.com/login Select your app (hidden in yellow) Click on Deploy Verify Heroku is connected to GitHub, if not, click Connect to GitHub If Heroku is not connected to GitHub, scroll down and click Connect to GitHub , if a popup window opens and requires authorization, click Authorize Heroku Type cgm-remote-monitor and click Search then click Connect If you have trouble connecting your app, click Disconnect and reconnect it as shown above Scroll down to the bottom of the page, select the master branch and click Deploy Branch Build will start and information will scroll in the log window. Do not leave the page, do not interfere and wait for completion. It might take more than 10 minutes. Interrupting the process will lead to a broken site and you'll need to restart deployment. Wait until the deploy process completes and click View (if nothing happens click Manage App then upper right Open App ) Your site will open and should be at the latest version. Check your profile time zone is correct. You're done!","title":"Step 2: Deploy in Heroku"},{"location":"update/upd_stack/","text":"Updating the Heroku stack \u2301 APPLIES TO: It is good practice to maintain your Heroku stack up to date. Either when you receive an email from Heroku or when you update your Nightscout site (which is also a good habit). Log in Heroku https://id.heroku.com/login Select your app Click Settings If present select Upgrade Stack Confirm the upgrade Now you need to deploy to upgrade the stack Click on Deploy Scroll down to the bottom of the page, select the master branch and click Deploy Branch Note: if you can't select the master branch or Deploy Branch doesn't do anything update your Nightscout site . Build will start and information will scroll in the log window. Do not leave the page, do not interfere and wait for completion. It might take more than 10 minutes. Interrupting the process will lead to a broken site and you'll need to restart deployment. Wait until the deploy process completes and click View (if nothing happens click Manage App then upper right Open App ) You have upgraded your Heroku stack.","title":"Update Heroku Stack"},{"location":"update/upd_stack/#updating-the-heroku-stack","text":"APPLIES TO: It is good practice to maintain your Heroku stack up to date. Either when you receive an email from Heroku or when you update your Nightscout site (which is also a good habit). Log in Heroku https://id.heroku.com/login Select your app Click Settings If present select Upgrade Stack Confirm the upgrade Now you need to deploy to upgrade the stack Click on Deploy Scroll down to the bottom of the page, select the master branch and click Deploy Branch Note: if you can't select the master branch or Deploy Branch doesn't do anything update your Nightscout site . Build will start and information will scroll in the log window. Do not leave the page, do not interfere and wait for completion. It might take more than 10 minutes. Interrupting the process will lead to a broken site and you'll need to restart deployment. Wait until the deploy process completes and click View (if nothing happens click Manage App then upper right Open App ) You have upgraded your Heroku stack.","title":"Updating the Heroku stack"},{"location":"update/update/","text":"Updating Your Site to the Latest Version \u2301 APPLIES TO: Updating your website to the latest version (see here which is the current released version ) is easy with the update tool linked below. Requirements \u2301 This version of Nightscout will probably not run on anything older than these versions/platforms: Android 4 iOS 9 Chrome 68 Edge 17 Firefox 61 Safari 10 (macOS 10.12) Opera 54 Internet Explorer: none Azure Users \u2301 As of 0.12, Nightscout no longer readily supports the free Azure platform. It is recommended that you create a new site with Heroku . Step1: Update your repository in GitHub \u2301 Click here to log in at GitHub: https://github.com/login . Enter your username or email and your password. Click Sign in Select your own cgm-remote-monitor project (not nightscout/cgm-remote-monitor ) Your repository will open, note your GitHub username (hidden below in yellow). Scroll down until you see the Nightscout logo. Click Update your site Enter your GitHub username and click Check for updates If an update is available click Continue updating at GitHub Make sure you see GitHub user located! else check your username. If you know an update is available but you see Repo is Up to date , try the alternative method. A pop-up will open, just click OK (you can read the contents if you want, but this is explained below, so just click OK) Now comes the tricky part. Don't try to update cgm-remote-monitor with your own project! Make sure the left hand side repository is yours (name hidden in yellow) and the right hand side is nightscout/cgm-remote-monitor . Click Create pull request . A pull request opens. Last chance to check the left hand side repository is yours (name hidden in yellow) and right hand side is nightscout/cgm-remote-monitor , write a comment in the field (example Update or whatever you like) Scroll down and click Create pull request Scroll all the way down (it might be far away) and click Merge pull request Click Confirm merge A new line will appear in the pull requests log showing merge succeeded Your GitHub repository will show you're one commit ahead of the released version You have successfully updated your GitHub repository, now let's deploy it in Heroku. Step2: Deploy in Heroku \u2301 Log in Heroku https://id.heroku.com/login Select your app (hidden in yellow) Click on Deploy Verify Heroku is connected to GitHub, if not, click Connect to GitHub If Heroku is not connected to GitHub, scroll down and click Connect to GitHub , if a popup window opens and requires authorization, click Authorize Heroku Verify your app cgm-remote-monitor is connected to GitHub If it isn't, In Connect to GitHub , type cgm-remote-monitor and click Search then click Connect If you have trouble connecting your app, click Disconnect and reconnect it as shown above Scroll down to the bottom of the page, select the master branch and click Deploy Branch Build will start and information will scroll in the log window. Do not leave the page, do not interfere and wait for completion. It might take more than 10 minutes. Interrupting the process will lead to a broken site and you'll need to restart deployment. Wait until the deploy process completes and click View (if nothing happens click Manage App then upper right Open App ) Your site will open and should be at the latest version. Check your profile time zone is correct. You're done! Else... Redeploy \u2301 If you ran into trouble, try the Redeploy method","title":"Updating your site"},{"location":"update/update/#updating-your-site-to-the-latest-version","text":"APPLIES TO: Updating your website to the latest version (see here which is the current released version ) is easy with the update tool linked below.","title":"Updating Your Site to the Latest Version"},{"location":"update/update/#requirements","text":"This version of Nightscout will probably not run on anything older than these versions/platforms: Android 4 iOS 9 Chrome 68 Edge 17 Firefox 61 Safari 10 (macOS 10.12) Opera 54 Internet Explorer: none","title":"Requirements"},{"location":"update/update/#azure-users","text":"As of 0.12, Nightscout no longer readily supports the free Azure platform. It is recommended that you create a new site with Heroku .","title":"Azure Users"},{"location":"update/update/#step1-update-your-repository-in-github","text":"Click here to log in at GitHub: https://github.com/login . Enter your username or email and your password. Click Sign in Select your own cgm-remote-monitor project (not nightscout/cgm-remote-monitor ) Your repository will open, note your GitHub username (hidden below in yellow). Scroll down until you see the Nightscout logo. Click Update your site Enter your GitHub username and click Check for updates If an update is available click Continue updating at GitHub Make sure you see GitHub user located! else check your username. If you know an update is available but you see Repo is Up to date , try the alternative method. A pop-up will open, just click OK (you can read the contents if you want, but this is explained below, so just click OK) Now comes the tricky part. Don't try to update cgm-remote-monitor with your own project! Make sure the left hand side repository is yours (name hidden in yellow) and the right hand side is nightscout/cgm-remote-monitor . Click Create pull request . A pull request opens. Last chance to check the left hand side repository is yours (name hidden in yellow) and right hand side is nightscout/cgm-remote-monitor , write a comment in the field (example Update or whatever you like) Scroll down and click Create pull request Scroll all the way down (it might be far away) and click Merge pull request Click Confirm merge A new line will appear in the pull requests log showing merge succeeded Your GitHub repository will show you're one commit ahead of the released version You have successfully updated your GitHub repository, now let's deploy it in Heroku.","title":"Step1: Update your repository in GitHub"},{"location":"update/update/#step2-deploy-in-heroku","text":"Log in Heroku https://id.heroku.com/login Select your app (hidden in yellow) Click on Deploy Verify Heroku is connected to GitHub, if not, click Connect to GitHub If Heroku is not connected to GitHub, scroll down and click Connect to GitHub , if a popup window opens and requires authorization, click Authorize Heroku Verify your app cgm-remote-monitor is connected to GitHub If it isn't, In Connect to GitHub , type cgm-remote-monitor and click Search then click Connect If you have trouble connecting your app, click Disconnect and reconnect it as shown above Scroll down to the bottom of the page, select the master branch and click Deploy Branch Build will start and information will scroll in the log window. Do not leave the page, do not interfere and wait for completion. It might take more than 10 minutes. Interrupting the process will lead to a broken site and you'll need to restart deployment. Wait until the deploy process completes and click View (if nothing happens click Manage App then upper right Open App ) Your site will open and should be at the latest version. Check your profile time zone is correct. You're done! Else...","title":"Step2: Deploy in Heroku"},{"location":"update/update/#redeploy","text":"If you ran into trouble, try the Redeploy method","title":"Redeploy"},{"location":"uploader/setup/","text":"Uploaders setup \u2301 Note You usually should express the Nightscout URL in secure https:// , not only http://. (Unless you set INSECURE_USE_HTTP to true ) APPLIES TO: Your Nightscout URL defined in Heroku by your App name, is the one that shows when you open your Nightscout site in a browser. Your Nightscout password, is the API_SECRET variable you can find editing your Heroku variables like this . APPLIES TO: You will find the Uploader url and Api Secret required to configure your uploader here . Dexcom \u2301 You need at least one follower to use Dexcom Share. Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing data using Dexcom Share and the bridge plugin. On your master phone, touch the Share icon, enable Sharing. If you have no follower, add one. You can also invite yourself. APPLIES TO: In order to use the Dexcom Share servers to upload to Nightscout, you need to setup (and if not present add) the following variables in Heroku: From Settings , click on the Reveal Config Vars Verify, update or add these variables: You need to add bridge in the ENABLE variable. Do not delete other entries, just add bridge after a space. MOST COMMON ERRORS The BRIDGE_PASSWORD and BRIDGE_USER_NAME are NOT visible from within your Dexcom app or online account. The values for them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. The BRIDGE_USER_NAME is not an email address. The most common error on initial Nightscout setups is that people incorrectly use an old account or an old password. To test your username and password, go to Dexcom's Clarity page (check here for USA accounts and here for the others ) and try logging into your Dexcom account. If your account info doesn't let you in, or you don't see data in your Clarity account...then you need to figure out your actual credentials before moving ahead. Password Some people have had problems with their bridge connecting when their Dexcom passwords are entirely numeric. If you have connection issues in that case, try changing your password to something with a mix of numbers and letters. APPLIES TO: For hosted Nightscout put your Dexcom credentials in Dexcom Bridge . Medtronic CareLink \u2301 This plugin is NOT functional anymore with Heroku. You can use an Android phone with a private version of xDrip+ , a computer or a Raspberry Pi to bridge CareLink to Nightscout. Plugin setup documented here with additional fields for your pump. Medtronic 600 Series with uploader \u2301 You can also use this QR code generator and the menu item Scan NS-Autoconfig QR Code to copy the information. For hosted Nightscout you'll find the QR code generator in Uploaders , select the HTTP tab. You might want to setup additional fields for your pump. Facebook Group Nightscout for Medtronic xDrip+ \u2301 Mind the syntax! https://API_SECRET@mysite.herokuapp.com/api/v1/ Facebook Group xDrip For hosted Nightscout use the QR code from Uploaders after selecting the XDrip tab. Glimp \u2301 Diabox \u2301 LinkBluCon \u2301 Tomato \u2301 Spike \u2301 Look here . Facebook group Spike App xDrip4iOS \u2301 Facebook group xDrip4iOS","title":"Configure your Uploader"},{"location":"uploader/setup/#uploaders-setup","text":"Note You usually should express the Nightscout URL in secure https:// , not only http://. (Unless you set INSECURE_USE_HTTP to true ) APPLIES TO: Your Nightscout URL defined in Heroku by your App name, is the one that shows when you open your Nightscout site in a browser. Your Nightscout password, is the API_SECRET variable you can find editing your Heroku variables like this . APPLIES TO: You will find the Uploader url and Api Secret required to configure your uploader here .","title":"Uploaders setup"},{"location":"uploader/setup/#dexcom","text":"You need at least one follower to use Dexcom Share. Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing data using Dexcom Share and the bridge plugin. On your master phone, touch the Share icon, enable Sharing. If you have no follower, add one. You can also invite yourself. APPLIES TO: In order to use the Dexcom Share servers to upload to Nightscout, you need to setup (and if not present add) the following variables in Heroku: From Settings , click on the Reveal Config Vars Verify, update or add these variables: You need to add bridge in the ENABLE variable. Do not delete other entries, just add bridge after a space. MOST COMMON ERRORS The BRIDGE_PASSWORD and BRIDGE_USER_NAME are NOT visible from within your Dexcom app or online account. The values for them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. The BRIDGE_USER_NAME is not an email address. The most common error on initial Nightscout setups is that people incorrectly use an old account or an old password. To test your username and password, go to Dexcom's Clarity page (check here for USA accounts and here for the others ) and try logging into your Dexcom account. If your account info doesn't let you in, or you don't see data in your Clarity account...then you need to figure out your actual credentials before moving ahead. Password Some people have had problems with their bridge connecting when their Dexcom passwords are entirely numeric. If you have connection issues in that case, try changing your password to something with a mix of numbers and letters. APPLIES TO: For hosted Nightscout put your Dexcom credentials in Dexcom Bridge .","title":"Dexcom"},{"location":"uploader/setup/#medtronic-carelink","text":"This plugin is NOT functional anymore with Heroku. You can use an Android phone with a private version of xDrip+ , a computer or a Raspberry Pi to bridge CareLink to Nightscout. Plugin setup documented here with additional fields for your pump.","title":"Medtronic CareLink"},{"location":"uploader/setup/#medtronic-600-series-with-uploader","text":"You can also use this QR code generator and the menu item Scan NS-Autoconfig QR Code to copy the information. For hosted Nightscout you'll find the QR code generator in Uploaders , select the HTTP tab. You might want to setup additional fields for your pump. Facebook Group Nightscout for Medtronic","title":"Medtronic 600 Series with uploader"},{"location":"uploader/setup/#xdrip","text":"Mind the syntax! https://API_SECRET@mysite.herokuapp.com/api/v1/ Facebook Group xDrip For hosted Nightscout use the QR code from Uploaders after selecting the XDrip tab.","title":"xDrip+"},{"location":"uploader/setup/#glimp","text":"","title":"Glimp"},{"location":"uploader/setup/#diabox","text":"","title":"Diabox"},{"location":"uploader/setup/#linkblucon","text":"","title":"LinkBluCon"},{"location":"uploader/setup/#tomato","text":"","title":"Tomato"},{"location":"uploader/setup/#spike","text":"Look here . Facebook group Spike App","title":"Spike"},{"location":"uploader/setup/#xdrip4ios","text":"Facebook group xDrip4iOS","title":"xDrip4iOS"},{"location":"uploader/uploaders/","text":"Supported Uploaders \u2301 An Uploader is a mechanism or system for uploading the CGM data from your sensor to your Nightscout site. This can be either an electronic solution (usually for older devices), or just a simple app installed on your phone (for most newer systems) that connects to the sensor/pump and then uploads this data. The type of Uploader needed will depend on the type of CGM system being used. In this page, we will break the different systems down by manufacturer, then further by sensor type. Once you are clear about the type of sensor and upload system you will be using, you can find detailed configuration information for each one here . Dexcom \u2301 Dexcom G5/G6 \u2301 If you are using the Dexcom G5 and G6 sensors connected to the Dexcom app on your phone, it will upload directly to the Dexcom servers (also still known as \"Dexcom Share\") and you won't need to use any extra uploader or master device. For this to work, Nightscout must be configured to use the bridge plug-in and will then automatically pull the CGM information directly from the Dexcom servers in real-time. Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing data using Dexcom Share and the bridge plugin. Please note that at this time (early 2021), the Dexcom G5 system is effectively obsolete but many people are still using stocks of old sensors and transmitters. If you don't want to use the official Dexcom apps, then you can use open-source software apps for your Dexcom sensor to connect, display, alarm and also upload to Nightscout: Android : xDrip+ for G4, G5 and G6. iOS : Spike or xDrip4iOS for G4, G5 and older G6 transmitters ( not Firefly ) Dexcom \"Firefly\" Transmitters Any transmitter made before Dexcom switched to the \"firefly\" range of G6 transmitters is compatible with Spike or xDrip4iOS . Although there are slight physical differences, the easiest way to check is to look at the Transmitter ID. If it starts with 80xxxx or 81yxxx (where y is a number) then it is a pre-Firefly transmitter and is compatible. Most of the useable transmitters that fall into this category at the present time (early 2021) are generally rebatteried or rechargeable/modified 80xxxx or 81xxxx transmitters. Loop and AAPS will upload your data directly to Nightscout and will act as uploaders. Dexcom G4 (now obsolete) \u2301 The Dexcom G4 system is now Dexcom G4 requires additional hardware, like a Wixel , an xDripKit or a compatible Android phone with an OTG cable connected to the receiver. Dexcom G4 Platinum (Share) requires you to carry the receiver to forward data to the uploader. Medtronic \u2301 If your sensor system is able to directly upload to CareLink then Nightscout might be able to get the information directly from the cloud using the mmconnect plugin. Unfortunately, this is not possible anymore using Heroku without a bridge device. You can use an Android phone with a private version of xDrip+ , a computer or a Raspberry Pi to bridge CareLink to Nightscout. If this isn't an option and your sensor/transmitter is connected to your pump (Medtronic 600 series pumps), then you'll need an Android phone connected with an OTG cable to your pump's connected glucose meter. The phone will need to run the 600 Series Uploader app. Glucomen Day \u2301 You can forward your data from GlucoLog Web using an AWS bridge documented here . Tandem t:slim X2 \u2301 You can synchronize your treatments one way from your Tandem Diabetes t:connect web/mobile application to Nightscout using a bridge app running via Pipenv or Docker as documented here . Abbott Freestyle Libre \u2301 Non Bluetooth-enabled Freestyle Libre sensors will need an additional transmitter device fixed on top of the sensor to send readings to the uploader device. In release order here are some transmitter options: LimiTTer , BlueReader, Blucon, MiaoMiao, Bubble, and Droplet. Transmitter Compatibility The Libre environment is complex and evolves quickly. Before buying a transmitter, please join the respective Facebook groups and make sure that the transmitter you are planning to buy is compatible with your sensor type. Most of the transmitters have their own proprietary apps. Nearly all of these support the uploading of data to Nightscout (LinkBluCon, Tomato, Diabox, eDroplet, ...). Again, check the transmitter manufacturer's website and the relevant Facebook support groups for information. Open-source apps such as xDrip+ , Spike and xDrip4iOS also support most of the above transmitter devices. You can connect to the Libre 2 sensor ( EU only ) without an additional transmitter using xDrip+ , Diabox or xDrip4iOS . Eversense \u2301 In order to get data from the Eversense CGM system, you will need to use the ESEL app running on an Android phone.","title":"How do I upload my data?"},{"location":"uploader/uploaders/#supported-uploaders","text":"An Uploader is a mechanism or system for uploading the CGM data from your sensor to your Nightscout site. This can be either an electronic solution (usually for older devices), or just a simple app installed on your phone (for most newer systems) that connects to the sensor/pump and then uploads this data. The type of Uploader needed will depend on the type of CGM system being used. In this page, we will break the different systems down by manufacturer, then further by sensor type. Once you are clear about the type of sensor and upload system you will be using, you can find detailed configuration information for each one here .","title":"Supported Uploaders"},{"location":"uploader/uploaders/#dexcom","text":"","title":"Dexcom"},{"location":"uploader/uploaders/#dexcom-g5g6","text":"If you are using the Dexcom G5 and G6 sensors connected to the Dexcom app on your phone, it will upload directly to the Dexcom servers (also still known as \"Dexcom Share\") and you won't need to use any extra uploader or master device. For this to work, Nightscout must be configured to use the bridge plug-in and will then automatically pull the CGM information directly from the Dexcom servers in real-time. Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing data using Dexcom Share and the bridge plugin. Please note that at this time (early 2021), the Dexcom G5 system is effectively obsolete but many people are still using stocks of old sensors and transmitters. If you don't want to use the official Dexcom apps, then you can use open-source software apps for your Dexcom sensor to connect, display, alarm and also upload to Nightscout: Android : xDrip+ for G4, G5 and G6. iOS : Spike or xDrip4iOS for G4, G5 and older G6 transmitters ( not Firefly ) Dexcom \"Firefly\" Transmitters Any transmitter made before Dexcom switched to the \"firefly\" range of G6 transmitters is compatible with Spike or xDrip4iOS . Although there are slight physical differences, the easiest way to check is to look at the Transmitter ID. If it starts with 80xxxx or 81yxxx (where y is a number) then it is a pre-Firefly transmitter and is compatible. Most of the useable transmitters that fall into this category at the present time (early 2021) are generally rebatteried or rechargeable/modified 80xxxx or 81xxxx transmitters. Loop and AAPS will upload your data directly to Nightscout and will act as uploaders.","title":"Dexcom G5/G6"},{"location":"uploader/uploaders/#dexcom-g4-now-obsolete","text":"The Dexcom G4 system is now Dexcom G4 requires additional hardware, like a Wixel , an xDripKit or a compatible Android phone with an OTG cable connected to the receiver. Dexcom G4 Platinum (Share) requires you to carry the receiver to forward data to the uploader.","title":"Dexcom G4 (now obsolete)"},{"location":"uploader/uploaders/#medtronic","text":"If your sensor system is able to directly upload to CareLink then Nightscout might be able to get the information directly from the cloud using the mmconnect plugin. Unfortunately, this is not possible anymore using Heroku without a bridge device. You can use an Android phone with a private version of xDrip+ , a computer or a Raspberry Pi to bridge CareLink to Nightscout. If this isn't an option and your sensor/transmitter is connected to your pump (Medtronic 600 series pumps), then you'll need an Android phone connected with an OTG cable to your pump's connected glucose meter. The phone will need to run the 600 Series Uploader app.","title":"Medtronic"},{"location":"uploader/uploaders/#glucomen-day","text":"You can forward your data from GlucoLog Web using an AWS bridge documented here .","title":"Glucomen Day"},{"location":"uploader/uploaders/#tandem-tslim-x2","text":"You can synchronize your treatments one way from your Tandem Diabetes t:connect web/mobile application to Nightscout using a bridge app running via Pipenv or Docker as documented here .","title":"Tandem t:slim X2"},{"location":"uploader/uploaders/#abbott-freestyle-libre","text":"Non Bluetooth-enabled Freestyle Libre sensors will need an additional transmitter device fixed on top of the sensor to send readings to the uploader device. In release order here are some transmitter options: LimiTTer , BlueReader, Blucon, MiaoMiao, Bubble, and Droplet. Transmitter Compatibility The Libre environment is complex and evolves quickly. Before buying a transmitter, please join the respective Facebook groups and make sure that the transmitter you are planning to buy is compatible with your sensor type. Most of the transmitters have their own proprietary apps. Nearly all of these support the uploading of data to Nightscout (LinkBluCon, Tomato, Diabox, eDroplet, ...). Again, check the transmitter manufacturer's website and the relevant Facebook support groups for information. Open-source apps such as xDrip+ , Spike and xDrip4iOS also support most of the above transmitter devices. You can connect to the Libre 2 sensor ( EU only ) without an additional transmitter using xDrip+ , Diabox or xDrip4iOS .","title":"Abbott Freestyle Libre"},{"location":"uploader/uploaders/#eversense","text":"In order to get data from the Eversense CGM system, you will need to use the ESEL app running on an Android phone.","title":"Eversense"},{"location":"vendor/components-bootstrap/","text":"Bootstrap \u2301 Shim repository for Bootstrap . This package just provides the basic Bootstrap JavaScript in the package. This means that although the stylesheets are there, you will be required to provide your own means of including the styles. Package Managers \u2301 Bower : components-bootstrap Component : components/bootstrap Composer : components/bootstrap","title":"Index"},{"location":"vendor/components-bootstrap/#bootstrap","text":"Shim repository for Bootstrap . This package just provides the basic Bootstrap JavaScript in the package. This means that although the stylesheets are there, you will be required to provide your own means of including the styles.","title":"Bootstrap"},{"location":"vendor/components-bootstrap/#package-managers","text":"Bower : components-bootstrap Component : components/bootstrap Composer : components/bootstrap","title":"Package Managers"},{"location":"vendor/octokat/","text":"Octokat.js \u2301 Octokat.js provides a minimal higher-level wrapper around GitHub's API . It is being developed in the context of github-bookeditor , an EPUB3 Textbook editor for GitHub. This package can also be used in nodejs or as an AMD module in the browser. Key Features \u2301 Works in nodejs , an AMD module in the browser, and as a bower library Handles text and binary files Exposes everything available via the GitHub API (repos, teams, events, hooks, emojis, etc.) Supports ETag caching Paged results Node-style callbacks as well as optional Promises (to avoid those debates) 100% of the GitHub API Starring and Following repositories, users, and organizations Editing Team and Organization Membership User/Org/Repo events and notifications Listeners for rate limit changes Public Keys Hooks (commit, comment, etc.) Uses Angular, jQuery, or native promises if available Markdown generation Preview APIs (Deployments, Teams, etc) Enterprise APIs For the full list of supported methods see the Travis tests , the ./test directory, or ./src/grammar.coffee . Usage \u2301 All asynchronous methods accept a Node.js-style callback and return a Common-JS Promise . In a browser without RequireJS \u2301 Create an Octokat instance. var octo = new Octokat({ username: \"USER_NAME\", password: \"PASSWORD\" }); var cb = function (err, val) { console.log(val); }; octo.zen.read(cb); octo.repos('philschatz', 'octokat.js').fetch(cb); // Fetch repo info octo.me.starred('philschatz', 'octokat.js').add(cb); // Star a repo Or if you prefer OAuth: var octo = new Octokat({ token: \"OAUTH_TOKEN\" }); In a browser using RequireJS \u2301 define(['octokat'], function(Octokat) { var octo = new Octokat({ username: \"YOU_USER\", password: \"YOUR_PASSWORD\" }); }); In Node.js \u2301 Install instructions: npm install octokat --save var Octokat = require('octokat'); var octo = new Octokat({ username: \"YOU_USER\", password: \"YOUR_PASSWORD\" }); var cb = function (err, val) { console.log(val); }; octo.zen.read(cb); octo.repos('philschatz', 'octokat.js').fetch(cb); // Fetch repo info octo.me.starred('philschatz', 'octokat.js').add(cb); // Star a repo Using Generators in Node.js 0.11 (or EcmaScript 6 browsers) \u2301 This requires Node.js 0.11 with the --harmony-generators flag: var co = require('co'); var Octokat = require('octokat'); var octo = new Octokat(); var fn = function *() { var zen = yield octo.zen.read(); var info = yield octo.repos('philschatz', 'octokat.js').fetch(); console.log(zen); console.log(info); }; co(fn)(); Using bower \u2301 This file can be included using the bower package manager: bower install octokat --save Setup \u2301 This is all you need to get up and running: <script src=\"../dist/octokat.js\"></script> <script> var octo = new Octokat(); octo.zen.read(function(err, message) { if (err) { throw new Error(err); } alert(message); }); </script> Promises (Optional) \u2301 octokat.js has the following optional dependencies when used in a browser: A Promise API (supports jQuery, AngularJS, or a Promise polyfill) If you are already using jQuery or AngularJS in your project just be sure to include them before Octokat and it will use their Promise API. Otherwise, you can include a Promise polyfill like jakearchibald/es6-promise : <script src=\"./node_modules/es6-promise/dist/promise-0.1.2.js\"></script> <script src=\"./octokat.js\"> Preview new APIs \u2301 To use the APIs available for preview just add a acceptHeader when instantiating Octokat. For example: var octo = new Octokat({ token: 'API_TOKEN' acceptHeader: 'application/vnd.github.cannonball-preview+json' }); Enterprise APIs \u2301 To use the Enterprise APIs add the root URL when instantiating Octokat: var octo = new Octokat({ token: 'API_TOKEN' rootUrl: 'https://example.com/api/v3/' }); Testing \u2301 npm test will run the mocha tests for Node.js and the browser. Additionally, they can be run in the browser by starting a web server and going to ./test/index.html . About the Library \u2301 Overview \u2301 This library closely mirrors the https://developer.github.com/v3 documentation. For example, GET /repos/:owner/:repo becomes octo.repos(owner, repo).fetch() and POST /repos/:owner/:repo/issues/:number/comments becomes octo.repos(owner, repo).issues(number).comments.create(params) . Promises and Callbacks \u2301 This library supports Node.js-style callbacks as well as Promises. To use a callback, just specify it as the last argument to a method. To use a Promise, do not specify a callback and the return value will be a Promise. Example (get information on a repo): # Using callbacks octo.repos('philschatz', 'octokat.js').fetch (err, repo) -> console.error(err) if err # Do fancy stuff... # Using Promises octo.repos('philschatz', 'octokat.js').fetch() .then (repo) -> # Do fancy stuff .then null, (err) -> console.error(err) Chaining \u2301 You construct the URL by chaining properties and methods together and an async call is made once a verb method is called (see below). Example: octo = new Octokat() repo = octo.repos('philschatz', 'octokat.js') # Check if the current user is a collaborator on a repo repo.collaborators.contains(USER) .then (isCollaborator) -> # If not, then star the Repo unless isCollaborator repo.star.add() .then () -> # Done! Or, update a specific comment: octo = new Octokat(token: ...) octo.repos('philschatz', 'octokat.js').issues(1).comments(123123).update(body: 'Hello') .then () -> # Done! The basic structure of these methods is: .foos.fetch({optionalStuff:...}) yields a list of items (possibly paginated) .foos(id).fetch(...) yields a single item (issue, repo, user) .foos.contains(id) tests membership in a list (yields true/false) .foos.create(...) creates a new foo .foos(id).add() adds an existing User/Repo to the list .foos(id).remove() removes a member from a list or deletes the object and yields a boolean indicating success JSON with methods (Hypermedia) \u2301 GitHub provides URL patterns in its JSON responses. These are automatically converted into methods. For example: octo.repos('philschatz', 'octokat.js').fetch() .then (repo) -> # GitHub returns a JSON which contains something like compare_url: 'https://..../compare/{head}...{base} # This is converted to a method that accepts 2 arguments repo.compare(sha1, sha2).fetch() .then (comparison) -> # Done! Paged Results \u2301 If a .fetch() returns paged results then nextPage() , previousPage() , firstPage() and lastPage() are added to the returned JSON. For example: octo.repos('philschatz', 'octokat.js').commits.fetch() .then (someCommits) -> someCommits.nextPage() .then (moreCommits) -> # Done! Development \u2301 Run npm install Run grunt dist to generate the files in the ./dist directory The unit tests are named to illustrate examples of using the API. See Travis tests or run npm test to see them. linkedin/sepia is used to generate recorded results from GitHub and philschatz/sepia.js uses them in the browser. If you are adding tests be sure to include the updated fixtures in the Pull Request.","title":"Octokat.js [![Build Status](https://travis-ci.org/philschatz/octokat.js.png)](https://travis-ci.org/philschatz/octokat.js)"},{"location":"vendor/octokat/#octokatjs","text":"Octokat.js provides a minimal higher-level wrapper around GitHub's API . It is being developed in the context of github-bookeditor , an EPUB3 Textbook editor for GitHub. This package can also be used in nodejs or as an AMD module in the browser.","title":"Octokat.js"},{"location":"vendor/octokat/#key-features","text":"Works in nodejs , an AMD module in the browser, and as a bower library Handles text and binary files Exposes everything available via the GitHub API (repos, teams, events, hooks, emojis, etc.) Supports ETag caching Paged results Node-style callbacks as well as optional Promises (to avoid those debates) 100% of the GitHub API Starring and Following repositories, users, and organizations Editing Team and Organization Membership User/Org/Repo events and notifications Listeners for rate limit changes Public Keys Hooks (commit, comment, etc.) Uses Angular, jQuery, or native promises if available Markdown generation Preview APIs (Deployments, Teams, etc) Enterprise APIs For the full list of supported methods see the Travis tests , the ./test directory, or ./src/grammar.coffee .","title":"Key Features"},{"location":"vendor/octokat/#usage","text":"All asynchronous methods accept a Node.js-style callback and return a Common-JS Promise .","title":"Usage"},{"location":"vendor/octokat/#in-a-browser-without-requirejs","text":"Create an Octokat instance. var octo = new Octokat({ username: \"USER_NAME\", password: \"PASSWORD\" }); var cb = function (err, val) { console.log(val); }; octo.zen.read(cb); octo.repos('philschatz', 'octokat.js').fetch(cb); // Fetch repo info octo.me.starred('philschatz', 'octokat.js').add(cb); // Star a repo Or if you prefer OAuth: var octo = new Octokat({ token: \"OAUTH_TOKEN\" });","title":"In a browser without RequireJS"},{"location":"vendor/octokat/#in-a-browser-using-requirejs","text":"define(['octokat'], function(Octokat) { var octo = new Octokat({ username: \"YOU_USER\", password: \"YOUR_PASSWORD\" }); });","title":"In a browser using RequireJS"},{"location":"vendor/octokat/#in-nodejs","text":"Install instructions: npm install octokat --save var Octokat = require('octokat'); var octo = new Octokat({ username: \"YOU_USER\", password: \"YOUR_PASSWORD\" }); var cb = function (err, val) { console.log(val); }; octo.zen.read(cb); octo.repos('philschatz', 'octokat.js').fetch(cb); // Fetch repo info octo.me.starred('philschatz', 'octokat.js').add(cb); // Star a repo","title":"In Node.js"},{"location":"vendor/octokat/#using-generators-in-nodejs-011-or-ecmascript-6-browsers","text":"This requires Node.js 0.11 with the --harmony-generators flag: var co = require('co'); var Octokat = require('octokat'); var octo = new Octokat(); var fn = function *() { var zen = yield octo.zen.read(); var info = yield octo.repos('philschatz', 'octokat.js').fetch(); console.log(zen); console.log(info); }; co(fn)();","title":"Using Generators in Node.js 0.11 (or EcmaScript 6 browsers)"},{"location":"vendor/octokat/#using-bower","text":"This file can be included using the bower package manager: bower install octokat --save","title":"Using bower"},{"location":"vendor/octokat/#setup","text":"This is all you need to get up and running: <script src=\"../dist/octokat.js\"></script> <script> var octo = new Octokat(); octo.zen.read(function(err, message) { if (err) { throw new Error(err); } alert(message); }); </script>","title":"Setup"},{"location":"vendor/octokat/#promises-optional","text":"octokat.js has the following optional dependencies when used in a browser: A Promise API (supports jQuery, AngularJS, or a Promise polyfill) If you are already using jQuery or AngularJS in your project just be sure to include them before Octokat and it will use their Promise API. Otherwise, you can include a Promise polyfill like jakearchibald/es6-promise : <script src=\"./node_modules/es6-promise/dist/promise-0.1.2.js\"></script> <script src=\"./octokat.js\">","title":"Promises (Optional)"},{"location":"vendor/octokat/#preview-new-apis","text":"To use the APIs available for preview just add a acceptHeader when instantiating Octokat. For example: var octo = new Octokat({ token: 'API_TOKEN' acceptHeader: 'application/vnd.github.cannonball-preview+json' });","title":"Preview new APIs"},{"location":"vendor/octokat/#enterprise-apis","text":"To use the Enterprise APIs add the root URL when instantiating Octokat: var octo = new Octokat({ token: 'API_TOKEN' rootUrl: 'https://example.com/api/v3/' });","title":"Enterprise APIs"},{"location":"vendor/octokat/#testing","text":"npm test will run the mocha tests for Node.js and the browser. Additionally, they can be run in the browser by starting a web server and going to ./test/index.html .","title":"Testing"},{"location":"vendor/octokat/#about-the-library","text":"","title":"About the Library"},{"location":"vendor/octokat/#overview","text":"This library closely mirrors the https://developer.github.com/v3 documentation. For example, GET /repos/:owner/:repo becomes octo.repos(owner, repo).fetch() and POST /repos/:owner/:repo/issues/:number/comments becomes octo.repos(owner, repo).issues(number).comments.create(params) .","title":"Overview"},{"location":"vendor/octokat/#promises-and-callbacks","text":"This library supports Node.js-style callbacks as well as Promises. To use a callback, just specify it as the last argument to a method. To use a Promise, do not specify a callback and the return value will be a Promise. Example (get information on a repo): # Using callbacks octo.repos('philschatz', 'octokat.js').fetch (err, repo) -> console.error(err) if err # Do fancy stuff... # Using Promises octo.repos('philschatz', 'octokat.js').fetch() .then (repo) -> # Do fancy stuff .then null, (err) -> console.error(err)","title":"Promises and Callbacks"},{"location":"vendor/octokat/#chaining","text":"You construct the URL by chaining properties and methods together and an async call is made once a verb method is called (see below). Example: octo = new Octokat() repo = octo.repos('philschatz', 'octokat.js') # Check if the current user is a collaborator on a repo repo.collaborators.contains(USER) .then (isCollaborator) -> # If not, then star the Repo unless isCollaborator repo.star.add() .then () -> # Done! Or, update a specific comment: octo = new Octokat(token: ...) octo.repos('philschatz', 'octokat.js').issues(1).comments(123123).update(body: 'Hello') .then () -> # Done! The basic structure of these methods is: .foos.fetch({optionalStuff:...}) yields a list of items (possibly paginated) .foos(id).fetch(...) yields a single item (issue, repo, user) .foos.contains(id) tests membership in a list (yields true/false) .foos.create(...) creates a new foo .foos(id).add() adds an existing User/Repo to the list .foos(id).remove() removes a member from a list or deletes the object and yields a boolean indicating success","title":"Chaining"},{"location":"vendor/octokat/#json-with-methods-hypermedia","text":"GitHub provides URL patterns in its JSON responses. These are automatically converted into methods. For example: octo.repos('philschatz', 'octokat.js').fetch() .then (repo) -> # GitHub returns a JSON which contains something like compare_url: 'https://..../compare/{head}...{base} # This is converted to a method that accepts 2 arguments repo.compare(sha1, sha2).fetch() .then (comparison) -> # Done!","title":"JSON with methods (Hypermedia)"},{"location":"vendor/octokat/#paged-results","text":"If a .fetch() returns paged results then nextPage() , previousPage() , firstPage() and lastPage() are added to the returned JSON. For example: octo.repos('philschatz', 'octokat.js').commits.fetch() .then (someCommits) -> someCommits.nextPage() .then (moreCommits) -> # Done!","title":"Paged Results"},{"location":"vendor/octokat/#development","text":"Run npm install Run grunt dist to generate the files in the ./dist directory The unit tests are named to illustrate examples of using the API. See Travis tests or run npm test to see them. linkedin/sepia is used to generate recorded results from GitHub and philschatz/sepia.js uses them in the browser. If you are adding tests be sure to include the updated fixtures in the Pull Request.","title":"Development"},{"location":"vendors/","text":"Vendor Overview \u2301 The mainly used solution for classic DIY is Salesforce Heroku and MongoDB Atlas, but Nightscout can be deployed on various platforms. Comparison \u2301 Vendor Install and maintenance Cost (USD) Support Community Contributions Web page Database Complexity DIY Free - 7$/month DIY None Yes No Medium DIY Free - 9$/month DIY None No Yes Medium Managed 11.99$/month Contributors Yes Yes Low DIY variable DIY Research Yes No High DIY 6$/month DIY None Yes Yes High DIY 3$/month DIY None Yes Yes High DIY Hardware DIY None Yes Yes High DIY Hardware DIY None Yes Yes High Salesforce Heroku + MongoDB Atlas \u2301 + This is the traditional DIY Nightscout. T1Pal \u2301 T1Pal is Nightscout as a service, created by a Nightscout core developer. Microsoft Azure + MongoDB Atlas \u2301 + Azure was the previous traditional DIY Nightscout and was abandoned due to costs. Anybody knowing how to deploy a recent version of Nightscout in Azure is welcome to PR the documentation with a sequence of operations.","title":"Vendor Overview"},{"location":"vendors/#vendor-overview","text":"The mainly used solution for classic DIY is Salesforce Heroku and MongoDB Atlas, but Nightscout can be deployed on various platforms.","title":"Vendor Overview"},{"location":"vendors/#comparison","text":"Vendor Install and maintenance Cost (USD) Support Community Contributions Web page Database Complexity DIY Free - 7$/month DIY None Yes No Medium DIY Free - 9$/month DIY None No Yes Medium Managed 11.99$/month Contributors Yes Yes Low DIY variable DIY Research Yes No High DIY 6$/month DIY None Yes Yes High DIY 3$/month DIY None Yes Yes High DIY Hardware DIY None Yes Yes High DIY Hardware DIY None Yes Yes High","title":"Comparison"},{"location":"vendors/#salesforce-heroku-mongodb-atlas","text":"+ This is the traditional DIY Nightscout.","title":"Salesforce Heroku + MongoDB Atlas"},{"location":"vendors/#t1pal","text":"T1Pal is Nightscout as a service, created by a Nightscout core developer.","title":"T1Pal"},{"location":"vendors/#microsoft-azure-mongodb-atlas","text":"+ Azure was the previous traditional DIY Nightscout and was abandoned due to costs. Anybody knowing how to deploy a recent version of Nightscout in Azure is welcome to PR the documentation with a sequence of operations.","title":"Microsoft Azure + MongoDB Atlas"},{"location":"vendors/T1Pal/control_panel/","text":"Nightscout Configuration \u2301 APPLIES TO: You can change your default settings in the Control Panel from Configure Nightscout . API_SECRET \u2301 This is an important password Knowing your site's API Secret gives anybody full access to your Nightscout data, allows uploading to your site and uncontrolled access. Make sure you keep this password secret and avoid exposing it publicly. To reveal the API_SECRET use the Api Secret button, it will display just below. Use the View link below the Api Secret to quickly view your site. CUSTOM TITLE ( Nightscout ) \u2301 This will change your Nightscout displayed name (top left) from default. The display name for the Nightscout site. Appears in the upper left of the main view. Often set to the name of the CGM wearer. CLOCK MODE \u2301 Clock view will show you a simple view with your BG. You can configure more clock views from your site, see here . You can set your preferences on each browser view using the drawer menu then Settings. If you want all browsers to open with a default configuration you need to customize it with the options shown below. TIME FORMAT ( 12 ) \u2301 Possible values 12 or 24 THEME \u2301 Default setting for new browser views, for the color theme of the CGM graph. default colors NIGHT MODE ( off ) \u2301 Possible values on or off basal (Basal Profile) \u2301 Uses the basal field from the treatment profile . You can define the rendering of your basal, possible values are: none (basal not displayed), default , or icicle (inverted) Plugins \u2301 Plugins are used to extend the way information is displayed, how notifications are sent, alarms are triggered, and more. If you want the enabled plugins to show by default on any browser , you should add them to the Enabled plugins list. To learn more about plugins see here . DISPLAY UNITS \u2301 Preferred BG units for the site: mg/dl or mmol (mmol/l). Advanced Plugins: \u2301 careportal (Care Portal) \u2301 An optional form to enter treatments. Care Portal is an important plugin that gives access to the Log a treatment interface. Unlock it entering your API secret with the lock icon top right, then use the + icon to log a treatment. More information here . cage (Cannula Age) / sage (Sensor Age) / iage (Insulin Age) / bage (Battery Age) \u2301 cage (Cannula Age) \u2301 Calculates the number of hours since the last Site Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming cannula change. CANNULA AGE DISPLAY ( hours ) - Possible values are hours or days . If days is selected and age of canula is greater than 24h number is displayed in days and hours CANNULA AGE INFO ( 44 ) - If time since last Site Change matches this value, user will be warned of upcoming cannula change CANNULA AGE WARNING ( 48 ) - If time since last Site Change matches this value, user will be alarmed to to change the cannula CANNULA AGE URGENT ( 72 ) - If time since last Site Change matches this value, user will be issued a persistent warning of overdue change. sage (Sensor Age) \u2301 Calculates the number of days and hours since the last Sensor Start and Sensor Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming sensor change. SENSOR AGE INFO ( 144 ) - If time since last sensor event matches this value, user will be warned of upcoming sensor change SENSOR AGE WARNING ( 164 ) - If time since last sensor event matches this value, user will be alarmed to to change/restart the sensor SENSOR AGE URGENT ( 166 ) - If time since last sensor event matches this value, user will be issued a persistent warning of overdue change. iage (Insulin Age) \u2301 Calculates the number of days and hours since the last Insulin Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming insulin reservoir change. INSULIN AGE INFO ( 44 ) - If time since last Insulin Change matches this value, user will be warned of upcoming insulin reservoir change INSULIN AGE WARNING ( 48 ) - If time since last Insulin Change matches this value, user will be alarmed to to change the insulin reservoir INSULIN AGE URGENT ( 72 ) - If time since last Insulin Change matches this value, user will be issued a persistent warning of overdue change. bage (Battery Age) \u2301 Calculates the number of days and hours since the last Pump Battery Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming pump battery change. BATTERY AGE DISPLAY ( days ) - Set to hours to display time since last Pump Battery Change in hours only. BATTERY AGE INFO ( 312 ) - If time since last Pump Battery Change matches this value hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days). BATTERY AGE WARNING ( 336 ) - If time since last Pump Battery Change matches this value hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days). BATTERY AGE URGENT ( 360 ) - If time since last Pump Battery Change matches this value hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days). pump (Pump Monitoring) \u2301 Generic Pump Monitoring ENABLE ALERTS ( display ) - Set to alarm to enable notifications for Pump battery and reservoir. WARN ON SUSPEND ( display ) - Set to alert to get an alarm when the pump is suspended. PUMP FIELDS - The fields to display by default. Any of the following fields: reservoir , battery , clock , status , and device PUMP RETRO FIELDS - The fields to display in retro mode. Any of the above fields. Alarms \u2301 These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI. ALARM TYPES \u2301 TYPES Keep the simple type if you want Custom threshold parameters (setup below) to be used. Simple and/or Predictive . Simple alarms trigger when BG crosses the various thresholds set below. Predict alarms uses highly tuned formula that forecasts where the BG is going based on its trend. You will not get warnings when crossing any of the BG thresholds set below when using only the predict type. When last reading is more than \u2301 A warning alarm when CGM data hasn't been received in the number of minutes set in the field. warn or do nothing . Urgent alarm when time ago exceeds \u2301 An urgent alarm when CGM data hasn't been received in the number of minutes set in the field. alarm or do nothing . BG Thresholds These values are the ones that will trigger simple alarms. They are expressed in the unit you selected with DISPLAY_UNITS . High BG \u2301 Urgent High BG threshold, triggers the ALARM_URGENT_HIGH alarm. Target Top \u2301 High BG threshold, triggers the ALARM_HIGH alarm. Target Bottom \u2301 Low BG threshold, triggers the ALARM_LOW alarm. Low BG \u2301 Urgent Low BG threshold, triggers the ALARM_URGENT_LOW alarm. ALARM_* ALARM_URGENT_* You can setup alarms, so that when your Nightscout page is open and the alarm enabled, above ( HIGH ) or below ( LOW ) a certain threshold, a sound might play. Red bin \u2301 Not yet enabled.","title":"Nightscout Configuration"},{"location":"vendors/T1Pal/control_panel/#nightscout-configuration","text":"APPLIES TO: You can change your default settings in the Control Panel from Configure Nightscout .","title":"Nightscout Configuration"},{"location":"vendors/T1Pal/control_panel/#api_secret","text":"This is an important password Knowing your site's API Secret gives anybody full access to your Nightscout data, allows uploading to your site and uncontrolled access. Make sure you keep this password secret and avoid exposing it publicly. To reveal the API_SECRET use the Api Secret button, it will display just below. Use the View link below the Api Secret to quickly view your site.","title":"API_SECRET"},{"location":"vendors/T1Pal/control_panel/#custom-title-nightscout","text":"This will change your Nightscout displayed name (top left) from default. The display name for the Nightscout site. Appears in the upper left of the main view. Often set to the name of the CGM wearer.","title":"CUSTOM TITLE (Nightscout)"},{"location":"vendors/T1Pal/control_panel/#clock-mode","text":"Clock view will show you a simple view with your BG. You can configure more clock views from your site, see here . You can set your preferences on each browser view using the drawer menu then Settings. If you want all browsers to open with a default configuration you need to customize it with the options shown below.","title":"CLOCK MODE"},{"location":"vendors/T1Pal/control_panel/#time-format-12","text":"Possible values 12 or 24","title":"TIME FORMAT (12)"},{"location":"vendors/T1Pal/control_panel/#theme","text":"Default setting for new browser views, for the color theme of the CGM graph. default colors","title":"THEME"},{"location":"vendors/T1Pal/control_panel/#night-mode-off","text":"Possible values on or off","title":"NIGHT MODE (off)"},{"location":"vendors/T1Pal/control_panel/#basal-basal-profile","text":"Uses the basal field from the treatment profile . You can define the rendering of your basal, possible values are: none (basal not displayed), default , or icicle (inverted)","title":"basal (Basal Profile)"},{"location":"vendors/T1Pal/control_panel/#plugins","text":"Plugins are used to extend the way information is displayed, how notifications are sent, alarms are triggered, and more. If you want the enabled plugins to show by default on any browser , you should add them to the Enabled plugins list. To learn more about plugins see here .","title":"Plugins"},{"location":"vendors/T1Pal/control_panel/#display-units","text":"Preferred BG units for the site: mg/dl or mmol (mmol/l).","title":"DISPLAY UNITS"},{"location":"vendors/T1Pal/control_panel/#advanced-plugins","text":"","title":"Advanced Plugins:"},{"location":"vendors/T1Pal/control_panel/#careportal-care-portal","text":"An optional form to enter treatments. Care Portal is an important plugin that gives access to the Log a treatment interface. Unlock it entering your API secret with the lock icon top right, then use the + icon to log a treatment. More information here .","title":"careportal (Care Portal)"},{"location":"vendors/T1Pal/control_panel/#cage-cannula-age-sage-sensor-age-iage-insulin-age-bage-battery-age","text":"","title":"cage (Cannula Age) / sage (Sensor Age) / iage (Insulin Age) / bage (Battery Age)"},{"location":"vendors/T1Pal/control_panel/#cage-cannula-age","text":"Calculates the number of hours since the last Site Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming cannula change. CANNULA AGE DISPLAY ( hours ) - Possible values are hours or days . If days is selected and age of canula is greater than 24h number is displayed in days and hours CANNULA AGE INFO ( 44 ) - If time since last Site Change matches this value, user will be warned of upcoming cannula change CANNULA AGE WARNING ( 48 ) - If time since last Site Change matches this value, user will be alarmed to to change the cannula CANNULA AGE URGENT ( 72 ) - If time since last Site Change matches this value, user will be issued a persistent warning of overdue change.","title":"cage (Cannula Age)"},{"location":"vendors/T1Pal/control_panel/#sage-sensor-age","text":"Calculates the number of days and hours since the last Sensor Start and Sensor Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming sensor change. SENSOR AGE INFO ( 144 ) - If time since last sensor event matches this value, user will be warned of upcoming sensor change SENSOR AGE WARNING ( 164 ) - If time since last sensor event matches this value, user will be alarmed to to change/restart the sensor SENSOR AGE URGENT ( 166 ) - If time since last sensor event matches this value, user will be issued a persistent warning of overdue change.","title":"sage (Sensor Age)"},{"location":"vendors/T1Pal/control_panel/#iage-insulin-age","text":"Calculates the number of days and hours since the last Insulin Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming insulin reservoir change. INSULIN AGE INFO ( 44 ) - If time since last Insulin Change matches this value, user will be warned of upcoming insulin reservoir change INSULIN AGE WARNING ( 48 ) - If time since last Insulin Change matches this value, user will be alarmed to to change the insulin reservoir INSULIN AGE URGENT ( 72 ) - If time since last Insulin Change matches this value, user will be issued a persistent warning of overdue change.","title":"iage (Insulin Age)"},{"location":"vendors/T1Pal/control_panel/#bage-battery-age","text":"Calculates the number of days and hours since the last Pump Battery Change treatment that was recorded. ENABLE ALERTS ( display ) - Set to alert to enable notifications to remind you of upcoming pump battery change. BATTERY AGE DISPLAY ( days ) - Set to hours to display time since last Pump Battery Change in hours only. BATTERY AGE INFO ( 312 ) - If time since last Pump Battery Change matches this value hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days). BATTERY AGE WARNING ( 336 ) - If time since last Pump Battery Change matches this value hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days). BATTERY AGE URGENT ( 360 ) - If time since last Pump Battery Change matches this value hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).","title":"bage (Battery Age)"},{"location":"vendors/T1Pal/control_panel/#pump-pump-monitoring","text":"Generic Pump Monitoring ENABLE ALERTS ( display ) - Set to alarm to enable notifications for Pump battery and reservoir. WARN ON SUSPEND ( display ) - Set to alert to get an alarm when the pump is suspended. PUMP FIELDS - The fields to display by default. Any of the following fields: reservoir , battery , clock , status , and device PUMP RETRO FIELDS - The fields to display in retro mode. Any of the above fields.","title":"pump (Pump Monitoring)"},{"location":"vendors/T1Pal/control_panel/#alarms","text":"These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.","title":"Alarms"},{"location":"vendors/T1Pal/control_panel/#alarm-types","text":"TYPES Keep the simple type if you want Custom threshold parameters (setup below) to be used. Simple and/or Predictive . Simple alarms trigger when BG crosses the various thresholds set below. Predict alarms uses highly tuned formula that forecasts where the BG is going based on its trend. You will not get warnings when crossing any of the BG thresholds set below when using only the predict type.","title":"ALARM TYPES"},{"location":"vendors/T1Pal/control_panel/#when-last-reading-is-more-than","text":"A warning alarm when CGM data hasn't been received in the number of minutes set in the field. warn or do nothing .","title":"When last reading is more than"},{"location":"vendors/T1Pal/control_panel/#urgent-alarm-when-time-ago-exceeds","text":"An urgent alarm when CGM data hasn't been received in the number of minutes set in the field. alarm or do nothing . BG Thresholds These values are the ones that will trigger simple alarms. They are expressed in the unit you selected with DISPLAY_UNITS .","title":"Urgent alarm when time ago exceeds"},{"location":"vendors/T1Pal/control_panel/#high-bg","text":"Urgent High BG threshold, triggers the ALARM_URGENT_HIGH alarm.","title":"High BG"},{"location":"vendors/T1Pal/control_panel/#target-top","text":"High BG threshold, triggers the ALARM_HIGH alarm.","title":"Target Top"},{"location":"vendors/T1Pal/control_panel/#target-bottom","text":"Low BG threshold, triggers the ALARM_LOW alarm.","title":"Target Bottom"},{"location":"vendors/T1Pal/control_panel/#low-bg","text":"Urgent Low BG threshold, triggers the ALARM_URGENT_LOW alarm. ALARM_* ALARM_URGENT_* You can setup alarms, so that when your Nightscout page is open and the alarm enabled, above ( HIGH ) or below ( LOW ) a certain threshold, a sound might play.","title":"Low BG"},{"location":"vendors/T1Pal/control_panel/#red-bin","text":"Not yet enabled.","title":"Red bin"},{"location":"vendors/T1Pal/new_user/","text":"New T1Pal Users \u2301 What Is T1Pal ? \u2301 T1Pal provides an always maintained and updated Nightscout site. Privacy . Unlike DIY, the default T1Pal site is private. Only the account owner can view Nightscout. Getting started guide explains getting glucose and insulin data into Nightscout. Storage is managed, never worry about MongoDB again. Unlimited Shares: Unlike most apps, there is no installation required for sharing Nightscout. Create as many secret sharing links as you like and share them with anyone you want. Revoke or delete access any time. We make the technology behind Nightscout and manage it for you. There are some important differences between T1Pal and DIY. While most plugins are available, there are a few interacting with third party services that are on our future roadmap. See our FAQ on differences between T1Pal DIY for the full details. Here is an overview of the sequence required to create your Nightscout site with T1Pal . \u2301 APPLIES TO: Create an account \u2301 Click this link https://t1pal.com/getting-started/starting/home Select Select Plan Sign up with a Google account (create one if necessary) Select a username, confirm mail and accept conditions. Click Create My Account Enter your billing information and Confirm Configure your data source \u2301 Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing from Dexcom Share. Select your data source If you use a Dexcom sensor enter your Clarity credentials then Save connection If you're using another uploader select review details Then start uploading in the Using Nightscout uploaders? section Select Create uploader In the upper part you'll find your Nightscout API_SECRET and below the URL, copy and paste them in your uploader. Refer to uploader settings here . If you're uploading from xDrip+ you can scan the QR code like this: Enable a treatments data source \u2301 If your uploader sends treatments (insulin, carbs, basal, ...) you can visualize therapy. Enable Visualize therapy and select the data source, Save changes . View your site and create a new profile \u2301 From your account home, go to Visit my Nightscout Upon first access you will be required to create a new profile. Select OK File all required fields as shown here . Make sure you enter your correct time zone. You're automatically authenticated when accessing your site from the T1Pal portal. Configure more settings \u2301 If you need to customize your site you can find some Nightscout variables in your Control Panel .","title":"Nightscout as a service"},{"location":"vendors/T1Pal/new_user/#new-t1pal-users","text":"","title":"New T1Pal Users"},{"location":"vendors/T1Pal/new_user/#what-is-t1pal","text":"T1Pal provides an always maintained and updated Nightscout site. Privacy . Unlike DIY, the default T1Pal site is private. Only the account owner can view Nightscout. Getting started guide explains getting glucose and insulin data into Nightscout. Storage is managed, never worry about MongoDB again. Unlimited Shares: Unlike most apps, there is no installation required for sharing Nightscout. Create as many secret sharing links as you like and share them with anyone you want. Revoke or delete access any time. We make the technology behind Nightscout and manage it for you. There are some important differences between T1Pal and DIY. While most plugins are available, there are a few interacting with third party services that are on our future roadmap. See our FAQ on differences between T1Pal DIY for the full details.","title":"What Is T1Pal ?"},{"location":"vendors/T1Pal/new_user/#here-is-an-overview-of-the-sequence-required-to-create-your-nightscout-site-with-t1pal","text":"APPLIES TO:","title":"Here is an overview of the sequence required to create your Nightscout site with T1Pal ."},{"location":"vendors/T1Pal/new_user/#create-an-account","text":"Click this link https://t1pal.com/getting-started/starting/home Select Select Plan Sign up with a Google account (create one if necessary) Select a username, confirm mail and accept conditions. Click Create My Account Enter your billing information and Confirm","title":"Create an account"},{"location":"vendors/T1Pal/new_user/#configure-your-data-source","text":"Note If you use a DIY closed loop system it is recommended that you let it upload to Nightscout instead of importing from Dexcom Share. Select your data source If you use a Dexcom sensor enter your Clarity credentials then Save connection If you're using another uploader select review details Then start uploading in the Using Nightscout uploaders? section Select Create uploader In the upper part you'll find your Nightscout API_SECRET and below the URL, copy and paste them in your uploader. Refer to uploader settings here . If you're uploading from xDrip+ you can scan the QR code like this:","title":"Configure your data source"},{"location":"vendors/T1Pal/new_user/#enable-a-treatments-data-source","text":"If your uploader sends treatments (insulin, carbs, basal, ...) you can visualize therapy. Enable Visualize therapy and select the data source, Save changes .","title":"Enable a treatments data source"},{"location":"vendors/T1Pal/new_user/#view-your-site-and-create-a-new-profile","text":"From your account home, go to Visit my Nightscout Upon first access you will be required to create a new profile. Select OK File all required fields as shown here . Make sure you enter your correct time zone. You're automatically authenticated when accessing your site from the T1Pal portal.","title":"View your site and create a new profile"},{"location":"vendors/T1Pal/new_user/#configure-more-settings","text":"If you need to customize your site you can find some Nightscout variables in your Control Panel .","title":"Configure more settings"},{"location":"vendors/azure/new_azure/","text":"Coming soon","title":"New azure"},{"location":"vendors/digitalocean/","text":"digitalocean \u2301 Coming soon https://gist.github.com/DrCR77/eb08b830d4f31092cf65a8a9976dc0a6","title":"digitalocean"},{"location":"vendors/digitalocean/#digitalocean","text":"Coming soon https://gist.github.com/DrCR77/eb08b830d4f31092cf65a8a9976dc0a6","title":"digitalocean"},{"location":"vendors/docker/new_user/","text":"Coming soon... https://hub.docker.com/r/nightscout/cgm-remote-monitor","title":"New user"},{"location":"vendors/heroku/","text":"heroku \u2301 Coming soon","title":"heroku"},{"location":"vendors/heroku/#heroku","text":"Coming soon","title":"heroku"}]}